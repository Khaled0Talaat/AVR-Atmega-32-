
Calculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002d38  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000011a  00800060  00002d38  00002dac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001af4  00000000  00000000  00002ec8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000b56  00000000  00000000  000049bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000001e0  00000000  00000000  00005512  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000232  00000000  00000000  000056f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002891  00000000  00000000  00005924  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001628  00000000  00000000  000081b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013de  00000000  00000000  000097dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  0000abbc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000030f  00000000  00000000  0000adbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a56  00000000  00000000  0000b0cb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000bb21  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 e3       	ldi	r30, 0x38	; 56
      68:	fd e2       	ldi	r31, 0x2D	; 45
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 37       	cpi	r26, 0x7A	; 122
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 22 10 	call	0x2044	; 0x2044 <main>
      7a:	0c 94 9a 16 	jmp	0x2d34	; 0x2d34 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 1d 04 	call	0x83a	; 0x83a <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 db 04 	call	0x9b6	; 0x9b6 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 db 04 	call	0x9b6	; 0x9b6 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 63 16 	jmp	0x2cc6	; 0x2cc6 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a2 e7       	ldi	r26, 0x72	; 114
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 7f 16 	jmp	0x2cfe	; 0x2cfe <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 6f 16 	jmp	0x2cde	; 0x2cde <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f7 05 	call	0xbee	; 0xbee <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 8b 16 	jmp	0x2d16	; 0x2d16 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 6f 16 	jmp	0x2cde	; 0x2cde <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f7 05 	call	0xbee	; 0xbee <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 8b 16 	jmp	0x2d16	; 0x2d16 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 63 16 	jmp	0x2cc6	; 0x2cc6 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	82 e7       	ldi	r24, 0x72	; 114
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f7 05 	call	0xbee	; 0xbee <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 7f 16 	jmp	0x2cfe	; 0x2cfe <__epilogue_restores__>

00000622 <__divsf3>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 6b 16 	jmp	0x2cd6	; 0x2cd6 <__prologue_saves__+0x10>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	b9 e0       	ldi	r27, 0x09	; 9
     640:	eb 2e       	mov	r14, r27
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     662:	29 85       	ldd	r18, Y+9	; 0x09
     664:	22 30       	cpi	r18, 0x02	; 2
     666:	08 f4       	brcc	.+2      	; 0x66a <__divsf3+0x48>
     668:	7e c0       	rjmp	.+252    	; 0x766 <__divsf3+0x144>
     66a:	39 89       	ldd	r19, Y+17	; 0x11
     66c:	32 30       	cpi	r19, 0x02	; 2
     66e:	10 f4       	brcc	.+4      	; 0x674 <__divsf3+0x52>
     670:	b8 01       	movw	r22, r16
     672:	7c c0       	rjmp	.+248    	; 0x76c <__divsf3+0x14a>
     674:	8a 85       	ldd	r24, Y+10	; 0x0a
     676:	9a 89       	ldd	r25, Y+18	; 0x12
     678:	89 27       	eor	r24, r25
     67a:	8a 87       	std	Y+10, r24	; 0x0a
     67c:	24 30       	cpi	r18, 0x04	; 4
     67e:	11 f0       	breq	.+4      	; 0x684 <__divsf3+0x62>
     680:	22 30       	cpi	r18, 0x02	; 2
     682:	31 f4       	brne	.+12     	; 0x690 <__divsf3+0x6e>
     684:	23 17       	cp	r18, r19
     686:	09 f0       	breq	.+2      	; 0x68a <__divsf3+0x68>
     688:	6e c0       	rjmp	.+220    	; 0x766 <__divsf3+0x144>
     68a:	62 e7       	ldi	r22, 0x72	; 114
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	6e c0       	rjmp	.+220    	; 0x76c <__divsf3+0x14a>
     690:	34 30       	cpi	r19, 0x04	; 4
     692:	39 f4       	brne	.+14     	; 0x6a2 <__divsf3+0x80>
     694:	1d 86       	std	Y+13, r1	; 0x0d
     696:	1e 86       	std	Y+14, r1	; 0x0e
     698:	1f 86       	std	Y+15, r1	; 0x0f
     69a:	18 8a       	std	Y+16, r1	; 0x10
     69c:	1c 86       	std	Y+12, r1	; 0x0c
     69e:	1b 86       	std	Y+11, r1	; 0x0b
     6a0:	04 c0       	rjmp	.+8      	; 0x6aa <__divsf3+0x88>
     6a2:	32 30       	cpi	r19, 0x02	; 2
     6a4:	21 f4       	brne	.+8      	; 0x6ae <__divsf3+0x8c>
     6a6:	84 e0       	ldi	r24, 0x04	; 4
     6a8:	89 87       	std	Y+9, r24	; 0x09
     6aa:	b7 01       	movw	r22, r14
     6ac:	5f c0       	rjmp	.+190    	; 0x76c <__divsf3+0x14a>
     6ae:	2b 85       	ldd	r18, Y+11	; 0x0b
     6b0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6b2:	8b 89       	ldd	r24, Y+19	; 0x13
     6b4:	9c 89       	ldd	r25, Y+20	; 0x14
     6b6:	28 1b       	sub	r18, r24
     6b8:	39 0b       	sbc	r19, r25
     6ba:	3c 87       	std	Y+12, r19	; 0x0c
     6bc:	2b 87       	std	Y+11, r18	; 0x0b
     6be:	ed 84       	ldd	r14, Y+13	; 0x0d
     6c0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6c2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6c4:	18 89       	ldd	r17, Y+16	; 0x10
     6c6:	ad 88       	ldd	r10, Y+21	; 0x15
     6c8:	be 88       	ldd	r11, Y+22	; 0x16
     6ca:	cf 88       	ldd	r12, Y+23	; 0x17
     6cc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6ce:	ea 14       	cp	r14, r10
     6d0:	fb 04       	cpc	r15, r11
     6d2:	0c 05       	cpc	r16, r12
     6d4:	1d 05       	cpc	r17, r13
     6d6:	40 f4       	brcc	.+16     	; 0x6e8 <__divsf3+0xc6>
     6d8:	ee 0c       	add	r14, r14
     6da:	ff 1c       	adc	r15, r15
     6dc:	00 1f       	adc	r16, r16
     6de:	11 1f       	adc	r17, r17
     6e0:	21 50       	subi	r18, 0x01	; 1
     6e2:	30 40       	sbci	r19, 0x00	; 0
     6e4:	3c 87       	std	Y+12, r19	; 0x0c
     6e6:	2b 87       	std	Y+11, r18	; 0x0b
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	a0 e0       	ldi	r26, 0x00	; 0
     6f6:	b0 e4       	ldi	r27, 0x40	; 64
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	ea 14       	cp	r14, r10
     6fe:	fb 04       	cpc	r15, r11
     700:	0c 05       	cpc	r16, r12
     702:	1d 05       	cpc	r17, r13
     704:	40 f0       	brcs	.+16     	; 0x716 <__divsf3+0xf4>
     706:	28 2b       	or	r18, r24
     708:	39 2b       	or	r19, r25
     70a:	4a 2b       	or	r20, r26
     70c:	5b 2b       	or	r21, r27
     70e:	ea 18       	sub	r14, r10
     710:	fb 08       	sbc	r15, r11
     712:	0c 09       	sbc	r16, r12
     714:	1d 09       	sbc	r17, r13
     716:	b6 95       	lsr	r27
     718:	a7 95       	ror	r26
     71a:	97 95       	ror	r25
     71c:	87 95       	ror	r24
     71e:	ee 0c       	add	r14, r14
     720:	ff 1c       	adc	r15, r15
     722:	00 1f       	adc	r16, r16
     724:	11 1f       	adc	r17, r17
     726:	6f 5f       	subi	r22, 0xFF	; 255
     728:	7f 4f       	sbci	r23, 0xFF	; 255
     72a:	6f 31       	cpi	r22, 0x1F	; 31
     72c:	71 05       	cpc	r23, r1
     72e:	31 f7       	brne	.-52     	; 0x6fc <__divsf3+0xda>
     730:	da 01       	movw	r26, r20
     732:	c9 01       	movw	r24, r18
     734:	8f 77       	andi	r24, 0x7F	; 127
     736:	90 70       	andi	r25, 0x00	; 0
     738:	a0 70       	andi	r26, 0x00	; 0
     73a:	b0 70       	andi	r27, 0x00	; 0
     73c:	80 34       	cpi	r24, 0x40	; 64
     73e:	91 05       	cpc	r25, r1
     740:	a1 05       	cpc	r26, r1
     742:	b1 05       	cpc	r27, r1
     744:	61 f4       	brne	.+24     	; 0x75e <__divsf3+0x13c>
     746:	27 fd       	sbrc	r18, 7
     748:	0a c0       	rjmp	.+20     	; 0x75e <__divsf3+0x13c>
     74a:	e1 14       	cp	r14, r1
     74c:	f1 04       	cpc	r15, r1
     74e:	01 05       	cpc	r16, r1
     750:	11 05       	cpc	r17, r1
     752:	29 f0       	breq	.+10     	; 0x75e <__divsf3+0x13c>
     754:	20 5c       	subi	r18, 0xC0	; 192
     756:	3f 4f       	sbci	r19, 0xFF	; 255
     758:	4f 4f       	sbci	r20, 0xFF	; 255
     75a:	5f 4f       	sbci	r21, 0xFF	; 255
     75c:	20 78       	andi	r18, 0x80	; 128
     75e:	2d 87       	std	Y+13, r18	; 0x0d
     760:	3e 87       	std	Y+14, r19	; 0x0e
     762:	4f 87       	std	Y+15, r20	; 0x0f
     764:	58 8b       	std	Y+16, r21	; 0x10
     766:	be 01       	movw	r22, r28
     768:	67 5f       	subi	r22, 0xF7	; 247
     76a:	7f 4f       	sbci	r23, 0xFF	; 255
     76c:	cb 01       	movw	r24, r22
     76e:	0e 94 f7 05 	call	0xbee	; 0xbee <__pack_f>
     772:	68 96       	adiw	r28, 0x18	; 24
     774:	ea e0       	ldi	r30, 0x0A	; 10
     776:	0c 94 87 16 	jmp	0x2d0e	; 0x2d0e <__epilogue_restores__+0x10>

0000077a <__eqsf2>:
     77a:	a8 e1       	ldi	r26, 0x18	; 24
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	e3 ec       	ldi	r30, 0xC3	; 195
     780:	f3 e0       	ldi	r31, 0x03	; 3
     782:	0c 94 6f 16 	jmp	0x2cde	; 0x2cde <__prologue_saves__+0x18>
     786:	69 83       	std	Y+1, r22	; 0x01
     788:	7a 83       	std	Y+2, r23	; 0x02
     78a:	8b 83       	std	Y+3, r24	; 0x03
     78c:	9c 83       	std	Y+4, r25	; 0x04
     78e:	2d 83       	std	Y+5, r18	; 0x05
     790:	3e 83       	std	Y+6, r19	; 0x06
     792:	4f 83       	std	Y+7, r20	; 0x07
     794:	58 87       	std	Y+8, r21	; 0x08
     796:	89 e0       	ldi	r24, 0x09	; 9
     798:	e8 2e       	mov	r14, r24
     79a:	f1 2c       	mov	r15, r1
     79c:	ec 0e       	add	r14, r28
     79e:	fd 1e       	adc	r15, r29
     7a0:	ce 01       	movw	r24, r28
     7a2:	01 96       	adiw	r24, 0x01	; 1
     7a4:	b7 01       	movw	r22, r14
     7a6:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     7aa:	8e 01       	movw	r16, r28
     7ac:	0f 5e       	subi	r16, 0xEF	; 239
     7ae:	1f 4f       	sbci	r17, 0xFF	; 255
     7b0:	ce 01       	movw	r24, r28
     7b2:	05 96       	adiw	r24, 0x05	; 5
     7b4:	b8 01       	movw	r22, r16
     7b6:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     7ba:	89 85       	ldd	r24, Y+9	; 0x09
     7bc:	82 30       	cpi	r24, 0x02	; 2
     7be:	40 f0       	brcs	.+16     	; 0x7d0 <__eqsf2+0x56>
     7c0:	89 89       	ldd	r24, Y+17	; 0x11
     7c2:	82 30       	cpi	r24, 0x02	; 2
     7c4:	28 f0       	brcs	.+10     	; 0x7d0 <__eqsf2+0x56>
     7c6:	c7 01       	movw	r24, r14
     7c8:	b8 01       	movw	r22, r16
     7ca:	0e 94 44 07 	call	0xe88	; 0xe88 <__fpcmp_parts_f>
     7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <__eqsf2+0x58>
     7d0:	81 e0       	ldi	r24, 0x01	; 1
     7d2:	68 96       	adiw	r28, 0x18	; 24
     7d4:	e6 e0       	ldi	r30, 0x06	; 6
     7d6:	0c 94 8b 16 	jmp	0x2d16	; 0x2d16 <__epilogue_restores__+0x18>

000007da <__gtsf2>:
     7da:	a8 e1       	ldi	r26, 0x18	; 24
     7dc:	b0 e0       	ldi	r27, 0x00	; 0
     7de:	e3 ef       	ldi	r30, 0xF3	; 243
     7e0:	f3 e0       	ldi	r31, 0x03	; 3
     7e2:	0c 94 6f 16 	jmp	0x2cde	; 0x2cde <__prologue_saves__+0x18>
     7e6:	69 83       	std	Y+1, r22	; 0x01
     7e8:	7a 83       	std	Y+2, r23	; 0x02
     7ea:	8b 83       	std	Y+3, r24	; 0x03
     7ec:	9c 83       	std	Y+4, r25	; 0x04
     7ee:	2d 83       	std	Y+5, r18	; 0x05
     7f0:	3e 83       	std	Y+6, r19	; 0x06
     7f2:	4f 83       	std	Y+7, r20	; 0x07
     7f4:	58 87       	std	Y+8, r21	; 0x08
     7f6:	89 e0       	ldi	r24, 0x09	; 9
     7f8:	e8 2e       	mov	r14, r24
     7fa:	f1 2c       	mov	r15, r1
     7fc:	ec 0e       	add	r14, r28
     7fe:	fd 1e       	adc	r15, r29
     800:	ce 01       	movw	r24, r28
     802:	01 96       	adiw	r24, 0x01	; 1
     804:	b7 01       	movw	r22, r14
     806:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     80a:	8e 01       	movw	r16, r28
     80c:	0f 5e       	subi	r16, 0xEF	; 239
     80e:	1f 4f       	sbci	r17, 0xFF	; 255
     810:	ce 01       	movw	r24, r28
     812:	05 96       	adiw	r24, 0x05	; 5
     814:	b8 01       	movw	r22, r16
     816:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     81a:	89 85       	ldd	r24, Y+9	; 0x09
     81c:	82 30       	cpi	r24, 0x02	; 2
     81e:	40 f0       	brcs	.+16     	; 0x830 <__gtsf2+0x56>
     820:	89 89       	ldd	r24, Y+17	; 0x11
     822:	82 30       	cpi	r24, 0x02	; 2
     824:	28 f0       	brcs	.+10     	; 0x830 <__gtsf2+0x56>
     826:	c7 01       	movw	r24, r14
     828:	b8 01       	movw	r22, r16
     82a:	0e 94 44 07 	call	0xe88	; 0xe88 <__fpcmp_parts_f>
     82e:	01 c0       	rjmp	.+2      	; 0x832 <__gtsf2+0x58>
     830:	8f ef       	ldi	r24, 0xFF	; 255
     832:	68 96       	adiw	r28, 0x18	; 24
     834:	e6 e0       	ldi	r30, 0x06	; 6
     836:	0c 94 8b 16 	jmp	0x2d16	; 0x2d16 <__epilogue_restores__+0x18>

0000083a <__gesf2>:
     83a:	a8 e1       	ldi	r26, 0x18	; 24
     83c:	b0 e0       	ldi	r27, 0x00	; 0
     83e:	e3 e2       	ldi	r30, 0x23	; 35
     840:	f4 e0       	ldi	r31, 0x04	; 4
     842:	0c 94 6f 16 	jmp	0x2cde	; 0x2cde <__prologue_saves__+0x18>
     846:	69 83       	std	Y+1, r22	; 0x01
     848:	7a 83       	std	Y+2, r23	; 0x02
     84a:	8b 83       	std	Y+3, r24	; 0x03
     84c:	9c 83       	std	Y+4, r25	; 0x04
     84e:	2d 83       	std	Y+5, r18	; 0x05
     850:	3e 83       	std	Y+6, r19	; 0x06
     852:	4f 83       	std	Y+7, r20	; 0x07
     854:	58 87       	std	Y+8, r21	; 0x08
     856:	89 e0       	ldi	r24, 0x09	; 9
     858:	e8 2e       	mov	r14, r24
     85a:	f1 2c       	mov	r15, r1
     85c:	ec 0e       	add	r14, r28
     85e:	fd 1e       	adc	r15, r29
     860:	ce 01       	movw	r24, r28
     862:	01 96       	adiw	r24, 0x01	; 1
     864:	b7 01       	movw	r22, r14
     866:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     86a:	8e 01       	movw	r16, r28
     86c:	0f 5e       	subi	r16, 0xEF	; 239
     86e:	1f 4f       	sbci	r17, 0xFF	; 255
     870:	ce 01       	movw	r24, r28
     872:	05 96       	adiw	r24, 0x05	; 5
     874:	b8 01       	movw	r22, r16
     876:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     87a:	89 85       	ldd	r24, Y+9	; 0x09
     87c:	82 30       	cpi	r24, 0x02	; 2
     87e:	40 f0       	brcs	.+16     	; 0x890 <__stack+0x31>
     880:	89 89       	ldd	r24, Y+17	; 0x11
     882:	82 30       	cpi	r24, 0x02	; 2
     884:	28 f0       	brcs	.+10     	; 0x890 <__stack+0x31>
     886:	c7 01       	movw	r24, r14
     888:	b8 01       	movw	r22, r16
     88a:	0e 94 44 07 	call	0xe88	; 0xe88 <__fpcmp_parts_f>
     88e:	01 c0       	rjmp	.+2      	; 0x892 <__stack+0x33>
     890:	8f ef       	ldi	r24, 0xFF	; 255
     892:	68 96       	adiw	r28, 0x18	; 24
     894:	e6 e0       	ldi	r30, 0x06	; 6
     896:	0c 94 8b 16 	jmp	0x2d16	; 0x2d16 <__epilogue_restores__+0x18>

0000089a <__ltsf2>:
     89a:	a8 e1       	ldi	r26, 0x18	; 24
     89c:	b0 e0       	ldi	r27, 0x00	; 0
     89e:	e3 e5       	ldi	r30, 0x53	; 83
     8a0:	f4 e0       	ldi	r31, 0x04	; 4
     8a2:	0c 94 6f 16 	jmp	0x2cde	; 0x2cde <__prologue_saves__+0x18>
     8a6:	69 83       	std	Y+1, r22	; 0x01
     8a8:	7a 83       	std	Y+2, r23	; 0x02
     8aa:	8b 83       	std	Y+3, r24	; 0x03
     8ac:	9c 83       	std	Y+4, r25	; 0x04
     8ae:	2d 83       	std	Y+5, r18	; 0x05
     8b0:	3e 83       	std	Y+6, r19	; 0x06
     8b2:	4f 83       	std	Y+7, r20	; 0x07
     8b4:	58 87       	std	Y+8, r21	; 0x08
     8b6:	89 e0       	ldi	r24, 0x09	; 9
     8b8:	e8 2e       	mov	r14, r24
     8ba:	f1 2c       	mov	r15, r1
     8bc:	ec 0e       	add	r14, r28
     8be:	fd 1e       	adc	r15, r29
     8c0:	ce 01       	movw	r24, r28
     8c2:	01 96       	adiw	r24, 0x01	; 1
     8c4:	b7 01       	movw	r22, r14
     8c6:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     8ca:	8e 01       	movw	r16, r28
     8cc:	0f 5e       	subi	r16, 0xEF	; 239
     8ce:	1f 4f       	sbci	r17, 0xFF	; 255
     8d0:	ce 01       	movw	r24, r28
     8d2:	05 96       	adiw	r24, 0x05	; 5
     8d4:	b8 01       	movw	r22, r16
     8d6:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     8da:	89 85       	ldd	r24, Y+9	; 0x09
     8dc:	82 30       	cpi	r24, 0x02	; 2
     8de:	40 f0       	brcs	.+16     	; 0x8f0 <__ltsf2+0x56>
     8e0:	89 89       	ldd	r24, Y+17	; 0x11
     8e2:	82 30       	cpi	r24, 0x02	; 2
     8e4:	28 f0       	brcs	.+10     	; 0x8f0 <__ltsf2+0x56>
     8e6:	c7 01       	movw	r24, r14
     8e8:	b8 01       	movw	r22, r16
     8ea:	0e 94 44 07 	call	0xe88	; 0xe88 <__fpcmp_parts_f>
     8ee:	01 c0       	rjmp	.+2      	; 0x8f2 <__ltsf2+0x58>
     8f0:	81 e0       	ldi	r24, 0x01	; 1
     8f2:	68 96       	adiw	r28, 0x18	; 24
     8f4:	e6 e0       	ldi	r30, 0x06	; 6
     8f6:	0c 94 8b 16 	jmp	0x2d16	; 0x2d16 <__epilogue_restores__+0x18>

000008fa <__floatsisf>:
     8fa:	a8 e0       	ldi	r26, 0x08	; 8
     8fc:	b0 e0       	ldi	r27, 0x00	; 0
     8fe:	e3 e8       	ldi	r30, 0x83	; 131
     900:	f4 e0       	ldi	r31, 0x04	; 4
     902:	0c 94 6c 16 	jmp	0x2cd8	; 0x2cd8 <__prologue_saves__+0x12>
     906:	9b 01       	movw	r18, r22
     908:	ac 01       	movw	r20, r24
     90a:	83 e0       	ldi	r24, 0x03	; 3
     90c:	89 83       	std	Y+1, r24	; 0x01
     90e:	da 01       	movw	r26, r20
     910:	c9 01       	movw	r24, r18
     912:	88 27       	eor	r24, r24
     914:	b7 fd       	sbrc	r27, 7
     916:	83 95       	inc	r24
     918:	99 27       	eor	r25, r25
     91a:	aa 27       	eor	r26, r26
     91c:	bb 27       	eor	r27, r27
     91e:	b8 2e       	mov	r11, r24
     920:	21 15       	cp	r18, r1
     922:	31 05       	cpc	r19, r1
     924:	41 05       	cpc	r20, r1
     926:	51 05       	cpc	r21, r1
     928:	19 f4       	brne	.+6      	; 0x930 <__floatsisf+0x36>
     92a:	82 e0       	ldi	r24, 0x02	; 2
     92c:	89 83       	std	Y+1, r24	; 0x01
     92e:	3a c0       	rjmp	.+116    	; 0x9a4 <__floatsisf+0xaa>
     930:	88 23       	and	r24, r24
     932:	a9 f0       	breq	.+42     	; 0x95e <__floatsisf+0x64>
     934:	20 30       	cpi	r18, 0x00	; 0
     936:	80 e0       	ldi	r24, 0x00	; 0
     938:	38 07       	cpc	r19, r24
     93a:	80 e0       	ldi	r24, 0x00	; 0
     93c:	48 07       	cpc	r20, r24
     93e:	80 e8       	ldi	r24, 0x80	; 128
     940:	58 07       	cpc	r21, r24
     942:	29 f4       	brne	.+10     	; 0x94e <__floatsisf+0x54>
     944:	60 e0       	ldi	r22, 0x00	; 0
     946:	70 e0       	ldi	r23, 0x00	; 0
     948:	80 e0       	ldi	r24, 0x00	; 0
     94a:	9f ec       	ldi	r25, 0xCF	; 207
     94c:	30 c0       	rjmp	.+96     	; 0x9ae <__floatsisf+0xb4>
     94e:	ee 24       	eor	r14, r14
     950:	ff 24       	eor	r15, r15
     952:	87 01       	movw	r16, r14
     954:	e2 1a       	sub	r14, r18
     956:	f3 0a       	sbc	r15, r19
     958:	04 0b       	sbc	r16, r20
     95a:	15 0b       	sbc	r17, r21
     95c:	02 c0       	rjmp	.+4      	; 0x962 <__floatsisf+0x68>
     95e:	79 01       	movw	r14, r18
     960:	8a 01       	movw	r16, r20
     962:	8e e1       	ldi	r24, 0x1E	; 30
     964:	c8 2e       	mov	r12, r24
     966:	d1 2c       	mov	r13, r1
     968:	dc 82       	std	Y+4, r13	; 0x04
     96a:	cb 82       	std	Y+3, r12	; 0x03
     96c:	ed 82       	std	Y+5, r14	; 0x05
     96e:	fe 82       	std	Y+6, r15	; 0x06
     970:	0f 83       	std	Y+7, r16	; 0x07
     972:	18 87       	std	Y+8, r17	; 0x08
     974:	c8 01       	movw	r24, r16
     976:	b7 01       	movw	r22, r14
     978:	0e 94 a8 05 	call	0xb50	; 0xb50 <__clzsi2>
     97c:	01 97       	sbiw	r24, 0x01	; 1
     97e:	18 16       	cp	r1, r24
     980:	19 06       	cpc	r1, r25
     982:	84 f4       	brge	.+32     	; 0x9a4 <__floatsisf+0xaa>
     984:	08 2e       	mov	r0, r24
     986:	04 c0       	rjmp	.+8      	; 0x990 <__floatsisf+0x96>
     988:	ee 0c       	add	r14, r14
     98a:	ff 1c       	adc	r15, r15
     98c:	00 1f       	adc	r16, r16
     98e:	11 1f       	adc	r17, r17
     990:	0a 94       	dec	r0
     992:	d2 f7       	brpl	.-12     	; 0x988 <__floatsisf+0x8e>
     994:	ed 82       	std	Y+5, r14	; 0x05
     996:	fe 82       	std	Y+6, r15	; 0x06
     998:	0f 83       	std	Y+7, r16	; 0x07
     99a:	18 87       	std	Y+8, r17	; 0x08
     99c:	c8 1a       	sub	r12, r24
     99e:	d9 0a       	sbc	r13, r25
     9a0:	dc 82       	std	Y+4, r13	; 0x04
     9a2:	cb 82       	std	Y+3, r12	; 0x03
     9a4:	ba 82       	std	Y+2, r11	; 0x02
     9a6:	ce 01       	movw	r24, r28
     9a8:	01 96       	adiw	r24, 0x01	; 1
     9aa:	0e 94 f7 05 	call	0xbee	; 0xbee <__pack_f>
     9ae:	28 96       	adiw	r28, 0x08	; 8
     9b0:	e9 e0       	ldi	r30, 0x09	; 9
     9b2:	0c 94 88 16 	jmp	0x2d10	; 0x2d10 <__epilogue_restores__+0x12>

000009b6 <__fixsfsi>:
     9b6:	ac e0       	ldi	r26, 0x0C	; 12
     9b8:	b0 e0       	ldi	r27, 0x00	; 0
     9ba:	e1 ee       	ldi	r30, 0xE1	; 225
     9bc:	f4 e0       	ldi	r31, 0x04	; 4
     9be:	0c 94 73 16 	jmp	0x2ce6	; 0x2ce6 <__prologue_saves__+0x20>
     9c2:	69 83       	std	Y+1, r22	; 0x01
     9c4:	7a 83       	std	Y+2, r23	; 0x02
     9c6:	8b 83       	std	Y+3, r24	; 0x03
     9c8:	9c 83       	std	Y+4, r25	; 0x04
     9ca:	ce 01       	movw	r24, r28
     9cc:	01 96       	adiw	r24, 0x01	; 1
     9ce:	be 01       	movw	r22, r28
     9d0:	6b 5f       	subi	r22, 0xFB	; 251
     9d2:	7f 4f       	sbci	r23, 0xFF	; 255
     9d4:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     9d8:	8d 81       	ldd	r24, Y+5	; 0x05
     9da:	82 30       	cpi	r24, 0x02	; 2
     9dc:	61 f1       	breq	.+88     	; 0xa36 <__fixsfsi+0x80>
     9de:	82 30       	cpi	r24, 0x02	; 2
     9e0:	50 f1       	brcs	.+84     	; 0xa36 <__fixsfsi+0x80>
     9e2:	84 30       	cpi	r24, 0x04	; 4
     9e4:	21 f4       	brne	.+8      	; 0x9ee <__fixsfsi+0x38>
     9e6:	8e 81       	ldd	r24, Y+6	; 0x06
     9e8:	88 23       	and	r24, r24
     9ea:	51 f1       	breq	.+84     	; 0xa40 <__fixsfsi+0x8a>
     9ec:	2e c0       	rjmp	.+92     	; 0xa4a <__fixsfsi+0x94>
     9ee:	2f 81       	ldd	r18, Y+7	; 0x07
     9f0:	38 85       	ldd	r19, Y+8	; 0x08
     9f2:	37 fd       	sbrc	r19, 7
     9f4:	20 c0       	rjmp	.+64     	; 0xa36 <__fixsfsi+0x80>
     9f6:	6e 81       	ldd	r22, Y+6	; 0x06
     9f8:	2f 31       	cpi	r18, 0x1F	; 31
     9fa:	31 05       	cpc	r19, r1
     9fc:	1c f0       	brlt	.+6      	; 0xa04 <__fixsfsi+0x4e>
     9fe:	66 23       	and	r22, r22
     a00:	f9 f0       	breq	.+62     	; 0xa40 <__fixsfsi+0x8a>
     a02:	23 c0       	rjmp	.+70     	; 0xa4a <__fixsfsi+0x94>
     a04:	8e e1       	ldi	r24, 0x1E	; 30
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	82 1b       	sub	r24, r18
     a0a:	93 0b       	sbc	r25, r19
     a0c:	29 85       	ldd	r18, Y+9	; 0x09
     a0e:	3a 85       	ldd	r19, Y+10	; 0x0a
     a10:	4b 85       	ldd	r20, Y+11	; 0x0b
     a12:	5c 85       	ldd	r21, Y+12	; 0x0c
     a14:	04 c0       	rjmp	.+8      	; 0xa1e <__fixsfsi+0x68>
     a16:	56 95       	lsr	r21
     a18:	47 95       	ror	r20
     a1a:	37 95       	ror	r19
     a1c:	27 95       	ror	r18
     a1e:	8a 95       	dec	r24
     a20:	d2 f7       	brpl	.-12     	; 0xa16 <__fixsfsi+0x60>
     a22:	66 23       	and	r22, r22
     a24:	b1 f0       	breq	.+44     	; 0xa52 <__fixsfsi+0x9c>
     a26:	50 95       	com	r21
     a28:	40 95       	com	r20
     a2a:	30 95       	com	r19
     a2c:	21 95       	neg	r18
     a2e:	3f 4f       	sbci	r19, 0xFF	; 255
     a30:	4f 4f       	sbci	r20, 0xFF	; 255
     a32:	5f 4f       	sbci	r21, 0xFF	; 255
     a34:	0e c0       	rjmp	.+28     	; 0xa52 <__fixsfsi+0x9c>
     a36:	20 e0       	ldi	r18, 0x00	; 0
     a38:	30 e0       	ldi	r19, 0x00	; 0
     a3a:	40 e0       	ldi	r20, 0x00	; 0
     a3c:	50 e0       	ldi	r21, 0x00	; 0
     a3e:	09 c0       	rjmp	.+18     	; 0xa52 <__fixsfsi+0x9c>
     a40:	2f ef       	ldi	r18, 0xFF	; 255
     a42:	3f ef       	ldi	r19, 0xFF	; 255
     a44:	4f ef       	ldi	r20, 0xFF	; 255
     a46:	5f e7       	ldi	r21, 0x7F	; 127
     a48:	04 c0       	rjmp	.+8      	; 0xa52 <__fixsfsi+0x9c>
     a4a:	20 e0       	ldi	r18, 0x00	; 0
     a4c:	30 e0       	ldi	r19, 0x00	; 0
     a4e:	40 e0       	ldi	r20, 0x00	; 0
     a50:	50 e8       	ldi	r21, 0x80	; 128
     a52:	b9 01       	movw	r22, r18
     a54:	ca 01       	movw	r24, r20
     a56:	2c 96       	adiw	r28, 0x0c	; 12
     a58:	e2 e0       	ldi	r30, 0x02	; 2
     a5a:	0c 94 8f 16 	jmp	0x2d1e	; 0x2d1e <__epilogue_restores__+0x20>

00000a5e <__floatunsisf>:
     a5e:	a8 e0       	ldi	r26, 0x08	; 8
     a60:	b0 e0       	ldi	r27, 0x00	; 0
     a62:	e5 e3       	ldi	r30, 0x35	; 53
     a64:	f5 e0       	ldi	r31, 0x05	; 5
     a66:	0c 94 6b 16 	jmp	0x2cd6	; 0x2cd6 <__prologue_saves__+0x10>
     a6a:	7b 01       	movw	r14, r22
     a6c:	8c 01       	movw	r16, r24
     a6e:	61 15       	cp	r22, r1
     a70:	71 05       	cpc	r23, r1
     a72:	81 05       	cpc	r24, r1
     a74:	91 05       	cpc	r25, r1
     a76:	19 f4       	brne	.+6      	; 0xa7e <__floatunsisf+0x20>
     a78:	82 e0       	ldi	r24, 0x02	; 2
     a7a:	89 83       	std	Y+1, r24	; 0x01
     a7c:	60 c0       	rjmp	.+192    	; 0xb3e <__floatunsisf+0xe0>
     a7e:	83 e0       	ldi	r24, 0x03	; 3
     a80:	89 83       	std	Y+1, r24	; 0x01
     a82:	8e e1       	ldi	r24, 0x1E	; 30
     a84:	c8 2e       	mov	r12, r24
     a86:	d1 2c       	mov	r13, r1
     a88:	dc 82       	std	Y+4, r13	; 0x04
     a8a:	cb 82       	std	Y+3, r12	; 0x03
     a8c:	ed 82       	std	Y+5, r14	; 0x05
     a8e:	fe 82       	std	Y+6, r15	; 0x06
     a90:	0f 83       	std	Y+7, r16	; 0x07
     a92:	18 87       	std	Y+8, r17	; 0x08
     a94:	c8 01       	movw	r24, r16
     a96:	b7 01       	movw	r22, r14
     a98:	0e 94 a8 05 	call	0xb50	; 0xb50 <__clzsi2>
     a9c:	fc 01       	movw	r30, r24
     a9e:	31 97       	sbiw	r30, 0x01	; 1
     aa0:	f7 ff       	sbrs	r31, 7
     aa2:	3b c0       	rjmp	.+118    	; 0xb1a <__floatunsisf+0xbc>
     aa4:	22 27       	eor	r18, r18
     aa6:	33 27       	eor	r19, r19
     aa8:	2e 1b       	sub	r18, r30
     aaa:	3f 0b       	sbc	r19, r31
     aac:	57 01       	movw	r10, r14
     aae:	68 01       	movw	r12, r16
     ab0:	02 2e       	mov	r0, r18
     ab2:	04 c0       	rjmp	.+8      	; 0xabc <__floatunsisf+0x5e>
     ab4:	d6 94       	lsr	r13
     ab6:	c7 94       	ror	r12
     ab8:	b7 94       	ror	r11
     aba:	a7 94       	ror	r10
     abc:	0a 94       	dec	r0
     abe:	d2 f7       	brpl	.-12     	; 0xab4 <__floatunsisf+0x56>
     ac0:	40 e0       	ldi	r20, 0x00	; 0
     ac2:	50 e0       	ldi	r21, 0x00	; 0
     ac4:	60 e0       	ldi	r22, 0x00	; 0
     ac6:	70 e0       	ldi	r23, 0x00	; 0
     ac8:	81 e0       	ldi	r24, 0x01	; 1
     aca:	90 e0       	ldi	r25, 0x00	; 0
     acc:	a0 e0       	ldi	r26, 0x00	; 0
     ace:	b0 e0       	ldi	r27, 0x00	; 0
     ad0:	04 c0       	rjmp	.+8      	; 0xada <__floatunsisf+0x7c>
     ad2:	88 0f       	add	r24, r24
     ad4:	99 1f       	adc	r25, r25
     ad6:	aa 1f       	adc	r26, r26
     ad8:	bb 1f       	adc	r27, r27
     ada:	2a 95       	dec	r18
     adc:	d2 f7       	brpl	.-12     	; 0xad2 <__floatunsisf+0x74>
     ade:	01 97       	sbiw	r24, 0x01	; 1
     ae0:	a1 09       	sbc	r26, r1
     ae2:	b1 09       	sbc	r27, r1
     ae4:	8e 21       	and	r24, r14
     ae6:	9f 21       	and	r25, r15
     ae8:	a0 23       	and	r26, r16
     aea:	b1 23       	and	r27, r17
     aec:	00 97       	sbiw	r24, 0x00	; 0
     aee:	a1 05       	cpc	r26, r1
     af0:	b1 05       	cpc	r27, r1
     af2:	21 f0       	breq	.+8      	; 0xafc <__floatunsisf+0x9e>
     af4:	41 e0       	ldi	r20, 0x01	; 1
     af6:	50 e0       	ldi	r21, 0x00	; 0
     af8:	60 e0       	ldi	r22, 0x00	; 0
     afa:	70 e0       	ldi	r23, 0x00	; 0
     afc:	4a 29       	or	r20, r10
     afe:	5b 29       	or	r21, r11
     b00:	6c 29       	or	r22, r12
     b02:	7d 29       	or	r23, r13
     b04:	4d 83       	std	Y+5, r20	; 0x05
     b06:	5e 83       	std	Y+6, r21	; 0x06
     b08:	6f 83       	std	Y+7, r22	; 0x07
     b0a:	78 87       	std	Y+8, r23	; 0x08
     b0c:	8e e1       	ldi	r24, 0x1E	; 30
     b0e:	90 e0       	ldi	r25, 0x00	; 0
     b10:	8e 1b       	sub	r24, r30
     b12:	9f 0b       	sbc	r25, r31
     b14:	9c 83       	std	Y+4, r25	; 0x04
     b16:	8b 83       	std	Y+3, r24	; 0x03
     b18:	12 c0       	rjmp	.+36     	; 0xb3e <__floatunsisf+0xe0>
     b1a:	30 97       	sbiw	r30, 0x00	; 0
     b1c:	81 f0       	breq	.+32     	; 0xb3e <__floatunsisf+0xe0>
     b1e:	0e 2e       	mov	r0, r30
     b20:	04 c0       	rjmp	.+8      	; 0xb2a <__floatunsisf+0xcc>
     b22:	ee 0c       	add	r14, r14
     b24:	ff 1c       	adc	r15, r15
     b26:	00 1f       	adc	r16, r16
     b28:	11 1f       	adc	r17, r17
     b2a:	0a 94       	dec	r0
     b2c:	d2 f7       	brpl	.-12     	; 0xb22 <__floatunsisf+0xc4>
     b2e:	ed 82       	std	Y+5, r14	; 0x05
     b30:	fe 82       	std	Y+6, r15	; 0x06
     b32:	0f 83       	std	Y+7, r16	; 0x07
     b34:	18 87       	std	Y+8, r17	; 0x08
     b36:	ce 1a       	sub	r12, r30
     b38:	df 0a       	sbc	r13, r31
     b3a:	dc 82       	std	Y+4, r13	; 0x04
     b3c:	cb 82       	std	Y+3, r12	; 0x03
     b3e:	1a 82       	std	Y+2, r1	; 0x02
     b40:	ce 01       	movw	r24, r28
     b42:	01 96       	adiw	r24, 0x01	; 1
     b44:	0e 94 f7 05 	call	0xbee	; 0xbee <__pack_f>
     b48:	28 96       	adiw	r28, 0x08	; 8
     b4a:	ea e0       	ldi	r30, 0x0A	; 10
     b4c:	0c 94 87 16 	jmp	0x2d0e	; 0x2d0e <__epilogue_restores__+0x10>

00000b50 <__clzsi2>:
     b50:	ef 92       	push	r14
     b52:	ff 92       	push	r15
     b54:	0f 93       	push	r16
     b56:	1f 93       	push	r17
     b58:	7b 01       	movw	r14, r22
     b5a:	8c 01       	movw	r16, r24
     b5c:	80 e0       	ldi	r24, 0x00	; 0
     b5e:	e8 16       	cp	r14, r24
     b60:	80 e0       	ldi	r24, 0x00	; 0
     b62:	f8 06       	cpc	r15, r24
     b64:	81 e0       	ldi	r24, 0x01	; 1
     b66:	08 07       	cpc	r16, r24
     b68:	80 e0       	ldi	r24, 0x00	; 0
     b6a:	18 07       	cpc	r17, r24
     b6c:	88 f4       	brcc	.+34     	; 0xb90 <__clzsi2+0x40>
     b6e:	8f ef       	ldi	r24, 0xFF	; 255
     b70:	e8 16       	cp	r14, r24
     b72:	f1 04       	cpc	r15, r1
     b74:	01 05       	cpc	r16, r1
     b76:	11 05       	cpc	r17, r1
     b78:	31 f0       	breq	.+12     	; 0xb86 <__clzsi2+0x36>
     b7a:	28 f0       	brcs	.+10     	; 0xb86 <__clzsi2+0x36>
     b7c:	88 e0       	ldi	r24, 0x08	; 8
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	a0 e0       	ldi	r26, 0x00	; 0
     b82:	b0 e0       	ldi	r27, 0x00	; 0
     b84:	17 c0       	rjmp	.+46     	; 0xbb4 <__clzsi2+0x64>
     b86:	80 e0       	ldi	r24, 0x00	; 0
     b88:	90 e0       	ldi	r25, 0x00	; 0
     b8a:	a0 e0       	ldi	r26, 0x00	; 0
     b8c:	b0 e0       	ldi	r27, 0x00	; 0
     b8e:	12 c0       	rjmp	.+36     	; 0xbb4 <__clzsi2+0x64>
     b90:	80 e0       	ldi	r24, 0x00	; 0
     b92:	e8 16       	cp	r14, r24
     b94:	80 e0       	ldi	r24, 0x00	; 0
     b96:	f8 06       	cpc	r15, r24
     b98:	80 e0       	ldi	r24, 0x00	; 0
     b9a:	08 07       	cpc	r16, r24
     b9c:	81 e0       	ldi	r24, 0x01	; 1
     b9e:	18 07       	cpc	r17, r24
     ba0:	28 f0       	brcs	.+10     	; 0xbac <__clzsi2+0x5c>
     ba2:	88 e1       	ldi	r24, 0x18	; 24
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	a0 e0       	ldi	r26, 0x00	; 0
     ba8:	b0 e0       	ldi	r27, 0x00	; 0
     baa:	04 c0       	rjmp	.+8      	; 0xbb4 <__clzsi2+0x64>
     bac:	80 e1       	ldi	r24, 0x10	; 16
     bae:	90 e0       	ldi	r25, 0x00	; 0
     bb0:	a0 e0       	ldi	r26, 0x00	; 0
     bb2:	b0 e0       	ldi	r27, 0x00	; 0
     bb4:	20 e2       	ldi	r18, 0x20	; 32
     bb6:	30 e0       	ldi	r19, 0x00	; 0
     bb8:	40 e0       	ldi	r20, 0x00	; 0
     bba:	50 e0       	ldi	r21, 0x00	; 0
     bbc:	28 1b       	sub	r18, r24
     bbe:	39 0b       	sbc	r19, r25
     bc0:	4a 0b       	sbc	r20, r26
     bc2:	5b 0b       	sbc	r21, r27
     bc4:	04 c0       	rjmp	.+8      	; 0xbce <__clzsi2+0x7e>
     bc6:	16 95       	lsr	r17
     bc8:	07 95       	ror	r16
     bca:	f7 94       	ror	r15
     bcc:	e7 94       	ror	r14
     bce:	8a 95       	dec	r24
     bd0:	d2 f7       	brpl	.-12     	; 0xbc6 <__clzsi2+0x76>
     bd2:	f7 01       	movw	r30, r14
     bd4:	e6 58       	subi	r30, 0x86	; 134
     bd6:	ff 4f       	sbci	r31, 0xFF	; 255
     bd8:	80 81       	ld	r24, Z
     bda:	28 1b       	sub	r18, r24
     bdc:	31 09       	sbc	r19, r1
     bde:	41 09       	sbc	r20, r1
     be0:	51 09       	sbc	r21, r1
     be2:	c9 01       	movw	r24, r18
     be4:	1f 91       	pop	r17
     be6:	0f 91       	pop	r16
     be8:	ff 90       	pop	r15
     bea:	ef 90       	pop	r14
     bec:	08 95       	ret

00000bee <__pack_f>:
     bee:	df 92       	push	r13
     bf0:	ef 92       	push	r14
     bf2:	ff 92       	push	r15
     bf4:	0f 93       	push	r16
     bf6:	1f 93       	push	r17
     bf8:	fc 01       	movw	r30, r24
     bfa:	e4 80       	ldd	r14, Z+4	; 0x04
     bfc:	f5 80       	ldd	r15, Z+5	; 0x05
     bfe:	06 81       	ldd	r16, Z+6	; 0x06
     c00:	17 81       	ldd	r17, Z+7	; 0x07
     c02:	d1 80       	ldd	r13, Z+1	; 0x01
     c04:	80 81       	ld	r24, Z
     c06:	82 30       	cpi	r24, 0x02	; 2
     c08:	48 f4       	brcc	.+18     	; 0xc1c <__pack_f+0x2e>
     c0a:	80 e0       	ldi	r24, 0x00	; 0
     c0c:	90 e0       	ldi	r25, 0x00	; 0
     c0e:	a0 e1       	ldi	r26, 0x10	; 16
     c10:	b0 e0       	ldi	r27, 0x00	; 0
     c12:	e8 2a       	or	r14, r24
     c14:	f9 2a       	or	r15, r25
     c16:	0a 2b       	or	r16, r26
     c18:	1b 2b       	or	r17, r27
     c1a:	a5 c0       	rjmp	.+330    	; 0xd66 <__pack_f+0x178>
     c1c:	84 30       	cpi	r24, 0x04	; 4
     c1e:	09 f4       	brne	.+2      	; 0xc22 <__pack_f+0x34>
     c20:	9f c0       	rjmp	.+318    	; 0xd60 <__pack_f+0x172>
     c22:	82 30       	cpi	r24, 0x02	; 2
     c24:	21 f4       	brne	.+8      	; 0xc2e <__pack_f+0x40>
     c26:	ee 24       	eor	r14, r14
     c28:	ff 24       	eor	r15, r15
     c2a:	87 01       	movw	r16, r14
     c2c:	05 c0       	rjmp	.+10     	; 0xc38 <__pack_f+0x4a>
     c2e:	e1 14       	cp	r14, r1
     c30:	f1 04       	cpc	r15, r1
     c32:	01 05       	cpc	r16, r1
     c34:	11 05       	cpc	r17, r1
     c36:	19 f4       	brne	.+6      	; 0xc3e <__pack_f+0x50>
     c38:	e0 e0       	ldi	r30, 0x00	; 0
     c3a:	f0 e0       	ldi	r31, 0x00	; 0
     c3c:	96 c0       	rjmp	.+300    	; 0xd6a <__pack_f+0x17c>
     c3e:	62 81       	ldd	r22, Z+2	; 0x02
     c40:	73 81       	ldd	r23, Z+3	; 0x03
     c42:	9f ef       	ldi	r25, 0xFF	; 255
     c44:	62 38       	cpi	r22, 0x82	; 130
     c46:	79 07       	cpc	r23, r25
     c48:	0c f0       	brlt	.+2      	; 0xc4c <__pack_f+0x5e>
     c4a:	5b c0       	rjmp	.+182    	; 0xd02 <__pack_f+0x114>
     c4c:	22 e8       	ldi	r18, 0x82	; 130
     c4e:	3f ef       	ldi	r19, 0xFF	; 255
     c50:	26 1b       	sub	r18, r22
     c52:	37 0b       	sbc	r19, r23
     c54:	2a 31       	cpi	r18, 0x1A	; 26
     c56:	31 05       	cpc	r19, r1
     c58:	2c f0       	brlt	.+10     	; 0xc64 <__pack_f+0x76>
     c5a:	20 e0       	ldi	r18, 0x00	; 0
     c5c:	30 e0       	ldi	r19, 0x00	; 0
     c5e:	40 e0       	ldi	r20, 0x00	; 0
     c60:	50 e0       	ldi	r21, 0x00	; 0
     c62:	2a c0       	rjmp	.+84     	; 0xcb8 <__pack_f+0xca>
     c64:	b8 01       	movw	r22, r16
     c66:	a7 01       	movw	r20, r14
     c68:	02 2e       	mov	r0, r18
     c6a:	04 c0       	rjmp	.+8      	; 0xc74 <__pack_f+0x86>
     c6c:	76 95       	lsr	r23
     c6e:	67 95       	ror	r22
     c70:	57 95       	ror	r21
     c72:	47 95       	ror	r20
     c74:	0a 94       	dec	r0
     c76:	d2 f7       	brpl	.-12     	; 0xc6c <__pack_f+0x7e>
     c78:	81 e0       	ldi	r24, 0x01	; 1
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	a0 e0       	ldi	r26, 0x00	; 0
     c7e:	b0 e0       	ldi	r27, 0x00	; 0
     c80:	04 c0       	rjmp	.+8      	; 0xc8a <__pack_f+0x9c>
     c82:	88 0f       	add	r24, r24
     c84:	99 1f       	adc	r25, r25
     c86:	aa 1f       	adc	r26, r26
     c88:	bb 1f       	adc	r27, r27
     c8a:	2a 95       	dec	r18
     c8c:	d2 f7       	brpl	.-12     	; 0xc82 <__pack_f+0x94>
     c8e:	01 97       	sbiw	r24, 0x01	; 1
     c90:	a1 09       	sbc	r26, r1
     c92:	b1 09       	sbc	r27, r1
     c94:	8e 21       	and	r24, r14
     c96:	9f 21       	and	r25, r15
     c98:	a0 23       	and	r26, r16
     c9a:	b1 23       	and	r27, r17
     c9c:	00 97       	sbiw	r24, 0x00	; 0
     c9e:	a1 05       	cpc	r26, r1
     ca0:	b1 05       	cpc	r27, r1
     ca2:	21 f0       	breq	.+8      	; 0xcac <__pack_f+0xbe>
     ca4:	81 e0       	ldi	r24, 0x01	; 1
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	a0 e0       	ldi	r26, 0x00	; 0
     caa:	b0 e0       	ldi	r27, 0x00	; 0
     cac:	9a 01       	movw	r18, r20
     cae:	ab 01       	movw	r20, r22
     cb0:	28 2b       	or	r18, r24
     cb2:	39 2b       	or	r19, r25
     cb4:	4a 2b       	or	r20, r26
     cb6:	5b 2b       	or	r21, r27
     cb8:	da 01       	movw	r26, r20
     cba:	c9 01       	movw	r24, r18
     cbc:	8f 77       	andi	r24, 0x7F	; 127
     cbe:	90 70       	andi	r25, 0x00	; 0
     cc0:	a0 70       	andi	r26, 0x00	; 0
     cc2:	b0 70       	andi	r27, 0x00	; 0
     cc4:	80 34       	cpi	r24, 0x40	; 64
     cc6:	91 05       	cpc	r25, r1
     cc8:	a1 05       	cpc	r26, r1
     cca:	b1 05       	cpc	r27, r1
     ccc:	39 f4       	brne	.+14     	; 0xcdc <__pack_f+0xee>
     cce:	27 ff       	sbrs	r18, 7
     cd0:	09 c0       	rjmp	.+18     	; 0xce4 <__pack_f+0xf6>
     cd2:	20 5c       	subi	r18, 0xC0	; 192
     cd4:	3f 4f       	sbci	r19, 0xFF	; 255
     cd6:	4f 4f       	sbci	r20, 0xFF	; 255
     cd8:	5f 4f       	sbci	r21, 0xFF	; 255
     cda:	04 c0       	rjmp	.+8      	; 0xce4 <__pack_f+0xf6>
     cdc:	21 5c       	subi	r18, 0xC1	; 193
     cde:	3f 4f       	sbci	r19, 0xFF	; 255
     ce0:	4f 4f       	sbci	r20, 0xFF	; 255
     ce2:	5f 4f       	sbci	r21, 0xFF	; 255
     ce4:	e0 e0       	ldi	r30, 0x00	; 0
     ce6:	f0 e0       	ldi	r31, 0x00	; 0
     ce8:	20 30       	cpi	r18, 0x00	; 0
     cea:	a0 e0       	ldi	r26, 0x00	; 0
     cec:	3a 07       	cpc	r19, r26
     cee:	a0 e0       	ldi	r26, 0x00	; 0
     cf0:	4a 07       	cpc	r20, r26
     cf2:	a0 e4       	ldi	r26, 0x40	; 64
     cf4:	5a 07       	cpc	r21, r26
     cf6:	10 f0       	brcs	.+4      	; 0xcfc <__pack_f+0x10e>
     cf8:	e1 e0       	ldi	r30, 0x01	; 1
     cfa:	f0 e0       	ldi	r31, 0x00	; 0
     cfc:	79 01       	movw	r14, r18
     cfe:	8a 01       	movw	r16, r20
     d00:	27 c0       	rjmp	.+78     	; 0xd50 <__pack_f+0x162>
     d02:	60 38       	cpi	r22, 0x80	; 128
     d04:	71 05       	cpc	r23, r1
     d06:	64 f5       	brge	.+88     	; 0xd60 <__pack_f+0x172>
     d08:	fb 01       	movw	r30, r22
     d0a:	e1 58       	subi	r30, 0x81	; 129
     d0c:	ff 4f       	sbci	r31, 0xFF	; 255
     d0e:	d8 01       	movw	r26, r16
     d10:	c7 01       	movw	r24, r14
     d12:	8f 77       	andi	r24, 0x7F	; 127
     d14:	90 70       	andi	r25, 0x00	; 0
     d16:	a0 70       	andi	r26, 0x00	; 0
     d18:	b0 70       	andi	r27, 0x00	; 0
     d1a:	80 34       	cpi	r24, 0x40	; 64
     d1c:	91 05       	cpc	r25, r1
     d1e:	a1 05       	cpc	r26, r1
     d20:	b1 05       	cpc	r27, r1
     d22:	39 f4       	brne	.+14     	; 0xd32 <__pack_f+0x144>
     d24:	e7 fe       	sbrs	r14, 7
     d26:	0d c0       	rjmp	.+26     	; 0xd42 <__pack_f+0x154>
     d28:	80 e4       	ldi	r24, 0x40	; 64
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	a0 e0       	ldi	r26, 0x00	; 0
     d2e:	b0 e0       	ldi	r27, 0x00	; 0
     d30:	04 c0       	rjmp	.+8      	; 0xd3a <__pack_f+0x14c>
     d32:	8f e3       	ldi	r24, 0x3F	; 63
     d34:	90 e0       	ldi	r25, 0x00	; 0
     d36:	a0 e0       	ldi	r26, 0x00	; 0
     d38:	b0 e0       	ldi	r27, 0x00	; 0
     d3a:	e8 0e       	add	r14, r24
     d3c:	f9 1e       	adc	r15, r25
     d3e:	0a 1f       	adc	r16, r26
     d40:	1b 1f       	adc	r17, r27
     d42:	17 ff       	sbrs	r17, 7
     d44:	05 c0       	rjmp	.+10     	; 0xd50 <__pack_f+0x162>
     d46:	16 95       	lsr	r17
     d48:	07 95       	ror	r16
     d4a:	f7 94       	ror	r15
     d4c:	e7 94       	ror	r14
     d4e:	31 96       	adiw	r30, 0x01	; 1
     d50:	87 e0       	ldi	r24, 0x07	; 7
     d52:	16 95       	lsr	r17
     d54:	07 95       	ror	r16
     d56:	f7 94       	ror	r15
     d58:	e7 94       	ror	r14
     d5a:	8a 95       	dec	r24
     d5c:	d1 f7       	brne	.-12     	; 0xd52 <__pack_f+0x164>
     d5e:	05 c0       	rjmp	.+10     	; 0xd6a <__pack_f+0x17c>
     d60:	ee 24       	eor	r14, r14
     d62:	ff 24       	eor	r15, r15
     d64:	87 01       	movw	r16, r14
     d66:	ef ef       	ldi	r30, 0xFF	; 255
     d68:	f0 e0       	ldi	r31, 0x00	; 0
     d6a:	6e 2f       	mov	r22, r30
     d6c:	67 95       	ror	r22
     d6e:	66 27       	eor	r22, r22
     d70:	67 95       	ror	r22
     d72:	90 2f       	mov	r25, r16
     d74:	9f 77       	andi	r25, 0x7F	; 127
     d76:	d7 94       	ror	r13
     d78:	dd 24       	eor	r13, r13
     d7a:	d7 94       	ror	r13
     d7c:	8e 2f       	mov	r24, r30
     d7e:	86 95       	lsr	r24
     d80:	49 2f       	mov	r20, r25
     d82:	46 2b       	or	r20, r22
     d84:	58 2f       	mov	r21, r24
     d86:	5d 29       	or	r21, r13
     d88:	b7 01       	movw	r22, r14
     d8a:	ca 01       	movw	r24, r20
     d8c:	1f 91       	pop	r17
     d8e:	0f 91       	pop	r16
     d90:	ff 90       	pop	r15
     d92:	ef 90       	pop	r14
     d94:	df 90       	pop	r13
     d96:	08 95       	ret

00000d98 <__unpack_f>:
     d98:	fc 01       	movw	r30, r24
     d9a:	db 01       	movw	r26, r22
     d9c:	40 81       	ld	r20, Z
     d9e:	51 81       	ldd	r21, Z+1	; 0x01
     da0:	22 81       	ldd	r18, Z+2	; 0x02
     da2:	62 2f       	mov	r22, r18
     da4:	6f 77       	andi	r22, 0x7F	; 127
     da6:	70 e0       	ldi	r23, 0x00	; 0
     da8:	22 1f       	adc	r18, r18
     daa:	22 27       	eor	r18, r18
     dac:	22 1f       	adc	r18, r18
     dae:	93 81       	ldd	r25, Z+3	; 0x03
     db0:	89 2f       	mov	r24, r25
     db2:	88 0f       	add	r24, r24
     db4:	82 2b       	or	r24, r18
     db6:	28 2f       	mov	r18, r24
     db8:	30 e0       	ldi	r19, 0x00	; 0
     dba:	99 1f       	adc	r25, r25
     dbc:	99 27       	eor	r25, r25
     dbe:	99 1f       	adc	r25, r25
     dc0:	11 96       	adiw	r26, 0x01	; 1
     dc2:	9c 93       	st	X, r25
     dc4:	11 97       	sbiw	r26, 0x01	; 1
     dc6:	21 15       	cp	r18, r1
     dc8:	31 05       	cpc	r19, r1
     dca:	a9 f5       	brne	.+106    	; 0xe36 <__unpack_f+0x9e>
     dcc:	41 15       	cp	r20, r1
     dce:	51 05       	cpc	r21, r1
     dd0:	61 05       	cpc	r22, r1
     dd2:	71 05       	cpc	r23, r1
     dd4:	11 f4       	brne	.+4      	; 0xdda <__unpack_f+0x42>
     dd6:	82 e0       	ldi	r24, 0x02	; 2
     dd8:	37 c0       	rjmp	.+110    	; 0xe48 <__unpack_f+0xb0>
     dda:	82 e8       	ldi	r24, 0x82	; 130
     ddc:	9f ef       	ldi	r25, 0xFF	; 255
     dde:	13 96       	adiw	r26, 0x03	; 3
     de0:	9c 93       	st	X, r25
     de2:	8e 93       	st	-X, r24
     de4:	12 97       	sbiw	r26, 0x02	; 2
     de6:	9a 01       	movw	r18, r20
     de8:	ab 01       	movw	r20, r22
     dea:	67 e0       	ldi	r22, 0x07	; 7
     dec:	22 0f       	add	r18, r18
     dee:	33 1f       	adc	r19, r19
     df0:	44 1f       	adc	r20, r20
     df2:	55 1f       	adc	r21, r21
     df4:	6a 95       	dec	r22
     df6:	d1 f7       	brne	.-12     	; 0xdec <__unpack_f+0x54>
     df8:	83 e0       	ldi	r24, 0x03	; 3
     dfa:	8c 93       	st	X, r24
     dfc:	0d c0       	rjmp	.+26     	; 0xe18 <__unpack_f+0x80>
     dfe:	22 0f       	add	r18, r18
     e00:	33 1f       	adc	r19, r19
     e02:	44 1f       	adc	r20, r20
     e04:	55 1f       	adc	r21, r21
     e06:	12 96       	adiw	r26, 0x02	; 2
     e08:	8d 91       	ld	r24, X+
     e0a:	9c 91       	ld	r25, X
     e0c:	13 97       	sbiw	r26, 0x03	; 3
     e0e:	01 97       	sbiw	r24, 0x01	; 1
     e10:	13 96       	adiw	r26, 0x03	; 3
     e12:	9c 93       	st	X, r25
     e14:	8e 93       	st	-X, r24
     e16:	12 97       	sbiw	r26, 0x02	; 2
     e18:	20 30       	cpi	r18, 0x00	; 0
     e1a:	80 e0       	ldi	r24, 0x00	; 0
     e1c:	38 07       	cpc	r19, r24
     e1e:	80 e0       	ldi	r24, 0x00	; 0
     e20:	48 07       	cpc	r20, r24
     e22:	80 e4       	ldi	r24, 0x40	; 64
     e24:	58 07       	cpc	r21, r24
     e26:	58 f3       	brcs	.-42     	; 0xdfe <__unpack_f+0x66>
     e28:	14 96       	adiw	r26, 0x04	; 4
     e2a:	2d 93       	st	X+, r18
     e2c:	3d 93       	st	X+, r19
     e2e:	4d 93       	st	X+, r20
     e30:	5c 93       	st	X, r21
     e32:	17 97       	sbiw	r26, 0x07	; 7
     e34:	08 95       	ret
     e36:	2f 3f       	cpi	r18, 0xFF	; 255
     e38:	31 05       	cpc	r19, r1
     e3a:	79 f4       	brne	.+30     	; 0xe5a <__unpack_f+0xc2>
     e3c:	41 15       	cp	r20, r1
     e3e:	51 05       	cpc	r21, r1
     e40:	61 05       	cpc	r22, r1
     e42:	71 05       	cpc	r23, r1
     e44:	19 f4       	brne	.+6      	; 0xe4c <__unpack_f+0xb4>
     e46:	84 e0       	ldi	r24, 0x04	; 4
     e48:	8c 93       	st	X, r24
     e4a:	08 95       	ret
     e4c:	64 ff       	sbrs	r22, 4
     e4e:	03 c0       	rjmp	.+6      	; 0xe56 <__unpack_f+0xbe>
     e50:	81 e0       	ldi	r24, 0x01	; 1
     e52:	8c 93       	st	X, r24
     e54:	12 c0       	rjmp	.+36     	; 0xe7a <__unpack_f+0xe2>
     e56:	1c 92       	st	X, r1
     e58:	10 c0       	rjmp	.+32     	; 0xe7a <__unpack_f+0xe2>
     e5a:	2f 57       	subi	r18, 0x7F	; 127
     e5c:	30 40       	sbci	r19, 0x00	; 0
     e5e:	13 96       	adiw	r26, 0x03	; 3
     e60:	3c 93       	st	X, r19
     e62:	2e 93       	st	-X, r18
     e64:	12 97       	sbiw	r26, 0x02	; 2
     e66:	83 e0       	ldi	r24, 0x03	; 3
     e68:	8c 93       	st	X, r24
     e6a:	87 e0       	ldi	r24, 0x07	; 7
     e6c:	44 0f       	add	r20, r20
     e6e:	55 1f       	adc	r21, r21
     e70:	66 1f       	adc	r22, r22
     e72:	77 1f       	adc	r23, r23
     e74:	8a 95       	dec	r24
     e76:	d1 f7       	brne	.-12     	; 0xe6c <__unpack_f+0xd4>
     e78:	70 64       	ori	r23, 0x40	; 64
     e7a:	14 96       	adiw	r26, 0x04	; 4
     e7c:	4d 93       	st	X+, r20
     e7e:	5d 93       	st	X+, r21
     e80:	6d 93       	st	X+, r22
     e82:	7c 93       	st	X, r23
     e84:	17 97       	sbiw	r26, 0x07	; 7
     e86:	08 95       	ret

00000e88 <__fpcmp_parts_f>:
     e88:	1f 93       	push	r17
     e8a:	dc 01       	movw	r26, r24
     e8c:	fb 01       	movw	r30, r22
     e8e:	9c 91       	ld	r25, X
     e90:	92 30       	cpi	r25, 0x02	; 2
     e92:	08 f4       	brcc	.+2      	; 0xe96 <__fpcmp_parts_f+0xe>
     e94:	47 c0       	rjmp	.+142    	; 0xf24 <__fpcmp_parts_f+0x9c>
     e96:	80 81       	ld	r24, Z
     e98:	82 30       	cpi	r24, 0x02	; 2
     e9a:	08 f4       	brcc	.+2      	; 0xe9e <__fpcmp_parts_f+0x16>
     e9c:	43 c0       	rjmp	.+134    	; 0xf24 <__fpcmp_parts_f+0x9c>
     e9e:	94 30       	cpi	r25, 0x04	; 4
     ea0:	51 f4       	brne	.+20     	; 0xeb6 <__fpcmp_parts_f+0x2e>
     ea2:	11 96       	adiw	r26, 0x01	; 1
     ea4:	1c 91       	ld	r17, X
     ea6:	84 30       	cpi	r24, 0x04	; 4
     ea8:	99 f5       	brne	.+102    	; 0xf10 <__fpcmp_parts_f+0x88>
     eaa:	81 81       	ldd	r24, Z+1	; 0x01
     eac:	68 2f       	mov	r22, r24
     eae:	70 e0       	ldi	r23, 0x00	; 0
     eb0:	61 1b       	sub	r22, r17
     eb2:	71 09       	sbc	r23, r1
     eb4:	3f c0       	rjmp	.+126    	; 0xf34 <__fpcmp_parts_f+0xac>
     eb6:	84 30       	cpi	r24, 0x04	; 4
     eb8:	21 f0       	breq	.+8      	; 0xec2 <__fpcmp_parts_f+0x3a>
     eba:	92 30       	cpi	r25, 0x02	; 2
     ebc:	31 f4       	brne	.+12     	; 0xeca <__fpcmp_parts_f+0x42>
     ebe:	82 30       	cpi	r24, 0x02	; 2
     ec0:	b9 f1       	breq	.+110    	; 0xf30 <__fpcmp_parts_f+0xa8>
     ec2:	81 81       	ldd	r24, Z+1	; 0x01
     ec4:	88 23       	and	r24, r24
     ec6:	89 f1       	breq	.+98     	; 0xf2a <__fpcmp_parts_f+0xa2>
     ec8:	2d c0       	rjmp	.+90     	; 0xf24 <__fpcmp_parts_f+0x9c>
     eca:	11 96       	adiw	r26, 0x01	; 1
     ecc:	1c 91       	ld	r17, X
     ece:	11 97       	sbiw	r26, 0x01	; 1
     ed0:	82 30       	cpi	r24, 0x02	; 2
     ed2:	f1 f0       	breq	.+60     	; 0xf10 <__fpcmp_parts_f+0x88>
     ed4:	81 81       	ldd	r24, Z+1	; 0x01
     ed6:	18 17       	cp	r17, r24
     ed8:	d9 f4       	brne	.+54     	; 0xf10 <__fpcmp_parts_f+0x88>
     eda:	12 96       	adiw	r26, 0x02	; 2
     edc:	2d 91       	ld	r18, X+
     ede:	3c 91       	ld	r19, X
     ee0:	13 97       	sbiw	r26, 0x03	; 3
     ee2:	82 81       	ldd	r24, Z+2	; 0x02
     ee4:	93 81       	ldd	r25, Z+3	; 0x03
     ee6:	82 17       	cp	r24, r18
     ee8:	93 07       	cpc	r25, r19
     eea:	94 f0       	brlt	.+36     	; 0xf10 <__fpcmp_parts_f+0x88>
     eec:	28 17       	cp	r18, r24
     eee:	39 07       	cpc	r19, r25
     ef0:	bc f0       	brlt	.+46     	; 0xf20 <__fpcmp_parts_f+0x98>
     ef2:	14 96       	adiw	r26, 0x04	; 4
     ef4:	8d 91       	ld	r24, X+
     ef6:	9d 91       	ld	r25, X+
     ef8:	0d 90       	ld	r0, X+
     efa:	bc 91       	ld	r27, X
     efc:	a0 2d       	mov	r26, r0
     efe:	24 81       	ldd	r18, Z+4	; 0x04
     f00:	35 81       	ldd	r19, Z+5	; 0x05
     f02:	46 81       	ldd	r20, Z+6	; 0x06
     f04:	57 81       	ldd	r21, Z+7	; 0x07
     f06:	28 17       	cp	r18, r24
     f08:	39 07       	cpc	r19, r25
     f0a:	4a 07       	cpc	r20, r26
     f0c:	5b 07       	cpc	r21, r27
     f0e:	18 f4       	brcc	.+6      	; 0xf16 <__fpcmp_parts_f+0x8e>
     f10:	11 23       	and	r17, r17
     f12:	41 f0       	breq	.+16     	; 0xf24 <__fpcmp_parts_f+0x9c>
     f14:	0a c0       	rjmp	.+20     	; 0xf2a <__fpcmp_parts_f+0xa2>
     f16:	82 17       	cp	r24, r18
     f18:	93 07       	cpc	r25, r19
     f1a:	a4 07       	cpc	r26, r20
     f1c:	b5 07       	cpc	r27, r21
     f1e:	40 f4       	brcc	.+16     	; 0xf30 <__fpcmp_parts_f+0xa8>
     f20:	11 23       	and	r17, r17
     f22:	19 f0       	breq	.+6      	; 0xf2a <__fpcmp_parts_f+0xa2>
     f24:	61 e0       	ldi	r22, 0x01	; 1
     f26:	70 e0       	ldi	r23, 0x00	; 0
     f28:	05 c0       	rjmp	.+10     	; 0xf34 <__fpcmp_parts_f+0xac>
     f2a:	6f ef       	ldi	r22, 0xFF	; 255
     f2c:	7f ef       	ldi	r23, 0xFF	; 255
     f2e:	02 c0       	rjmp	.+4      	; 0xf34 <__fpcmp_parts_f+0xac>
     f30:	60 e0       	ldi	r22, 0x00	; 0
     f32:	70 e0       	ldi	r23, 0x00	; 0
     f34:	cb 01       	movw	r24, r22
     f36:	1f 91       	pop	r17
     f38:	08 95       	ret

00000f3a <Dio_vidSetPinDir>:
 */
#include"std_types.h"
#include"Bit_math.h"
#include<avr/io.h>
void Dio_vidSetPinDir(u8 Pin,u8 Dir)
{
     f3a:	df 93       	push	r29
     f3c:	cf 93       	push	r28
     f3e:	00 d0       	rcall	.+0      	; 0xf40 <Dio_vidSetPinDir+0x6>
     f40:	00 d0       	rcall	.+0      	; 0xf42 <Dio_vidSetPinDir+0x8>
     f42:	00 d0       	rcall	.+0      	; 0xf44 <Dio_vidSetPinDir+0xa>
     f44:	cd b7       	in	r28, 0x3d	; 61
     f46:	de b7       	in	r29, 0x3e	; 62
     f48:	8b 83       	std	Y+3, r24	; 0x03
     f4a:	6c 83       	std	Y+4, r22	; 0x04
	u8 Loc_u8Port;
	u8 Loc_u8Pin;

	Loc_u8Port=Pin/8;
     f4c:	8b 81       	ldd	r24, Y+3	; 0x03
     f4e:	86 95       	lsr	r24
     f50:	86 95       	lsr	r24
     f52:	86 95       	lsr	r24
     f54:	8a 83       	std	Y+2, r24	; 0x02
	Loc_u8Pin=Pin%8;
     f56:	8b 81       	ldd	r24, Y+3	; 0x03
     f58:	87 70       	andi	r24, 0x07	; 7
     f5a:	89 83       	std	Y+1, r24	; 0x01

	switch(Loc_u8Port)
     f5c:	8a 81       	ldd	r24, Y+2	; 0x02
     f5e:	28 2f       	mov	r18, r24
     f60:	30 e0       	ldi	r19, 0x00	; 0
     f62:	3e 83       	std	Y+6, r19	; 0x06
     f64:	2d 83       	std	Y+5, r18	; 0x05
     f66:	8d 81       	ldd	r24, Y+5	; 0x05
     f68:	9e 81       	ldd	r25, Y+6	; 0x06
     f6a:	81 30       	cpi	r24, 0x01	; 1
     f6c:	91 05       	cpc	r25, r1
     f6e:	09 f4       	brne	.+2      	; 0xf72 <Dio_vidSetPinDir+0x38>
     f70:	43 c0       	rjmp	.+134    	; 0xff8 <Dio_vidSetPinDir+0xbe>
     f72:	2d 81       	ldd	r18, Y+5	; 0x05
     f74:	3e 81       	ldd	r19, Y+6	; 0x06
     f76:	22 30       	cpi	r18, 0x02	; 2
     f78:	31 05       	cpc	r19, r1
     f7a:	2c f4       	brge	.+10     	; 0xf86 <Dio_vidSetPinDir+0x4c>
     f7c:	8d 81       	ldd	r24, Y+5	; 0x05
     f7e:	9e 81       	ldd	r25, Y+6	; 0x06
     f80:	00 97       	sbiw	r24, 0x00	; 0
     f82:	71 f0       	breq	.+28     	; 0xfa0 <Dio_vidSetPinDir+0x66>
     f84:	bc c0       	rjmp	.+376    	; 0x10fe <Dio_vidSetPinDir+0x1c4>
     f86:	2d 81       	ldd	r18, Y+5	; 0x05
     f88:	3e 81       	ldd	r19, Y+6	; 0x06
     f8a:	22 30       	cpi	r18, 0x02	; 2
     f8c:	31 05       	cpc	r19, r1
     f8e:	09 f4       	brne	.+2      	; 0xf92 <Dio_vidSetPinDir+0x58>
     f90:	5f c0       	rjmp	.+190    	; 0x1050 <Dio_vidSetPinDir+0x116>
     f92:	8d 81       	ldd	r24, Y+5	; 0x05
     f94:	9e 81       	ldd	r25, Y+6	; 0x06
     f96:	83 30       	cpi	r24, 0x03	; 3
     f98:	91 05       	cpc	r25, r1
     f9a:	09 f4       	brne	.+2      	; 0xf9e <Dio_vidSetPinDir+0x64>
     f9c:	85 c0       	rjmp	.+266    	; 0x10a8 <Dio_vidSetPinDir+0x16e>
     f9e:	af c0       	rjmp	.+350    	; 0x10fe <Dio_vidSetPinDir+0x1c4>
	{
	case 0:
	if(Dir==0)
     fa0:	8c 81       	ldd	r24, Y+4	; 0x04
     fa2:	88 23       	and	r24, r24
     fa4:	a9 f4       	brne	.+42     	; 0xfd0 <Dio_vidSetPinDir+0x96>
		CLEAR_BIT(DDRA,Loc_u8Pin);
     fa6:	aa e3       	ldi	r26, 0x3A	; 58
     fa8:	b0 e0       	ldi	r27, 0x00	; 0
     faa:	ea e3       	ldi	r30, 0x3A	; 58
     fac:	f0 e0       	ldi	r31, 0x00	; 0
     fae:	80 81       	ld	r24, Z
     fb0:	48 2f       	mov	r20, r24
     fb2:	89 81       	ldd	r24, Y+1	; 0x01
     fb4:	28 2f       	mov	r18, r24
     fb6:	30 e0       	ldi	r19, 0x00	; 0
     fb8:	81 e0       	ldi	r24, 0x01	; 1
     fba:	90 e0       	ldi	r25, 0x00	; 0
     fbc:	02 2e       	mov	r0, r18
     fbe:	02 c0       	rjmp	.+4      	; 0xfc4 <Dio_vidSetPinDir+0x8a>
     fc0:	88 0f       	add	r24, r24
     fc2:	99 1f       	adc	r25, r25
     fc4:	0a 94       	dec	r0
     fc6:	e2 f7       	brpl	.-8      	; 0xfc0 <Dio_vidSetPinDir+0x86>
     fc8:	80 95       	com	r24
     fca:	84 23       	and	r24, r20
     fcc:	8c 93       	st	X, r24
     fce:	97 c0       	rjmp	.+302    	; 0x10fe <Dio_vidSetPinDir+0x1c4>
	else
		SET_BIT(DDRA,Loc_u8Pin);
     fd0:	aa e3       	ldi	r26, 0x3A	; 58
     fd2:	b0 e0       	ldi	r27, 0x00	; 0
     fd4:	ea e3       	ldi	r30, 0x3A	; 58
     fd6:	f0 e0       	ldi	r31, 0x00	; 0
     fd8:	80 81       	ld	r24, Z
     fda:	48 2f       	mov	r20, r24
     fdc:	89 81       	ldd	r24, Y+1	; 0x01
     fde:	28 2f       	mov	r18, r24
     fe0:	30 e0       	ldi	r19, 0x00	; 0
     fe2:	81 e0       	ldi	r24, 0x01	; 1
     fe4:	90 e0       	ldi	r25, 0x00	; 0
     fe6:	02 2e       	mov	r0, r18
     fe8:	02 c0       	rjmp	.+4      	; 0xfee <Dio_vidSetPinDir+0xb4>
     fea:	88 0f       	add	r24, r24
     fec:	99 1f       	adc	r25, r25
     fee:	0a 94       	dec	r0
     ff0:	e2 f7       	brpl	.-8      	; 0xfea <Dio_vidSetPinDir+0xb0>
     ff2:	84 2b       	or	r24, r20
     ff4:	8c 93       	st	X, r24
     ff6:	83 c0       	rjmp	.+262    	; 0x10fe <Dio_vidSetPinDir+0x1c4>
	break;

	case 1:
		if(Dir==0)
     ff8:	8c 81       	ldd	r24, Y+4	; 0x04
     ffa:	88 23       	and	r24, r24
     ffc:	a9 f4       	brne	.+42     	; 0x1028 <Dio_vidSetPinDir+0xee>
			CLEAR_BIT(DDRB,Loc_u8Pin);
     ffe:	a7 e3       	ldi	r26, 0x37	; 55
    1000:	b0 e0       	ldi	r27, 0x00	; 0
    1002:	e7 e3       	ldi	r30, 0x37	; 55
    1004:	f0 e0       	ldi	r31, 0x00	; 0
    1006:	80 81       	ld	r24, Z
    1008:	48 2f       	mov	r20, r24
    100a:	89 81       	ldd	r24, Y+1	; 0x01
    100c:	28 2f       	mov	r18, r24
    100e:	30 e0       	ldi	r19, 0x00	; 0
    1010:	81 e0       	ldi	r24, 0x01	; 1
    1012:	90 e0       	ldi	r25, 0x00	; 0
    1014:	02 2e       	mov	r0, r18
    1016:	02 c0       	rjmp	.+4      	; 0x101c <Dio_vidSetPinDir+0xe2>
    1018:	88 0f       	add	r24, r24
    101a:	99 1f       	adc	r25, r25
    101c:	0a 94       	dec	r0
    101e:	e2 f7       	brpl	.-8      	; 0x1018 <Dio_vidSetPinDir+0xde>
    1020:	80 95       	com	r24
    1022:	84 23       	and	r24, r20
    1024:	8c 93       	st	X, r24
    1026:	6b c0       	rjmp	.+214    	; 0x10fe <Dio_vidSetPinDir+0x1c4>
		else
			SET_BIT(DDRB,Loc_u8Pin);
    1028:	a7 e3       	ldi	r26, 0x37	; 55
    102a:	b0 e0       	ldi	r27, 0x00	; 0
    102c:	e7 e3       	ldi	r30, 0x37	; 55
    102e:	f0 e0       	ldi	r31, 0x00	; 0
    1030:	80 81       	ld	r24, Z
    1032:	48 2f       	mov	r20, r24
    1034:	89 81       	ldd	r24, Y+1	; 0x01
    1036:	28 2f       	mov	r18, r24
    1038:	30 e0       	ldi	r19, 0x00	; 0
    103a:	81 e0       	ldi	r24, 0x01	; 1
    103c:	90 e0       	ldi	r25, 0x00	; 0
    103e:	02 2e       	mov	r0, r18
    1040:	02 c0       	rjmp	.+4      	; 0x1046 <Dio_vidSetPinDir+0x10c>
    1042:	88 0f       	add	r24, r24
    1044:	99 1f       	adc	r25, r25
    1046:	0a 94       	dec	r0
    1048:	e2 f7       	brpl	.-8      	; 0x1042 <Dio_vidSetPinDir+0x108>
    104a:	84 2b       	or	r24, r20
    104c:	8c 93       	st	X, r24
    104e:	57 c0       	rjmp	.+174    	; 0x10fe <Dio_vidSetPinDir+0x1c4>
		break;
	case 2:
		if(Dir==0)
    1050:	8c 81       	ldd	r24, Y+4	; 0x04
    1052:	88 23       	and	r24, r24
    1054:	a9 f4       	brne	.+42     	; 0x1080 <Dio_vidSetPinDir+0x146>
			CLEAR_BIT(DDRC,Loc_u8Pin);
    1056:	a4 e3       	ldi	r26, 0x34	; 52
    1058:	b0 e0       	ldi	r27, 0x00	; 0
    105a:	e4 e3       	ldi	r30, 0x34	; 52
    105c:	f0 e0       	ldi	r31, 0x00	; 0
    105e:	80 81       	ld	r24, Z
    1060:	48 2f       	mov	r20, r24
    1062:	89 81       	ldd	r24, Y+1	; 0x01
    1064:	28 2f       	mov	r18, r24
    1066:	30 e0       	ldi	r19, 0x00	; 0
    1068:	81 e0       	ldi	r24, 0x01	; 1
    106a:	90 e0       	ldi	r25, 0x00	; 0
    106c:	02 2e       	mov	r0, r18
    106e:	02 c0       	rjmp	.+4      	; 0x1074 <Dio_vidSetPinDir+0x13a>
    1070:	88 0f       	add	r24, r24
    1072:	99 1f       	adc	r25, r25
    1074:	0a 94       	dec	r0
    1076:	e2 f7       	brpl	.-8      	; 0x1070 <Dio_vidSetPinDir+0x136>
    1078:	80 95       	com	r24
    107a:	84 23       	and	r24, r20
    107c:	8c 93       	st	X, r24
    107e:	3f c0       	rjmp	.+126    	; 0x10fe <Dio_vidSetPinDir+0x1c4>
		else
			SET_BIT(DDRC,Loc_u8Pin);
    1080:	a4 e3       	ldi	r26, 0x34	; 52
    1082:	b0 e0       	ldi	r27, 0x00	; 0
    1084:	e4 e3       	ldi	r30, 0x34	; 52
    1086:	f0 e0       	ldi	r31, 0x00	; 0
    1088:	80 81       	ld	r24, Z
    108a:	48 2f       	mov	r20, r24
    108c:	89 81       	ldd	r24, Y+1	; 0x01
    108e:	28 2f       	mov	r18, r24
    1090:	30 e0       	ldi	r19, 0x00	; 0
    1092:	81 e0       	ldi	r24, 0x01	; 1
    1094:	90 e0       	ldi	r25, 0x00	; 0
    1096:	02 2e       	mov	r0, r18
    1098:	02 c0       	rjmp	.+4      	; 0x109e <Dio_vidSetPinDir+0x164>
    109a:	88 0f       	add	r24, r24
    109c:	99 1f       	adc	r25, r25
    109e:	0a 94       	dec	r0
    10a0:	e2 f7       	brpl	.-8      	; 0x109a <Dio_vidSetPinDir+0x160>
    10a2:	84 2b       	or	r24, r20
    10a4:	8c 93       	st	X, r24
    10a6:	2b c0       	rjmp	.+86     	; 0x10fe <Dio_vidSetPinDir+0x1c4>
		break;
	case 3:
		if(Dir==0)
    10a8:	8c 81       	ldd	r24, Y+4	; 0x04
    10aa:	88 23       	and	r24, r24
    10ac:	a9 f4       	brne	.+42     	; 0x10d8 <Dio_vidSetPinDir+0x19e>
			CLEAR_BIT(DDRD,Loc_u8Pin);
    10ae:	a1 e3       	ldi	r26, 0x31	; 49
    10b0:	b0 e0       	ldi	r27, 0x00	; 0
    10b2:	e1 e3       	ldi	r30, 0x31	; 49
    10b4:	f0 e0       	ldi	r31, 0x00	; 0
    10b6:	80 81       	ld	r24, Z
    10b8:	48 2f       	mov	r20, r24
    10ba:	89 81       	ldd	r24, Y+1	; 0x01
    10bc:	28 2f       	mov	r18, r24
    10be:	30 e0       	ldi	r19, 0x00	; 0
    10c0:	81 e0       	ldi	r24, 0x01	; 1
    10c2:	90 e0       	ldi	r25, 0x00	; 0
    10c4:	02 2e       	mov	r0, r18
    10c6:	02 c0       	rjmp	.+4      	; 0x10cc <Dio_vidSetPinDir+0x192>
    10c8:	88 0f       	add	r24, r24
    10ca:	99 1f       	adc	r25, r25
    10cc:	0a 94       	dec	r0
    10ce:	e2 f7       	brpl	.-8      	; 0x10c8 <Dio_vidSetPinDir+0x18e>
    10d0:	80 95       	com	r24
    10d2:	84 23       	and	r24, r20
    10d4:	8c 93       	st	X, r24
    10d6:	13 c0       	rjmp	.+38     	; 0x10fe <Dio_vidSetPinDir+0x1c4>
		else
			SET_BIT(DDRD,Loc_u8Pin);
    10d8:	a1 e3       	ldi	r26, 0x31	; 49
    10da:	b0 e0       	ldi	r27, 0x00	; 0
    10dc:	e1 e3       	ldi	r30, 0x31	; 49
    10de:	f0 e0       	ldi	r31, 0x00	; 0
    10e0:	80 81       	ld	r24, Z
    10e2:	48 2f       	mov	r20, r24
    10e4:	89 81       	ldd	r24, Y+1	; 0x01
    10e6:	28 2f       	mov	r18, r24
    10e8:	30 e0       	ldi	r19, 0x00	; 0
    10ea:	81 e0       	ldi	r24, 0x01	; 1
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	02 2e       	mov	r0, r18
    10f0:	02 c0       	rjmp	.+4      	; 0x10f6 <Dio_vidSetPinDir+0x1bc>
    10f2:	88 0f       	add	r24, r24
    10f4:	99 1f       	adc	r25, r25
    10f6:	0a 94       	dec	r0
    10f8:	e2 f7       	brpl	.-8      	; 0x10f2 <Dio_vidSetPinDir+0x1b8>
    10fa:	84 2b       	or	r24, r20
    10fc:	8c 93       	st	X, r24
		break;
	}
}
    10fe:	26 96       	adiw	r28, 0x06	; 6
    1100:	0f b6       	in	r0, 0x3f	; 63
    1102:	f8 94       	cli
    1104:	de bf       	out	0x3e, r29	; 62
    1106:	0f be       	out	0x3f, r0	; 63
    1108:	cd bf       	out	0x3d, r28	; 61
    110a:	cf 91       	pop	r28
    110c:	df 91       	pop	r29
    110e:	08 95       	ret

00001110 <Dio_vidSetPinVal>:
void Dio_vidSetPinVal(u8 Pin,u8 Val)
{
    1110:	df 93       	push	r29
    1112:	cf 93       	push	r28
    1114:	00 d0       	rcall	.+0      	; 0x1116 <Dio_vidSetPinVal+0x6>
    1116:	00 d0       	rcall	.+0      	; 0x1118 <Dio_vidSetPinVal+0x8>
    1118:	00 d0       	rcall	.+0      	; 0x111a <Dio_vidSetPinVal+0xa>
    111a:	cd b7       	in	r28, 0x3d	; 61
    111c:	de b7       	in	r29, 0x3e	; 62
    111e:	8b 83       	std	Y+3, r24	; 0x03
    1120:	6c 83       	std	Y+4, r22	; 0x04
	u8 Loc_u8Port;
	u8 Loc_u8Pin;

		Loc_u8Port=Pin/8;
    1122:	8b 81       	ldd	r24, Y+3	; 0x03
    1124:	86 95       	lsr	r24
    1126:	86 95       	lsr	r24
    1128:	86 95       	lsr	r24
    112a:	8a 83       	std	Y+2, r24	; 0x02
		Loc_u8Pin=Pin%8;
    112c:	8b 81       	ldd	r24, Y+3	; 0x03
    112e:	87 70       	andi	r24, 0x07	; 7
    1130:	89 83       	std	Y+1, r24	; 0x01

		switch(Loc_u8Port)
    1132:	8a 81       	ldd	r24, Y+2	; 0x02
    1134:	28 2f       	mov	r18, r24
    1136:	30 e0       	ldi	r19, 0x00	; 0
    1138:	3e 83       	std	Y+6, r19	; 0x06
    113a:	2d 83       	std	Y+5, r18	; 0x05
    113c:	8d 81       	ldd	r24, Y+5	; 0x05
    113e:	9e 81       	ldd	r25, Y+6	; 0x06
    1140:	81 30       	cpi	r24, 0x01	; 1
    1142:	91 05       	cpc	r25, r1
    1144:	09 f4       	brne	.+2      	; 0x1148 <Dio_vidSetPinVal+0x38>
    1146:	43 c0       	rjmp	.+134    	; 0x11ce <Dio_vidSetPinVal+0xbe>
    1148:	2d 81       	ldd	r18, Y+5	; 0x05
    114a:	3e 81       	ldd	r19, Y+6	; 0x06
    114c:	22 30       	cpi	r18, 0x02	; 2
    114e:	31 05       	cpc	r19, r1
    1150:	2c f4       	brge	.+10     	; 0x115c <Dio_vidSetPinVal+0x4c>
    1152:	8d 81       	ldd	r24, Y+5	; 0x05
    1154:	9e 81       	ldd	r25, Y+6	; 0x06
    1156:	00 97       	sbiw	r24, 0x00	; 0
    1158:	71 f0       	breq	.+28     	; 0x1176 <Dio_vidSetPinVal+0x66>
    115a:	bc c0       	rjmp	.+376    	; 0x12d4 <Dio_vidSetPinVal+0x1c4>
    115c:	2d 81       	ldd	r18, Y+5	; 0x05
    115e:	3e 81       	ldd	r19, Y+6	; 0x06
    1160:	22 30       	cpi	r18, 0x02	; 2
    1162:	31 05       	cpc	r19, r1
    1164:	09 f4       	brne	.+2      	; 0x1168 <Dio_vidSetPinVal+0x58>
    1166:	5f c0       	rjmp	.+190    	; 0x1226 <Dio_vidSetPinVal+0x116>
    1168:	8d 81       	ldd	r24, Y+5	; 0x05
    116a:	9e 81       	ldd	r25, Y+6	; 0x06
    116c:	83 30       	cpi	r24, 0x03	; 3
    116e:	91 05       	cpc	r25, r1
    1170:	09 f4       	brne	.+2      	; 0x1174 <Dio_vidSetPinVal+0x64>
    1172:	85 c0       	rjmp	.+266    	; 0x127e <Dio_vidSetPinVal+0x16e>
    1174:	af c0       	rjmp	.+350    	; 0x12d4 <Dio_vidSetPinVal+0x1c4>
		{
		case 0:
		if(Val==0)
    1176:	8c 81       	ldd	r24, Y+4	; 0x04
    1178:	88 23       	and	r24, r24
    117a:	a9 f4       	brne	.+42     	; 0x11a6 <Dio_vidSetPinVal+0x96>
			CLEAR_BIT(PORTA,Loc_u8Pin);
    117c:	ab e3       	ldi	r26, 0x3B	; 59
    117e:	b0 e0       	ldi	r27, 0x00	; 0
    1180:	eb e3       	ldi	r30, 0x3B	; 59
    1182:	f0 e0       	ldi	r31, 0x00	; 0
    1184:	80 81       	ld	r24, Z
    1186:	48 2f       	mov	r20, r24
    1188:	89 81       	ldd	r24, Y+1	; 0x01
    118a:	28 2f       	mov	r18, r24
    118c:	30 e0       	ldi	r19, 0x00	; 0
    118e:	81 e0       	ldi	r24, 0x01	; 1
    1190:	90 e0       	ldi	r25, 0x00	; 0
    1192:	02 2e       	mov	r0, r18
    1194:	02 c0       	rjmp	.+4      	; 0x119a <Dio_vidSetPinVal+0x8a>
    1196:	88 0f       	add	r24, r24
    1198:	99 1f       	adc	r25, r25
    119a:	0a 94       	dec	r0
    119c:	e2 f7       	brpl	.-8      	; 0x1196 <Dio_vidSetPinVal+0x86>
    119e:	80 95       	com	r24
    11a0:	84 23       	and	r24, r20
    11a2:	8c 93       	st	X, r24
    11a4:	97 c0       	rjmp	.+302    	; 0x12d4 <Dio_vidSetPinVal+0x1c4>
		else
			SET_BIT(PORTA,Loc_u8Pin);
    11a6:	ab e3       	ldi	r26, 0x3B	; 59
    11a8:	b0 e0       	ldi	r27, 0x00	; 0
    11aa:	eb e3       	ldi	r30, 0x3B	; 59
    11ac:	f0 e0       	ldi	r31, 0x00	; 0
    11ae:	80 81       	ld	r24, Z
    11b0:	48 2f       	mov	r20, r24
    11b2:	89 81       	ldd	r24, Y+1	; 0x01
    11b4:	28 2f       	mov	r18, r24
    11b6:	30 e0       	ldi	r19, 0x00	; 0
    11b8:	81 e0       	ldi	r24, 0x01	; 1
    11ba:	90 e0       	ldi	r25, 0x00	; 0
    11bc:	02 2e       	mov	r0, r18
    11be:	02 c0       	rjmp	.+4      	; 0x11c4 <Dio_vidSetPinVal+0xb4>
    11c0:	88 0f       	add	r24, r24
    11c2:	99 1f       	adc	r25, r25
    11c4:	0a 94       	dec	r0
    11c6:	e2 f7       	brpl	.-8      	; 0x11c0 <Dio_vidSetPinVal+0xb0>
    11c8:	84 2b       	or	r24, r20
    11ca:	8c 93       	st	X, r24
    11cc:	83 c0       	rjmp	.+262    	; 0x12d4 <Dio_vidSetPinVal+0x1c4>
		break;

		case 1:
			if(Val==0)
    11ce:	8c 81       	ldd	r24, Y+4	; 0x04
    11d0:	88 23       	and	r24, r24
    11d2:	a9 f4       	brne	.+42     	; 0x11fe <Dio_vidSetPinVal+0xee>
				CLEAR_BIT(PORTB,Loc_u8Pin);
    11d4:	a8 e3       	ldi	r26, 0x38	; 56
    11d6:	b0 e0       	ldi	r27, 0x00	; 0
    11d8:	e8 e3       	ldi	r30, 0x38	; 56
    11da:	f0 e0       	ldi	r31, 0x00	; 0
    11dc:	80 81       	ld	r24, Z
    11de:	48 2f       	mov	r20, r24
    11e0:	89 81       	ldd	r24, Y+1	; 0x01
    11e2:	28 2f       	mov	r18, r24
    11e4:	30 e0       	ldi	r19, 0x00	; 0
    11e6:	81 e0       	ldi	r24, 0x01	; 1
    11e8:	90 e0       	ldi	r25, 0x00	; 0
    11ea:	02 2e       	mov	r0, r18
    11ec:	02 c0       	rjmp	.+4      	; 0x11f2 <Dio_vidSetPinVal+0xe2>
    11ee:	88 0f       	add	r24, r24
    11f0:	99 1f       	adc	r25, r25
    11f2:	0a 94       	dec	r0
    11f4:	e2 f7       	brpl	.-8      	; 0x11ee <Dio_vidSetPinVal+0xde>
    11f6:	80 95       	com	r24
    11f8:	84 23       	and	r24, r20
    11fa:	8c 93       	st	X, r24
    11fc:	6b c0       	rjmp	.+214    	; 0x12d4 <Dio_vidSetPinVal+0x1c4>
			else
				SET_BIT(PORTB,Loc_u8Pin);
    11fe:	a8 e3       	ldi	r26, 0x38	; 56
    1200:	b0 e0       	ldi	r27, 0x00	; 0
    1202:	e8 e3       	ldi	r30, 0x38	; 56
    1204:	f0 e0       	ldi	r31, 0x00	; 0
    1206:	80 81       	ld	r24, Z
    1208:	48 2f       	mov	r20, r24
    120a:	89 81       	ldd	r24, Y+1	; 0x01
    120c:	28 2f       	mov	r18, r24
    120e:	30 e0       	ldi	r19, 0x00	; 0
    1210:	81 e0       	ldi	r24, 0x01	; 1
    1212:	90 e0       	ldi	r25, 0x00	; 0
    1214:	02 2e       	mov	r0, r18
    1216:	02 c0       	rjmp	.+4      	; 0x121c <Dio_vidSetPinVal+0x10c>
    1218:	88 0f       	add	r24, r24
    121a:	99 1f       	adc	r25, r25
    121c:	0a 94       	dec	r0
    121e:	e2 f7       	brpl	.-8      	; 0x1218 <Dio_vidSetPinVal+0x108>
    1220:	84 2b       	or	r24, r20
    1222:	8c 93       	st	X, r24
    1224:	57 c0       	rjmp	.+174    	; 0x12d4 <Dio_vidSetPinVal+0x1c4>
			break;
		case 2:
			if(Val==0)
    1226:	8c 81       	ldd	r24, Y+4	; 0x04
    1228:	88 23       	and	r24, r24
    122a:	a9 f4       	brne	.+42     	; 0x1256 <Dio_vidSetPinVal+0x146>
				CLEAR_BIT(PORTC,Loc_u8Pin);
    122c:	a5 e3       	ldi	r26, 0x35	; 53
    122e:	b0 e0       	ldi	r27, 0x00	; 0
    1230:	e5 e3       	ldi	r30, 0x35	; 53
    1232:	f0 e0       	ldi	r31, 0x00	; 0
    1234:	80 81       	ld	r24, Z
    1236:	48 2f       	mov	r20, r24
    1238:	89 81       	ldd	r24, Y+1	; 0x01
    123a:	28 2f       	mov	r18, r24
    123c:	30 e0       	ldi	r19, 0x00	; 0
    123e:	81 e0       	ldi	r24, 0x01	; 1
    1240:	90 e0       	ldi	r25, 0x00	; 0
    1242:	02 2e       	mov	r0, r18
    1244:	02 c0       	rjmp	.+4      	; 0x124a <Dio_vidSetPinVal+0x13a>
    1246:	88 0f       	add	r24, r24
    1248:	99 1f       	adc	r25, r25
    124a:	0a 94       	dec	r0
    124c:	e2 f7       	brpl	.-8      	; 0x1246 <Dio_vidSetPinVal+0x136>
    124e:	80 95       	com	r24
    1250:	84 23       	and	r24, r20
    1252:	8c 93       	st	X, r24
    1254:	3f c0       	rjmp	.+126    	; 0x12d4 <Dio_vidSetPinVal+0x1c4>
			else
				SET_BIT(PORTC,Loc_u8Pin);
    1256:	a5 e3       	ldi	r26, 0x35	; 53
    1258:	b0 e0       	ldi	r27, 0x00	; 0
    125a:	e5 e3       	ldi	r30, 0x35	; 53
    125c:	f0 e0       	ldi	r31, 0x00	; 0
    125e:	80 81       	ld	r24, Z
    1260:	48 2f       	mov	r20, r24
    1262:	89 81       	ldd	r24, Y+1	; 0x01
    1264:	28 2f       	mov	r18, r24
    1266:	30 e0       	ldi	r19, 0x00	; 0
    1268:	81 e0       	ldi	r24, 0x01	; 1
    126a:	90 e0       	ldi	r25, 0x00	; 0
    126c:	02 2e       	mov	r0, r18
    126e:	02 c0       	rjmp	.+4      	; 0x1274 <Dio_vidSetPinVal+0x164>
    1270:	88 0f       	add	r24, r24
    1272:	99 1f       	adc	r25, r25
    1274:	0a 94       	dec	r0
    1276:	e2 f7       	brpl	.-8      	; 0x1270 <Dio_vidSetPinVal+0x160>
    1278:	84 2b       	or	r24, r20
    127a:	8c 93       	st	X, r24
    127c:	2b c0       	rjmp	.+86     	; 0x12d4 <Dio_vidSetPinVal+0x1c4>
			break;
		case 3:
			if(Val==0)
    127e:	8c 81       	ldd	r24, Y+4	; 0x04
    1280:	88 23       	and	r24, r24
    1282:	a9 f4       	brne	.+42     	; 0x12ae <Dio_vidSetPinVal+0x19e>
				CLEAR_BIT(PORTD,Loc_u8Pin);
    1284:	a2 e3       	ldi	r26, 0x32	; 50
    1286:	b0 e0       	ldi	r27, 0x00	; 0
    1288:	e2 e3       	ldi	r30, 0x32	; 50
    128a:	f0 e0       	ldi	r31, 0x00	; 0
    128c:	80 81       	ld	r24, Z
    128e:	48 2f       	mov	r20, r24
    1290:	89 81       	ldd	r24, Y+1	; 0x01
    1292:	28 2f       	mov	r18, r24
    1294:	30 e0       	ldi	r19, 0x00	; 0
    1296:	81 e0       	ldi	r24, 0x01	; 1
    1298:	90 e0       	ldi	r25, 0x00	; 0
    129a:	02 2e       	mov	r0, r18
    129c:	02 c0       	rjmp	.+4      	; 0x12a2 <Dio_vidSetPinVal+0x192>
    129e:	88 0f       	add	r24, r24
    12a0:	99 1f       	adc	r25, r25
    12a2:	0a 94       	dec	r0
    12a4:	e2 f7       	brpl	.-8      	; 0x129e <Dio_vidSetPinVal+0x18e>
    12a6:	80 95       	com	r24
    12a8:	84 23       	and	r24, r20
    12aa:	8c 93       	st	X, r24
    12ac:	13 c0       	rjmp	.+38     	; 0x12d4 <Dio_vidSetPinVal+0x1c4>
			else
				SET_BIT(PORTD,Loc_u8Pin);
    12ae:	a2 e3       	ldi	r26, 0x32	; 50
    12b0:	b0 e0       	ldi	r27, 0x00	; 0
    12b2:	e2 e3       	ldi	r30, 0x32	; 50
    12b4:	f0 e0       	ldi	r31, 0x00	; 0
    12b6:	80 81       	ld	r24, Z
    12b8:	48 2f       	mov	r20, r24
    12ba:	89 81       	ldd	r24, Y+1	; 0x01
    12bc:	28 2f       	mov	r18, r24
    12be:	30 e0       	ldi	r19, 0x00	; 0
    12c0:	81 e0       	ldi	r24, 0x01	; 1
    12c2:	90 e0       	ldi	r25, 0x00	; 0
    12c4:	02 2e       	mov	r0, r18
    12c6:	02 c0       	rjmp	.+4      	; 0x12cc <Dio_vidSetPinVal+0x1bc>
    12c8:	88 0f       	add	r24, r24
    12ca:	99 1f       	adc	r25, r25
    12cc:	0a 94       	dec	r0
    12ce:	e2 f7       	brpl	.-8      	; 0x12c8 <Dio_vidSetPinVal+0x1b8>
    12d0:	84 2b       	or	r24, r20
    12d2:	8c 93       	st	X, r24
			break;
		}
	}
    12d4:	26 96       	adiw	r28, 0x06	; 6
    12d6:	0f b6       	in	r0, 0x3f	; 63
    12d8:	f8 94       	cli
    12da:	de bf       	out	0x3e, r29	; 62
    12dc:	0f be       	out	0x3f, r0	; 63
    12de:	cd bf       	out	0x3d, r28	; 61
    12e0:	cf 91       	pop	r28
    12e2:	df 91       	pop	r29
    12e4:	08 95       	ret

000012e6 <Dio_u8GetPinVal>:
u8 Dio_u8GetPinVal(u8 Pin)
{
    12e6:	df 93       	push	r29
    12e8:	cf 93       	push	r28
    12ea:	cd b7       	in	r28, 0x3d	; 61
    12ec:	de b7       	in	r29, 0x3e	; 62
    12ee:	27 97       	sbiw	r28, 0x07	; 7
    12f0:	0f b6       	in	r0, 0x3f	; 63
    12f2:	f8 94       	cli
    12f4:	de bf       	out	0x3e, r29	; 62
    12f6:	0f be       	out	0x3f, r0	; 63
    12f8:	cd bf       	out	0x3d, r28	; 61
    12fa:	8b 83       	std	Y+3, r24	; 0x03
	u8 Loc_u8Port;
	u8 Loc_u8Pin;

	Loc_u8Port=Pin/8;
    12fc:	8b 81       	ldd	r24, Y+3	; 0x03
    12fe:	86 95       	lsr	r24
    1300:	86 95       	lsr	r24
    1302:	86 95       	lsr	r24
    1304:	8a 83       	std	Y+2, r24	; 0x02
	Loc_u8Pin=Pin%8;
    1306:	8b 81       	ldd	r24, Y+3	; 0x03
    1308:	87 70       	andi	r24, 0x07	; 7
    130a:	89 83       	std	Y+1, r24	; 0x01

	switch(Loc_u8Port)
    130c:	8a 81       	ldd	r24, Y+2	; 0x02
    130e:	28 2f       	mov	r18, r24
    1310:	30 e0       	ldi	r19, 0x00	; 0
    1312:	3e 83       	std	Y+6, r19	; 0x06
    1314:	2d 83       	std	Y+5, r18	; 0x05
    1316:	4d 81       	ldd	r20, Y+5	; 0x05
    1318:	5e 81       	ldd	r21, Y+6	; 0x06
    131a:	41 30       	cpi	r20, 0x01	; 1
    131c:	51 05       	cpc	r21, r1
    131e:	49 f1       	breq	.+82     	; 0x1372 <Dio_u8GetPinVal+0x8c>
    1320:	8d 81       	ldd	r24, Y+5	; 0x05
    1322:	9e 81       	ldd	r25, Y+6	; 0x06
    1324:	82 30       	cpi	r24, 0x02	; 2
    1326:	91 05       	cpc	r25, r1
    1328:	34 f4       	brge	.+12     	; 0x1336 <Dio_u8GetPinVal+0x50>
    132a:	2d 81       	ldd	r18, Y+5	; 0x05
    132c:	3e 81       	ldd	r19, Y+6	; 0x06
    132e:	21 15       	cp	r18, r1
    1330:	31 05       	cpc	r19, r1
    1332:	61 f0       	breq	.+24     	; 0x134c <Dio_u8GetPinVal+0x66>
    1334:	57 c0       	rjmp	.+174    	; 0x13e4 <Dio_u8GetPinVal+0xfe>
    1336:	4d 81       	ldd	r20, Y+5	; 0x05
    1338:	5e 81       	ldd	r21, Y+6	; 0x06
    133a:	42 30       	cpi	r20, 0x02	; 2
    133c:	51 05       	cpc	r21, r1
    133e:	61 f1       	breq	.+88     	; 0x1398 <Dio_u8GetPinVal+0xb2>
    1340:	8d 81       	ldd	r24, Y+5	; 0x05
    1342:	9e 81       	ldd	r25, Y+6	; 0x06
    1344:	83 30       	cpi	r24, 0x03	; 3
    1346:	91 05       	cpc	r25, r1
    1348:	d1 f1       	breq	.+116    	; 0x13be <Dio_u8GetPinVal+0xd8>
    134a:	4c c0       	rjmp	.+152    	; 0x13e4 <Dio_u8GetPinVal+0xfe>
	{

	case 0:
		return GET_BIT(PINA,Loc_u8Pin);
    134c:	e9 e3       	ldi	r30, 0x39	; 57
    134e:	f0 e0       	ldi	r31, 0x00	; 0
    1350:	80 81       	ld	r24, Z
    1352:	28 2f       	mov	r18, r24
    1354:	30 e0       	ldi	r19, 0x00	; 0
    1356:	89 81       	ldd	r24, Y+1	; 0x01
    1358:	88 2f       	mov	r24, r24
    135a:	90 e0       	ldi	r25, 0x00	; 0
    135c:	a9 01       	movw	r20, r18
    135e:	02 c0       	rjmp	.+4      	; 0x1364 <Dio_u8GetPinVal+0x7e>
    1360:	55 95       	asr	r21
    1362:	47 95       	ror	r20
    1364:	8a 95       	dec	r24
    1366:	e2 f7       	brpl	.-8      	; 0x1360 <Dio_u8GetPinVal+0x7a>
    1368:	ca 01       	movw	r24, r20
    136a:	58 2f       	mov	r21, r24
    136c:	51 70       	andi	r21, 0x01	; 1
    136e:	5c 83       	std	Y+4, r21	; 0x04
    1370:	3a c0       	rjmp	.+116    	; 0x13e6 <Dio_u8GetPinVal+0x100>
		break;
	case 1:
		return GET_BIT(PINB,Loc_u8Pin);
    1372:	e6 e3       	ldi	r30, 0x36	; 54
    1374:	f0 e0       	ldi	r31, 0x00	; 0
    1376:	80 81       	ld	r24, Z
    1378:	28 2f       	mov	r18, r24
    137a:	30 e0       	ldi	r19, 0x00	; 0
    137c:	89 81       	ldd	r24, Y+1	; 0x01
    137e:	88 2f       	mov	r24, r24
    1380:	90 e0       	ldi	r25, 0x00	; 0
    1382:	a9 01       	movw	r20, r18
    1384:	02 c0       	rjmp	.+4      	; 0x138a <Dio_u8GetPinVal+0xa4>
    1386:	55 95       	asr	r21
    1388:	47 95       	ror	r20
    138a:	8a 95       	dec	r24
    138c:	e2 f7       	brpl	.-8      	; 0x1386 <Dio_u8GetPinVal+0xa0>
    138e:	ca 01       	movw	r24, r20
    1390:	58 2f       	mov	r21, r24
    1392:	51 70       	andi	r21, 0x01	; 1
    1394:	5c 83       	std	Y+4, r21	; 0x04
    1396:	27 c0       	rjmp	.+78     	; 0x13e6 <Dio_u8GetPinVal+0x100>
		break;
	case 2:
		return GET_BIT(PINC,Loc_u8Pin);
    1398:	e3 e3       	ldi	r30, 0x33	; 51
    139a:	f0 e0       	ldi	r31, 0x00	; 0
    139c:	80 81       	ld	r24, Z
    139e:	28 2f       	mov	r18, r24
    13a0:	30 e0       	ldi	r19, 0x00	; 0
    13a2:	89 81       	ldd	r24, Y+1	; 0x01
    13a4:	88 2f       	mov	r24, r24
    13a6:	90 e0       	ldi	r25, 0x00	; 0
    13a8:	a9 01       	movw	r20, r18
    13aa:	02 c0       	rjmp	.+4      	; 0x13b0 <Dio_u8GetPinVal+0xca>
    13ac:	55 95       	asr	r21
    13ae:	47 95       	ror	r20
    13b0:	8a 95       	dec	r24
    13b2:	e2 f7       	brpl	.-8      	; 0x13ac <Dio_u8GetPinVal+0xc6>
    13b4:	ca 01       	movw	r24, r20
    13b6:	58 2f       	mov	r21, r24
    13b8:	51 70       	andi	r21, 0x01	; 1
    13ba:	5c 83       	std	Y+4, r21	; 0x04
    13bc:	14 c0       	rjmp	.+40     	; 0x13e6 <Dio_u8GetPinVal+0x100>
		break;
	case 3:
		return GET_BIT(PIND,Loc_u8Pin);
    13be:	e0 e3       	ldi	r30, 0x30	; 48
    13c0:	f0 e0       	ldi	r31, 0x00	; 0
    13c2:	80 81       	ld	r24, Z
    13c4:	28 2f       	mov	r18, r24
    13c6:	30 e0       	ldi	r19, 0x00	; 0
    13c8:	89 81       	ldd	r24, Y+1	; 0x01
    13ca:	88 2f       	mov	r24, r24
    13cc:	90 e0       	ldi	r25, 0x00	; 0
    13ce:	a9 01       	movw	r20, r18
    13d0:	02 c0       	rjmp	.+4      	; 0x13d6 <Dio_u8GetPinVal+0xf0>
    13d2:	55 95       	asr	r21
    13d4:	47 95       	ror	r20
    13d6:	8a 95       	dec	r24
    13d8:	e2 f7       	brpl	.-8      	; 0x13d2 <Dio_u8GetPinVal+0xec>
    13da:	ca 01       	movw	r24, r20
    13dc:	58 2f       	mov	r21, r24
    13de:	51 70       	andi	r21, 0x01	; 1
    13e0:	5c 83       	std	Y+4, r21	; 0x04
    13e2:	01 c0       	rjmp	.+2      	; 0x13e6 <Dio_u8GetPinVal+0x100>
    13e4:	02 c0       	rjmp	.+4      	; 0x13ea <Dio_u8GetPinVal+0x104>
	}




}
    13e6:	8c 81       	ldd	r24, Y+4	; 0x04
    13e8:	8f 83       	std	Y+7, r24	; 0x07
    13ea:	8f 81       	ldd	r24, Y+7	; 0x07
    13ec:	27 96       	adiw	r28, 0x07	; 7
    13ee:	0f b6       	in	r0, 0x3f	; 63
    13f0:	f8 94       	cli
    13f2:	de bf       	out	0x3e, r29	; 62
    13f4:	0f be       	out	0x3f, r0	; 63
    13f6:	cd bf       	out	0x3d, r28	; 61
    13f8:	cf 91       	pop	r28
    13fa:	df 91       	pop	r29
    13fc:	08 95       	ret

000013fe <Keypad_vidInit>:
#include"Dio_int.h"
#include"Keypad_cfg.h"
#include"Keypad_int.h"

void Keypad_vidInit(void)
{
    13fe:	df 93       	push	r29
    1400:	cf 93       	push	r28
    1402:	cd b7       	in	r28, 0x3d	; 61
    1404:	de b7       	in	r29, 0x3e	; 62
	Dio_vidSetPinDir(KEYPAD_u8R1,DIO_u8OUTPUT);
    1406:	80 e0       	ldi	r24, 0x00	; 0
    1408:	61 e0       	ldi	r22, 0x01	; 1
    140a:	0e 94 9d 07 	call	0xf3a	; 0xf3a <Dio_vidSetPinDir>
	Dio_vidSetPinDir(KEYPAD_u8R2,DIO_u8OUTPUT);
    140e:	81 e0       	ldi	r24, 0x01	; 1
    1410:	61 e0       	ldi	r22, 0x01	; 1
    1412:	0e 94 9d 07 	call	0xf3a	; 0xf3a <Dio_vidSetPinDir>
	Dio_vidSetPinDir(KEYPAD_u8R3,DIO_u8OUTPUT);
    1416:	82 e0       	ldi	r24, 0x02	; 2
    1418:	61 e0       	ldi	r22, 0x01	; 1
    141a:	0e 94 9d 07 	call	0xf3a	; 0xf3a <Dio_vidSetPinDir>
	Dio_vidSetPinDir(KEYPAD_u8R4,DIO_u8OUTPUT);
    141e:	83 e0       	ldi	r24, 0x03	; 3
    1420:	61 e0       	ldi	r22, 0x01	; 1
    1422:	0e 94 9d 07 	call	0xf3a	; 0xf3a <Dio_vidSetPinDir>

	Dio_vidSetPinDir(KEYPAD_u8C1,DIO_u8INPUT);
    1426:	84 e0       	ldi	r24, 0x04	; 4
    1428:	60 e0       	ldi	r22, 0x00	; 0
    142a:	0e 94 9d 07 	call	0xf3a	; 0xf3a <Dio_vidSetPinDir>
	Dio_vidSetPinDir(KEYPAD_u8C2,DIO_u8INPUT);
    142e:	85 e0       	ldi	r24, 0x05	; 5
    1430:	60 e0       	ldi	r22, 0x00	; 0
    1432:	0e 94 9d 07 	call	0xf3a	; 0xf3a <Dio_vidSetPinDir>
	Dio_vidSetPinDir(KEYPAD_u8C3,DIO_u8INPUT);
    1436:	86 e0       	ldi	r24, 0x06	; 6
    1438:	60 e0       	ldi	r22, 0x00	; 0
    143a:	0e 94 9d 07 	call	0xf3a	; 0xf3a <Dio_vidSetPinDir>
	Dio_vidSetPinDir(KEYPAD_u8C4,DIO_u8INPUT);
    143e:	87 e0       	ldi	r24, 0x07	; 7
    1440:	60 e0       	ldi	r22, 0x00	; 0
    1442:	0e 94 9d 07 	call	0xf3a	; 0xf3a <Dio_vidSetPinDir>

	Dio_vidSetPinVal(KEYPAD_u8C1,DIO_u8HIGH);
    1446:	84 e0       	ldi	r24, 0x04	; 4
    1448:	61 e0       	ldi	r22, 0x01	; 1
    144a:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(KEYPAD_u8C2,DIO_u8HIGH);
    144e:	85 e0       	ldi	r24, 0x05	; 5
    1450:	61 e0       	ldi	r22, 0x01	; 1
    1452:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(KEYPAD_u8C3,DIO_u8HIGH);
    1456:	86 e0       	ldi	r24, 0x06	; 6
    1458:	61 e0       	ldi	r22, 0x01	; 1
    145a:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(KEYPAD_u8C3,DIO_u8HIGH);
    145e:	86 e0       	ldi	r24, 0x06	; 6
    1460:	61 e0       	ldi	r22, 0x01	; 1
    1462:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>

}
    1466:	cf 91       	pop	r28
    1468:	df 91       	pop	r29
    146a:	08 95       	ret

0000146c <Keypad_u8GetKey>:
u8 Keypad_u8GetKey(void)
{
    146c:	df 93       	push	r29
    146e:	cf 93       	push	r28
    1470:	0f 92       	push	r0
    1472:	cd b7       	in	r28, 0x3d	; 61
    1474:	de b7       	in	r29, 0x3e	; 62
	Dio_vidSetPinVal(KEYPAD_u8R1,DIO_u8LOW);
    1476:	80 e0       	ldi	r24, 0x00	; 0
    1478:	60 e0       	ldi	r22, 0x00	; 0
    147a:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(KEYPAD_u8R2,DIO_u8HIGH);
    147e:	81 e0       	ldi	r24, 0x01	; 1
    1480:	61 e0       	ldi	r22, 0x01	; 1
    1482:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(KEYPAD_u8R3,DIO_u8HIGH);
    1486:	82 e0       	ldi	r24, 0x02	; 2
    1488:	61 e0       	ldi	r22, 0x01	; 1
    148a:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(KEYPAD_u8R4,DIO_u8HIGH);
    148e:	83 e0       	ldi	r24, 0x03	; 3
    1490:	61 e0       	ldi	r22, 0x01	; 1
    1492:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>

	if(     Dio_u8GetPinVal(KEYPAD_u8C1)==0  &&
    1496:	84 e0       	ldi	r24, 0x04	; 4
    1498:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    149c:	88 23       	and	r24, r24
    149e:	91 f4       	brne	.+36     	; 0x14c4 <Keypad_u8GetKey+0x58>
    14a0:	85 e0       	ldi	r24, 0x05	; 5
    14a2:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    14a6:	81 30       	cpi	r24, 0x01	; 1
    14a8:	69 f4       	brne	.+26     	; 0x14c4 <Keypad_u8GetKey+0x58>
    14aa:	86 e0       	ldi	r24, 0x06	; 6
    14ac:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    14b0:	81 30       	cpi	r24, 0x01	; 1
    14b2:	41 f4       	brne	.+16     	; 0x14c4 <Keypad_u8GetKey+0x58>
    14b4:	87 e0       	ldi	r24, 0x07	; 7
    14b6:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    14ba:	81 30       	cpi	r24, 0x01	; 1
    14bc:	19 f4       	brne	.+6      	; 0x14c4 <Keypad_u8GetKey+0x58>
			Dio_u8GetPinVal(KEYPAD_u8C2)==1 &&
			Dio_u8GetPinVal(KEYPAD_u8C3)==1 &&
			Dio_u8GetPinVal(KEYPAD_u8C4)==1    )

	{
		return 1;
    14be:	81 e0       	ldi	r24, 0x01	; 1
    14c0:	89 83       	std	Y+1, r24	; 0x01
    14c2:	8a c1       	rjmp	.+788    	; 0x17d8 <Keypad_u8GetKey+0x36c>
	}
	if(     Dio_u8GetPinVal(KEYPAD_u8C1)==1 &&
    14c4:	84 e0       	ldi	r24, 0x04	; 4
    14c6:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    14ca:	81 30       	cpi	r24, 0x01	; 1
    14cc:	91 f4       	brne	.+36     	; 0x14f2 <Keypad_u8GetKey+0x86>
    14ce:	85 e0       	ldi	r24, 0x05	; 5
    14d0:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    14d4:	88 23       	and	r24, r24
    14d6:	69 f4       	brne	.+26     	; 0x14f2 <Keypad_u8GetKey+0x86>
    14d8:	86 e0       	ldi	r24, 0x06	; 6
    14da:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    14de:	81 30       	cpi	r24, 0x01	; 1
    14e0:	41 f4       	brne	.+16     	; 0x14f2 <Keypad_u8GetKey+0x86>
    14e2:	87 e0       	ldi	r24, 0x07	; 7
    14e4:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    14e8:	81 30       	cpi	r24, 0x01	; 1
    14ea:	19 f4       	brne	.+6      	; 0x14f2 <Keypad_u8GetKey+0x86>
			Dio_u8GetPinVal(KEYPAD_u8C2)==0&&
			Dio_u8GetPinVal(KEYPAD_u8C3)==1&&
			Dio_u8GetPinVal(KEYPAD_u8C4)==1   )

	{
		return 2;
    14ec:	82 e0       	ldi	r24, 0x02	; 2
    14ee:	89 83       	std	Y+1, r24	; 0x01
    14f0:	73 c1       	rjmp	.+742    	; 0x17d8 <Keypad_u8GetKey+0x36c>
	}
	if(     Dio_u8GetPinVal(KEYPAD_u8C1)==1 &&
    14f2:	84 e0       	ldi	r24, 0x04	; 4
    14f4:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    14f8:	81 30       	cpi	r24, 0x01	; 1
    14fa:	91 f4       	brne	.+36     	; 0x1520 <Keypad_u8GetKey+0xb4>
    14fc:	85 e0       	ldi	r24, 0x05	; 5
    14fe:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    1502:	81 30       	cpi	r24, 0x01	; 1
    1504:	69 f4       	brne	.+26     	; 0x1520 <Keypad_u8GetKey+0xb4>
    1506:	86 e0       	ldi	r24, 0x06	; 6
    1508:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    150c:	88 23       	and	r24, r24
    150e:	41 f4       	brne	.+16     	; 0x1520 <Keypad_u8GetKey+0xb4>
    1510:	87 e0       	ldi	r24, 0x07	; 7
    1512:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    1516:	81 30       	cpi	r24, 0x01	; 1
    1518:	19 f4       	brne	.+6      	; 0x1520 <Keypad_u8GetKey+0xb4>
			Dio_u8GetPinVal(KEYPAD_u8C2)==1&&
			Dio_u8GetPinVal(KEYPAD_u8C3)==0&&
			Dio_u8GetPinVal(KEYPAD_u8C4)==1   )

	{
		return 3;
    151a:	83 e0       	ldi	r24, 0x03	; 3
    151c:	89 83       	std	Y+1, r24	; 0x01
    151e:	5c c1       	rjmp	.+696    	; 0x17d8 <Keypad_u8GetKey+0x36c>
	}
	if(     Dio_u8GetPinVal(KEYPAD_u8C1)==1 &&
    1520:	84 e0       	ldi	r24, 0x04	; 4
    1522:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    1526:	81 30       	cpi	r24, 0x01	; 1
    1528:	91 f4       	brne	.+36     	; 0x154e <Keypad_u8GetKey+0xe2>
    152a:	85 e0       	ldi	r24, 0x05	; 5
    152c:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    1530:	81 30       	cpi	r24, 0x01	; 1
    1532:	69 f4       	brne	.+26     	; 0x154e <Keypad_u8GetKey+0xe2>
    1534:	86 e0       	ldi	r24, 0x06	; 6
    1536:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    153a:	81 30       	cpi	r24, 0x01	; 1
    153c:	41 f4       	brne	.+16     	; 0x154e <Keypad_u8GetKey+0xe2>
    153e:	87 e0       	ldi	r24, 0x07	; 7
    1540:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    1544:	88 23       	and	r24, r24
    1546:	19 f4       	brne	.+6      	; 0x154e <Keypad_u8GetKey+0xe2>
			Dio_u8GetPinVal(KEYPAD_u8C2)==1&&
			Dio_u8GetPinVal(KEYPAD_u8C3)==1&&
			Dio_u8GetPinVal(KEYPAD_u8C4)==0   )
	{
		return 10;
    1548:	8a e0       	ldi	r24, 0x0A	; 10
    154a:	89 83       	std	Y+1, r24	; 0x01
    154c:	45 c1       	rjmp	.+650    	; 0x17d8 <Keypad_u8GetKey+0x36c>
	}

	Dio_vidSetPinVal(KEYPAD_u8R1,DIO_u8HIGH);
    154e:	80 e0       	ldi	r24, 0x00	; 0
    1550:	61 e0       	ldi	r22, 0x01	; 1
    1552:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(KEYPAD_u8R2,DIO_u8LOW);
    1556:	81 e0       	ldi	r24, 0x01	; 1
    1558:	60 e0       	ldi	r22, 0x00	; 0
    155a:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(KEYPAD_u8R3,DIO_u8HIGH);
    155e:	82 e0       	ldi	r24, 0x02	; 2
    1560:	61 e0       	ldi	r22, 0x01	; 1
    1562:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(KEYPAD_u8R4,DIO_u8HIGH);
    1566:	83 e0       	ldi	r24, 0x03	; 3
    1568:	61 e0       	ldi	r22, 0x01	; 1
    156a:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>

	if(     Dio_u8GetPinVal(KEYPAD_u8C1)==0  &&
    156e:	84 e0       	ldi	r24, 0x04	; 4
    1570:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    1574:	88 23       	and	r24, r24
    1576:	91 f4       	brne	.+36     	; 0x159c <Keypad_u8GetKey+0x130>
    1578:	85 e0       	ldi	r24, 0x05	; 5
    157a:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    157e:	81 30       	cpi	r24, 0x01	; 1
    1580:	69 f4       	brne	.+26     	; 0x159c <Keypad_u8GetKey+0x130>
    1582:	86 e0       	ldi	r24, 0x06	; 6
    1584:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    1588:	81 30       	cpi	r24, 0x01	; 1
    158a:	41 f4       	brne	.+16     	; 0x159c <Keypad_u8GetKey+0x130>
    158c:	87 e0       	ldi	r24, 0x07	; 7
    158e:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    1592:	81 30       	cpi	r24, 0x01	; 1
    1594:	19 f4       	brne	.+6      	; 0x159c <Keypad_u8GetKey+0x130>
			Dio_u8GetPinVal(KEYPAD_u8C2)==1 &&
			Dio_u8GetPinVal(KEYPAD_u8C3)==1 &&
			Dio_u8GetPinVal(KEYPAD_u8C4)==1    )

	{
		return 4;
    1596:	84 e0       	ldi	r24, 0x04	; 4
    1598:	89 83       	std	Y+1, r24	; 0x01
    159a:	1e c1       	rjmp	.+572    	; 0x17d8 <Keypad_u8GetKey+0x36c>
	}
	if(     Dio_u8GetPinVal(KEYPAD_u8C1)==1 &&
    159c:	84 e0       	ldi	r24, 0x04	; 4
    159e:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    15a2:	81 30       	cpi	r24, 0x01	; 1
    15a4:	91 f4       	brne	.+36     	; 0x15ca <Keypad_u8GetKey+0x15e>
    15a6:	85 e0       	ldi	r24, 0x05	; 5
    15a8:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    15ac:	88 23       	and	r24, r24
    15ae:	69 f4       	brne	.+26     	; 0x15ca <Keypad_u8GetKey+0x15e>
    15b0:	86 e0       	ldi	r24, 0x06	; 6
    15b2:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    15b6:	81 30       	cpi	r24, 0x01	; 1
    15b8:	41 f4       	brne	.+16     	; 0x15ca <Keypad_u8GetKey+0x15e>
    15ba:	87 e0       	ldi	r24, 0x07	; 7
    15bc:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    15c0:	81 30       	cpi	r24, 0x01	; 1
    15c2:	19 f4       	brne	.+6      	; 0x15ca <Keypad_u8GetKey+0x15e>
			Dio_u8GetPinVal(KEYPAD_u8C2)==0&&
			Dio_u8GetPinVal(KEYPAD_u8C3)==1&&
			Dio_u8GetPinVal(KEYPAD_u8C4)==1   )

	{
		return 5;
    15c4:	85 e0       	ldi	r24, 0x05	; 5
    15c6:	89 83       	std	Y+1, r24	; 0x01
    15c8:	07 c1       	rjmp	.+526    	; 0x17d8 <Keypad_u8GetKey+0x36c>
	}
	if(     Dio_u8GetPinVal(KEYPAD_u8C1)==1 &&
    15ca:	84 e0       	ldi	r24, 0x04	; 4
    15cc:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    15d0:	81 30       	cpi	r24, 0x01	; 1
    15d2:	91 f4       	brne	.+36     	; 0x15f8 <Keypad_u8GetKey+0x18c>
    15d4:	85 e0       	ldi	r24, 0x05	; 5
    15d6:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    15da:	81 30       	cpi	r24, 0x01	; 1
    15dc:	69 f4       	brne	.+26     	; 0x15f8 <Keypad_u8GetKey+0x18c>
    15de:	86 e0       	ldi	r24, 0x06	; 6
    15e0:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    15e4:	88 23       	and	r24, r24
    15e6:	41 f4       	brne	.+16     	; 0x15f8 <Keypad_u8GetKey+0x18c>
    15e8:	87 e0       	ldi	r24, 0x07	; 7
    15ea:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    15ee:	81 30       	cpi	r24, 0x01	; 1
    15f0:	19 f4       	brne	.+6      	; 0x15f8 <Keypad_u8GetKey+0x18c>
			Dio_u8GetPinVal(KEYPAD_u8C2)==1&&
			Dio_u8GetPinVal(KEYPAD_u8C3)==0&&
			Dio_u8GetPinVal(KEYPAD_u8C4)==1   )

	{
		return 6;
    15f2:	86 e0       	ldi	r24, 0x06	; 6
    15f4:	89 83       	std	Y+1, r24	; 0x01
    15f6:	f0 c0       	rjmp	.+480    	; 0x17d8 <Keypad_u8GetKey+0x36c>
	}
	if(     Dio_u8GetPinVal(KEYPAD_u8C1)==1 &&
    15f8:	84 e0       	ldi	r24, 0x04	; 4
    15fa:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    15fe:	81 30       	cpi	r24, 0x01	; 1
    1600:	91 f4       	brne	.+36     	; 0x1626 <Keypad_u8GetKey+0x1ba>
    1602:	85 e0       	ldi	r24, 0x05	; 5
    1604:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    1608:	81 30       	cpi	r24, 0x01	; 1
    160a:	69 f4       	brne	.+26     	; 0x1626 <Keypad_u8GetKey+0x1ba>
    160c:	86 e0       	ldi	r24, 0x06	; 6
    160e:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    1612:	81 30       	cpi	r24, 0x01	; 1
    1614:	41 f4       	brne	.+16     	; 0x1626 <Keypad_u8GetKey+0x1ba>
    1616:	87 e0       	ldi	r24, 0x07	; 7
    1618:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    161c:	88 23       	and	r24, r24
    161e:	19 f4       	brne	.+6      	; 0x1626 <Keypad_u8GetKey+0x1ba>
			Dio_u8GetPinVal(KEYPAD_u8C2)==1&&
			Dio_u8GetPinVal(KEYPAD_u8C3)==1&&
			Dio_u8GetPinVal(KEYPAD_u8C4)==0   )
	{
		return 11;
    1620:	8b e0       	ldi	r24, 0x0B	; 11
    1622:	89 83       	std	Y+1, r24	; 0x01
    1624:	d9 c0       	rjmp	.+434    	; 0x17d8 <Keypad_u8GetKey+0x36c>
	}
	Dio_vidSetPinVal(KEYPAD_u8R1,DIO_u8HIGH);
    1626:	80 e0       	ldi	r24, 0x00	; 0
    1628:	61 e0       	ldi	r22, 0x01	; 1
    162a:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
		Dio_vidSetPinVal(KEYPAD_u8R2,DIO_u8HIGH);
    162e:	81 e0       	ldi	r24, 0x01	; 1
    1630:	61 e0       	ldi	r22, 0x01	; 1
    1632:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
		Dio_vidSetPinVal(KEYPAD_u8R3,DIO_u8LOW);
    1636:	82 e0       	ldi	r24, 0x02	; 2
    1638:	60 e0       	ldi	r22, 0x00	; 0
    163a:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
		Dio_vidSetPinVal(KEYPAD_u8R4,DIO_u8HIGH);
    163e:	83 e0       	ldi	r24, 0x03	; 3
    1640:	61 e0       	ldi	r22, 0x01	; 1
    1642:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>

		if(     Dio_u8GetPinVal(KEYPAD_u8C1)==0  &&
    1646:	84 e0       	ldi	r24, 0x04	; 4
    1648:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    164c:	88 23       	and	r24, r24
    164e:	91 f4       	brne	.+36     	; 0x1674 <Keypad_u8GetKey+0x208>
    1650:	85 e0       	ldi	r24, 0x05	; 5
    1652:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    1656:	81 30       	cpi	r24, 0x01	; 1
    1658:	69 f4       	brne	.+26     	; 0x1674 <Keypad_u8GetKey+0x208>
    165a:	86 e0       	ldi	r24, 0x06	; 6
    165c:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    1660:	81 30       	cpi	r24, 0x01	; 1
    1662:	41 f4       	brne	.+16     	; 0x1674 <Keypad_u8GetKey+0x208>
    1664:	87 e0       	ldi	r24, 0x07	; 7
    1666:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    166a:	81 30       	cpi	r24, 0x01	; 1
    166c:	19 f4       	brne	.+6      	; 0x1674 <Keypad_u8GetKey+0x208>
				Dio_u8GetPinVal(KEYPAD_u8C2)==1 &&
				Dio_u8GetPinVal(KEYPAD_u8C3)==1 &&
				Dio_u8GetPinVal(KEYPAD_u8C4)==1    )

		{
			return 7;
    166e:	87 e0       	ldi	r24, 0x07	; 7
    1670:	89 83       	std	Y+1, r24	; 0x01
    1672:	b2 c0       	rjmp	.+356    	; 0x17d8 <Keypad_u8GetKey+0x36c>
		}
		if(     Dio_u8GetPinVal(KEYPAD_u8C1)==1 &&
    1674:	84 e0       	ldi	r24, 0x04	; 4
    1676:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    167a:	81 30       	cpi	r24, 0x01	; 1
    167c:	91 f4       	brne	.+36     	; 0x16a2 <Keypad_u8GetKey+0x236>
    167e:	85 e0       	ldi	r24, 0x05	; 5
    1680:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    1684:	88 23       	and	r24, r24
    1686:	69 f4       	brne	.+26     	; 0x16a2 <Keypad_u8GetKey+0x236>
    1688:	86 e0       	ldi	r24, 0x06	; 6
    168a:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    168e:	81 30       	cpi	r24, 0x01	; 1
    1690:	41 f4       	brne	.+16     	; 0x16a2 <Keypad_u8GetKey+0x236>
    1692:	87 e0       	ldi	r24, 0x07	; 7
    1694:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    1698:	81 30       	cpi	r24, 0x01	; 1
    169a:	19 f4       	brne	.+6      	; 0x16a2 <Keypad_u8GetKey+0x236>
				Dio_u8GetPinVal(KEYPAD_u8C2)==0&&
				Dio_u8GetPinVal(KEYPAD_u8C3)==1&&
				Dio_u8GetPinVal(KEYPAD_u8C4)==1   )

		{
			return 8;
    169c:	88 e0       	ldi	r24, 0x08	; 8
    169e:	89 83       	std	Y+1, r24	; 0x01
    16a0:	9b c0       	rjmp	.+310    	; 0x17d8 <Keypad_u8GetKey+0x36c>
		}
		if(     Dio_u8GetPinVal(KEYPAD_u8C1)==1 &&
    16a2:	84 e0       	ldi	r24, 0x04	; 4
    16a4:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    16a8:	81 30       	cpi	r24, 0x01	; 1
    16aa:	91 f4       	brne	.+36     	; 0x16d0 <Keypad_u8GetKey+0x264>
    16ac:	85 e0       	ldi	r24, 0x05	; 5
    16ae:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    16b2:	81 30       	cpi	r24, 0x01	; 1
    16b4:	69 f4       	brne	.+26     	; 0x16d0 <Keypad_u8GetKey+0x264>
    16b6:	86 e0       	ldi	r24, 0x06	; 6
    16b8:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    16bc:	88 23       	and	r24, r24
    16be:	41 f4       	brne	.+16     	; 0x16d0 <Keypad_u8GetKey+0x264>
    16c0:	87 e0       	ldi	r24, 0x07	; 7
    16c2:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    16c6:	81 30       	cpi	r24, 0x01	; 1
    16c8:	19 f4       	brne	.+6      	; 0x16d0 <Keypad_u8GetKey+0x264>
				Dio_u8GetPinVal(KEYPAD_u8C2)==1&&
				Dio_u8GetPinVal(KEYPAD_u8C3)==0&&
				Dio_u8GetPinVal(KEYPAD_u8C4)==1   )

		{
			return 9;
    16ca:	89 e0       	ldi	r24, 0x09	; 9
    16cc:	89 83       	std	Y+1, r24	; 0x01
    16ce:	84 c0       	rjmp	.+264    	; 0x17d8 <Keypad_u8GetKey+0x36c>
		}
		if(     Dio_u8GetPinVal(KEYPAD_u8C1)==1 &&
    16d0:	84 e0       	ldi	r24, 0x04	; 4
    16d2:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    16d6:	81 30       	cpi	r24, 0x01	; 1
    16d8:	91 f4       	brne	.+36     	; 0x16fe <Keypad_u8GetKey+0x292>
    16da:	85 e0       	ldi	r24, 0x05	; 5
    16dc:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    16e0:	81 30       	cpi	r24, 0x01	; 1
    16e2:	69 f4       	brne	.+26     	; 0x16fe <Keypad_u8GetKey+0x292>
    16e4:	86 e0       	ldi	r24, 0x06	; 6
    16e6:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    16ea:	81 30       	cpi	r24, 0x01	; 1
    16ec:	41 f4       	brne	.+16     	; 0x16fe <Keypad_u8GetKey+0x292>
    16ee:	87 e0       	ldi	r24, 0x07	; 7
    16f0:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    16f4:	88 23       	and	r24, r24
    16f6:	19 f4       	brne	.+6      	; 0x16fe <Keypad_u8GetKey+0x292>
				Dio_u8GetPinVal(KEYPAD_u8C2)==1&&
				Dio_u8GetPinVal(KEYPAD_u8C3)==1&&
				Dio_u8GetPinVal(KEYPAD_u8C4)==0   )
		{
			return 12;
    16f8:	8c e0       	ldi	r24, 0x0C	; 12
    16fa:	89 83       	std	Y+1, r24	; 0x01
    16fc:	6d c0       	rjmp	.+218    	; 0x17d8 <Keypad_u8GetKey+0x36c>
		}

		Dio_vidSetPinVal(KEYPAD_u8R1,DIO_u8HIGH);
    16fe:	80 e0       	ldi	r24, 0x00	; 0
    1700:	61 e0       	ldi	r22, 0x01	; 1
    1702:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
			Dio_vidSetPinVal(KEYPAD_u8R2,DIO_u8HIGH);
    1706:	81 e0       	ldi	r24, 0x01	; 1
    1708:	61 e0       	ldi	r22, 0x01	; 1
    170a:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
			Dio_vidSetPinVal(KEYPAD_u8R3,DIO_u8HIGH);
    170e:	82 e0       	ldi	r24, 0x02	; 2
    1710:	61 e0       	ldi	r22, 0x01	; 1
    1712:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
			Dio_vidSetPinVal(KEYPAD_u8R4,DIO_u8LOW);
    1716:	83 e0       	ldi	r24, 0x03	; 3
    1718:	60 e0       	ldi	r22, 0x00	; 0
    171a:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>

			if(     Dio_u8GetPinVal(KEYPAD_u8C1)==0  &&
    171e:	84 e0       	ldi	r24, 0x04	; 4
    1720:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    1724:	88 23       	and	r24, r24
    1726:	91 f4       	brne	.+36     	; 0x174c <Keypad_u8GetKey+0x2e0>
    1728:	85 e0       	ldi	r24, 0x05	; 5
    172a:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    172e:	81 30       	cpi	r24, 0x01	; 1
    1730:	69 f4       	brne	.+26     	; 0x174c <Keypad_u8GetKey+0x2e0>
    1732:	86 e0       	ldi	r24, 0x06	; 6
    1734:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    1738:	81 30       	cpi	r24, 0x01	; 1
    173a:	41 f4       	brne	.+16     	; 0x174c <Keypad_u8GetKey+0x2e0>
    173c:	87 e0       	ldi	r24, 0x07	; 7
    173e:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    1742:	81 30       	cpi	r24, 0x01	; 1
    1744:	19 f4       	brne	.+6      	; 0x174c <Keypad_u8GetKey+0x2e0>
					Dio_u8GetPinVal(KEYPAD_u8C2)==1 &&
					Dio_u8GetPinVal(KEYPAD_u8C3)==1 &&
					Dio_u8GetPinVal(KEYPAD_u8C4)==1    )

			{
				return 15;
    1746:	8f e0       	ldi	r24, 0x0F	; 15
    1748:	89 83       	std	Y+1, r24	; 0x01
    174a:	46 c0       	rjmp	.+140    	; 0x17d8 <Keypad_u8GetKey+0x36c>
			}
			if(     Dio_u8GetPinVal(KEYPAD_u8C1)==1 &&
    174c:	84 e0       	ldi	r24, 0x04	; 4
    174e:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    1752:	81 30       	cpi	r24, 0x01	; 1
    1754:	89 f4       	brne	.+34     	; 0x1778 <Keypad_u8GetKey+0x30c>
    1756:	85 e0       	ldi	r24, 0x05	; 5
    1758:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    175c:	88 23       	and	r24, r24
    175e:	61 f4       	brne	.+24     	; 0x1778 <Keypad_u8GetKey+0x30c>
    1760:	86 e0       	ldi	r24, 0x06	; 6
    1762:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    1766:	81 30       	cpi	r24, 0x01	; 1
    1768:	39 f4       	brne	.+14     	; 0x1778 <Keypad_u8GetKey+0x30c>
    176a:	87 e0       	ldi	r24, 0x07	; 7
    176c:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    1770:	81 30       	cpi	r24, 0x01	; 1
    1772:	11 f4       	brne	.+4      	; 0x1778 <Keypad_u8GetKey+0x30c>
					Dio_u8GetPinVal(KEYPAD_u8C2)==0&&
					Dio_u8GetPinVal(KEYPAD_u8C3)==1&&
					Dio_u8GetPinVal(KEYPAD_u8C4)==1   )

			{
				return 0;
    1774:	19 82       	std	Y+1, r1	; 0x01
    1776:	30 c0       	rjmp	.+96     	; 0x17d8 <Keypad_u8GetKey+0x36c>
			}
			if(     Dio_u8GetPinVal(KEYPAD_u8C1)==1 &&
    1778:	84 e0       	ldi	r24, 0x04	; 4
    177a:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    177e:	81 30       	cpi	r24, 0x01	; 1
    1780:	91 f4       	brne	.+36     	; 0x17a6 <Keypad_u8GetKey+0x33a>
    1782:	85 e0       	ldi	r24, 0x05	; 5
    1784:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    1788:	81 30       	cpi	r24, 0x01	; 1
    178a:	69 f4       	brne	.+26     	; 0x17a6 <Keypad_u8GetKey+0x33a>
    178c:	86 e0       	ldi	r24, 0x06	; 6
    178e:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    1792:	88 23       	and	r24, r24
    1794:	41 f4       	brne	.+16     	; 0x17a6 <Keypad_u8GetKey+0x33a>
    1796:	87 e0       	ldi	r24, 0x07	; 7
    1798:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    179c:	81 30       	cpi	r24, 0x01	; 1
    179e:	19 f4       	brne	.+6      	; 0x17a6 <Keypad_u8GetKey+0x33a>
					Dio_u8GetPinVal(KEYPAD_u8C2)==1&&
					Dio_u8GetPinVal(KEYPAD_u8C3)==0&&
					Dio_u8GetPinVal(KEYPAD_u8C4)==1 )

			{
				return 14 ;
    17a0:	8e e0       	ldi	r24, 0x0E	; 14
    17a2:	89 83       	std	Y+1, r24	; 0x01
    17a4:	19 c0       	rjmp	.+50     	; 0x17d8 <Keypad_u8GetKey+0x36c>
			}
			if(     Dio_u8GetPinVal(KEYPAD_u8C1)==1&&
    17a6:	84 e0       	ldi	r24, 0x04	; 4
    17a8:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    17ac:	81 30       	cpi	r24, 0x01	; 1
    17ae:	91 f4       	brne	.+36     	; 0x17d4 <Keypad_u8GetKey+0x368>
    17b0:	85 e0       	ldi	r24, 0x05	; 5
    17b2:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    17b6:	81 30       	cpi	r24, 0x01	; 1
    17b8:	69 f4       	brne	.+26     	; 0x17d4 <Keypad_u8GetKey+0x368>
    17ba:	86 e0       	ldi	r24, 0x06	; 6
    17bc:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    17c0:	81 30       	cpi	r24, 0x01	; 1
    17c2:	41 f4       	brne	.+16     	; 0x17d4 <Keypad_u8GetKey+0x368>
    17c4:	87 e0       	ldi	r24, 0x07	; 7
    17c6:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Dio_u8GetPinVal>
    17ca:	88 23       	and	r24, r24
    17cc:	19 f4       	brne	.+6      	; 0x17d4 <Keypad_u8GetKey+0x368>
					Dio_u8GetPinVal(KEYPAD_u8C2)==1&&
					Dio_u8GetPinVal(KEYPAD_u8C3)==1&&
					Dio_u8GetPinVal(KEYPAD_u8C4)==0  )
			{
				return 13;
    17ce:	8d e0       	ldi	r24, 0x0D	; 13
    17d0:	89 83       	std	Y+1, r24	; 0x01
    17d2:	02 c0       	rjmp	.+4      	; 0x17d8 <Keypad_u8GetKey+0x36c>
			}
return KEYPAD_u8NO_KEY;
    17d4:	8f ef       	ldi	r24, 0xFF	; 255
    17d6:	89 83       	std	Y+1, r24	; 0x01
    17d8:	89 81       	ldd	r24, Y+1	; 0x01

}
    17da:	0f 90       	pop	r0
    17dc:	cf 91       	pop	r28
    17de:	df 91       	pop	r29
    17e0:	08 95       	ret

000017e2 <Lcd_vidInit>:
#include"Lcd_cfg.h"
#include"Lcd_int.h"


void Lcd_vidInit(void)
{
    17e2:	df 93       	push	r29
    17e4:	cf 93       	push	r28
    17e6:	cd b7       	in	r28, 0x3d	; 61
    17e8:	de b7       	in	r29, 0x3e	; 62
    17ea:	aa 97       	sbiw	r28, 0x2a	; 42
    17ec:	0f b6       	in	r0, 0x3f	; 63
    17ee:	f8 94       	cli
    17f0:	de bf       	out	0x3e, r29	; 62
    17f2:	0f be       	out	0x3f, r0	; 63
    17f4:	cd bf       	out	0x3d, r28	; 61
	Dio_vidSetPinDir(LCD_u8D0,DIO_u8OUTPUT);
    17f6:	88 e0       	ldi	r24, 0x08	; 8
    17f8:	61 e0       	ldi	r22, 0x01	; 1
    17fa:	0e 94 9d 07 	call	0xf3a	; 0xf3a <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D1,DIO_u8OUTPUT);
    17fe:	89 e0       	ldi	r24, 0x09	; 9
    1800:	61 e0       	ldi	r22, 0x01	; 1
    1802:	0e 94 9d 07 	call	0xf3a	; 0xf3a <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D2,DIO_u8OUTPUT);
    1806:	8a e0       	ldi	r24, 0x0A	; 10
    1808:	61 e0       	ldi	r22, 0x01	; 1
    180a:	0e 94 9d 07 	call	0xf3a	; 0xf3a <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D3,DIO_u8OUTPUT);
    180e:	8b e0       	ldi	r24, 0x0B	; 11
    1810:	61 e0       	ldi	r22, 0x01	; 1
    1812:	0e 94 9d 07 	call	0xf3a	; 0xf3a <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D3,DIO_u8OUTPUT);
    1816:	8b e0       	ldi	r24, 0x0B	; 11
    1818:	61 e0       	ldi	r22, 0x01	; 1
    181a:	0e 94 9d 07 	call	0xf3a	; 0xf3a <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D4,DIO_u8OUTPUT);
    181e:	8c e0       	ldi	r24, 0x0C	; 12
    1820:	61 e0       	ldi	r22, 0x01	; 1
    1822:	0e 94 9d 07 	call	0xf3a	; 0xf3a <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D5,DIO_u8OUTPUT);
    1826:	8d e0       	ldi	r24, 0x0D	; 13
    1828:	61 e0       	ldi	r22, 0x01	; 1
    182a:	0e 94 9d 07 	call	0xf3a	; 0xf3a <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D6,DIO_u8OUTPUT);
    182e:	8e e0       	ldi	r24, 0x0E	; 14
    1830:	61 e0       	ldi	r22, 0x01	; 1
    1832:	0e 94 9d 07 	call	0xf3a	; 0xf3a <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D7,DIO_u8OUTPUT);
    1836:	8f e0       	ldi	r24, 0x0F	; 15
    1838:	61 e0       	ldi	r22, 0x01	; 1
    183a:	0e 94 9d 07 	call	0xf3a	; 0xf3a <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8RS,DIO_u8OUTPUT);
    183e:	80 e1       	ldi	r24, 0x10	; 16
    1840:	61 e0       	ldi	r22, 0x01	; 1
    1842:	0e 94 9d 07 	call	0xf3a	; 0xf3a <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8RW,DIO_u8OUTPUT);
    1846:	81 e1       	ldi	r24, 0x11	; 17
    1848:	61 e0       	ldi	r22, 0x01	; 1
    184a:	0e 94 9d 07 	call	0xf3a	; 0xf3a <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8EN,DIO_u8OUTPUT);
    184e:	82 e1       	ldi	r24, 0x12	; 18
    1850:	61 e0       	ldi	r22, 0x01	; 1
    1852:	0e 94 9d 07 	call	0xf3a	; 0xf3a <Dio_vidSetPinDir>

	Lcd_vidSendCommand(0x38);
    1856:	88 e3       	ldi	r24, 0x38	; 56
    1858:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <Lcd_vidSendCommand>
    185c:	80 e0       	ldi	r24, 0x00	; 0
    185e:	90 e0       	ldi	r25, 0x00	; 0
    1860:	a0 e0       	ldi	r26, 0x00	; 0
    1862:	b0 e4       	ldi	r27, 0x40	; 64
    1864:	8f a3       	std	Y+39, r24	; 0x27
    1866:	98 a7       	std	Y+40, r25	; 0x28
    1868:	a9 a7       	std	Y+41, r26	; 0x29
    186a:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    186c:	6f a1       	ldd	r22, Y+39	; 0x27
    186e:	78 a5       	ldd	r23, Y+40	; 0x28
    1870:	89 a5       	ldd	r24, Y+41	; 0x29
    1872:	9a a5       	ldd	r25, Y+42	; 0x2a
    1874:	20 e0       	ldi	r18, 0x00	; 0
    1876:	30 e0       	ldi	r19, 0x00	; 0
    1878:	4a ef       	ldi	r20, 0xFA	; 250
    187a:	54 e4       	ldi	r21, 0x44	; 68
    187c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1880:	dc 01       	movw	r26, r24
    1882:	cb 01       	movw	r24, r22
    1884:	8b a3       	std	Y+35, r24	; 0x23
    1886:	9c a3       	std	Y+36, r25	; 0x24
    1888:	ad a3       	std	Y+37, r26	; 0x25
    188a:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    188c:	6b a1       	ldd	r22, Y+35	; 0x23
    188e:	7c a1       	ldd	r23, Y+36	; 0x24
    1890:	8d a1       	ldd	r24, Y+37	; 0x25
    1892:	9e a1       	ldd	r25, Y+38	; 0x26
    1894:	20 e0       	ldi	r18, 0x00	; 0
    1896:	30 e0       	ldi	r19, 0x00	; 0
    1898:	40 e8       	ldi	r20, 0x80	; 128
    189a:	5f e3       	ldi	r21, 0x3F	; 63
    189c:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    18a0:	88 23       	and	r24, r24
    18a2:	2c f4       	brge	.+10     	; 0x18ae <Lcd_vidInit+0xcc>
		__ticks = 1;
    18a4:	81 e0       	ldi	r24, 0x01	; 1
    18a6:	90 e0       	ldi	r25, 0x00	; 0
    18a8:	9a a3       	std	Y+34, r25	; 0x22
    18aa:	89 a3       	std	Y+33, r24	; 0x21
    18ac:	3f c0       	rjmp	.+126    	; 0x192c <Lcd_vidInit+0x14a>
	else if (__tmp > 65535)
    18ae:	6b a1       	ldd	r22, Y+35	; 0x23
    18b0:	7c a1       	ldd	r23, Y+36	; 0x24
    18b2:	8d a1       	ldd	r24, Y+37	; 0x25
    18b4:	9e a1       	ldd	r25, Y+38	; 0x26
    18b6:	20 e0       	ldi	r18, 0x00	; 0
    18b8:	3f ef       	ldi	r19, 0xFF	; 255
    18ba:	4f e7       	ldi	r20, 0x7F	; 127
    18bc:	57 e4       	ldi	r21, 0x47	; 71
    18be:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    18c2:	18 16       	cp	r1, r24
    18c4:	4c f5       	brge	.+82     	; 0x1918 <Lcd_vidInit+0x136>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18c6:	6f a1       	ldd	r22, Y+39	; 0x27
    18c8:	78 a5       	ldd	r23, Y+40	; 0x28
    18ca:	89 a5       	ldd	r24, Y+41	; 0x29
    18cc:	9a a5       	ldd	r25, Y+42	; 0x2a
    18ce:	20 e0       	ldi	r18, 0x00	; 0
    18d0:	30 e0       	ldi	r19, 0x00	; 0
    18d2:	40 e2       	ldi	r20, 0x20	; 32
    18d4:	51 e4       	ldi	r21, 0x41	; 65
    18d6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18da:	dc 01       	movw	r26, r24
    18dc:	cb 01       	movw	r24, r22
    18de:	bc 01       	movw	r22, r24
    18e0:	cd 01       	movw	r24, r26
    18e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18e6:	dc 01       	movw	r26, r24
    18e8:	cb 01       	movw	r24, r22
    18ea:	9a a3       	std	Y+34, r25	; 0x22
    18ec:	89 a3       	std	Y+33, r24	; 0x21
    18ee:	0f c0       	rjmp	.+30     	; 0x190e <Lcd_vidInit+0x12c>
    18f0:	88 ec       	ldi	r24, 0xC8	; 200
    18f2:	90 e0       	ldi	r25, 0x00	; 0
    18f4:	98 a3       	std	Y+32, r25	; 0x20
    18f6:	8f 8f       	std	Y+31, r24	; 0x1f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    18f8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    18fa:	98 a1       	ldd	r25, Y+32	; 0x20
    18fc:	01 97       	sbiw	r24, 0x01	; 1
    18fe:	f1 f7       	brne	.-4      	; 0x18fc <Lcd_vidInit+0x11a>
    1900:	98 a3       	std	Y+32, r25	; 0x20
    1902:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1904:	89 a1       	ldd	r24, Y+33	; 0x21
    1906:	9a a1       	ldd	r25, Y+34	; 0x22
    1908:	01 97       	sbiw	r24, 0x01	; 1
    190a:	9a a3       	std	Y+34, r25	; 0x22
    190c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    190e:	89 a1       	ldd	r24, Y+33	; 0x21
    1910:	9a a1       	ldd	r25, Y+34	; 0x22
    1912:	00 97       	sbiw	r24, 0x00	; 0
    1914:	69 f7       	brne	.-38     	; 0x18f0 <Lcd_vidInit+0x10e>
    1916:	14 c0       	rjmp	.+40     	; 0x1940 <Lcd_vidInit+0x15e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1918:	6b a1       	ldd	r22, Y+35	; 0x23
    191a:	7c a1       	ldd	r23, Y+36	; 0x24
    191c:	8d a1       	ldd	r24, Y+37	; 0x25
    191e:	9e a1       	ldd	r25, Y+38	; 0x26
    1920:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1924:	dc 01       	movw	r26, r24
    1926:	cb 01       	movw	r24, r22
    1928:	9a a3       	std	Y+34, r25	; 0x22
    192a:	89 a3       	std	Y+33, r24	; 0x21
    192c:	89 a1       	ldd	r24, Y+33	; 0x21
    192e:	9a a1       	ldd	r25, Y+34	; 0x22
    1930:	9e 8f       	std	Y+30, r25	; 0x1e
    1932:	8d 8f       	std	Y+29, r24	; 0x1d
    1934:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1936:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1938:	01 97       	sbiw	r24, 0x01	; 1
    193a:	f1 f7       	brne	.-4      	; 0x1938 <Lcd_vidInit+0x156>
    193c:	9e 8f       	std	Y+30, r25	; 0x1e
    193e:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(2);
	Lcd_vidSendCommand(0x0c);
    1940:	8c e0       	ldi	r24, 0x0C	; 12
    1942:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <Lcd_vidSendCommand>
    1946:	80 e0       	ldi	r24, 0x00	; 0
    1948:	90 e0       	ldi	r25, 0x00	; 0
    194a:	a0 e0       	ldi	r26, 0x00	; 0
    194c:	b0 e4       	ldi	r27, 0x40	; 64
    194e:	89 8f       	std	Y+25, r24	; 0x19
    1950:	9a 8f       	std	Y+26, r25	; 0x1a
    1952:	ab 8f       	std	Y+27, r26	; 0x1b
    1954:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1956:	69 8d       	ldd	r22, Y+25	; 0x19
    1958:	7a 8d       	ldd	r23, Y+26	; 0x1a
    195a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    195c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    195e:	20 e0       	ldi	r18, 0x00	; 0
    1960:	30 e0       	ldi	r19, 0x00	; 0
    1962:	4a ef       	ldi	r20, 0xFA	; 250
    1964:	54 e4       	ldi	r21, 0x44	; 68
    1966:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    196a:	dc 01       	movw	r26, r24
    196c:	cb 01       	movw	r24, r22
    196e:	8d 8b       	std	Y+21, r24	; 0x15
    1970:	9e 8b       	std	Y+22, r25	; 0x16
    1972:	af 8b       	std	Y+23, r26	; 0x17
    1974:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1976:	6d 89       	ldd	r22, Y+21	; 0x15
    1978:	7e 89       	ldd	r23, Y+22	; 0x16
    197a:	8f 89       	ldd	r24, Y+23	; 0x17
    197c:	98 8d       	ldd	r25, Y+24	; 0x18
    197e:	20 e0       	ldi	r18, 0x00	; 0
    1980:	30 e0       	ldi	r19, 0x00	; 0
    1982:	40 e8       	ldi	r20, 0x80	; 128
    1984:	5f e3       	ldi	r21, 0x3F	; 63
    1986:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    198a:	88 23       	and	r24, r24
    198c:	2c f4       	brge	.+10     	; 0x1998 <Lcd_vidInit+0x1b6>
		__ticks = 1;
    198e:	81 e0       	ldi	r24, 0x01	; 1
    1990:	90 e0       	ldi	r25, 0x00	; 0
    1992:	9c 8b       	std	Y+20, r25	; 0x14
    1994:	8b 8b       	std	Y+19, r24	; 0x13
    1996:	3f c0       	rjmp	.+126    	; 0x1a16 <Lcd_vidInit+0x234>
	else if (__tmp > 65535)
    1998:	6d 89       	ldd	r22, Y+21	; 0x15
    199a:	7e 89       	ldd	r23, Y+22	; 0x16
    199c:	8f 89       	ldd	r24, Y+23	; 0x17
    199e:	98 8d       	ldd	r25, Y+24	; 0x18
    19a0:	20 e0       	ldi	r18, 0x00	; 0
    19a2:	3f ef       	ldi	r19, 0xFF	; 255
    19a4:	4f e7       	ldi	r20, 0x7F	; 127
    19a6:	57 e4       	ldi	r21, 0x47	; 71
    19a8:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    19ac:	18 16       	cp	r1, r24
    19ae:	4c f5       	brge	.+82     	; 0x1a02 <Lcd_vidInit+0x220>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19b0:	69 8d       	ldd	r22, Y+25	; 0x19
    19b2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    19b4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    19b6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    19b8:	20 e0       	ldi	r18, 0x00	; 0
    19ba:	30 e0       	ldi	r19, 0x00	; 0
    19bc:	40 e2       	ldi	r20, 0x20	; 32
    19be:	51 e4       	ldi	r21, 0x41	; 65
    19c0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19c4:	dc 01       	movw	r26, r24
    19c6:	cb 01       	movw	r24, r22
    19c8:	bc 01       	movw	r22, r24
    19ca:	cd 01       	movw	r24, r26
    19cc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19d0:	dc 01       	movw	r26, r24
    19d2:	cb 01       	movw	r24, r22
    19d4:	9c 8b       	std	Y+20, r25	; 0x14
    19d6:	8b 8b       	std	Y+19, r24	; 0x13
    19d8:	0f c0       	rjmp	.+30     	; 0x19f8 <Lcd_vidInit+0x216>
    19da:	88 ec       	ldi	r24, 0xC8	; 200
    19dc:	90 e0       	ldi	r25, 0x00	; 0
    19de:	9a 8b       	std	Y+18, r25	; 0x12
    19e0:	89 8b       	std	Y+17, r24	; 0x11
    19e2:	89 89       	ldd	r24, Y+17	; 0x11
    19e4:	9a 89       	ldd	r25, Y+18	; 0x12
    19e6:	01 97       	sbiw	r24, 0x01	; 1
    19e8:	f1 f7       	brne	.-4      	; 0x19e6 <Lcd_vidInit+0x204>
    19ea:	9a 8b       	std	Y+18, r25	; 0x12
    19ec:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19ee:	8b 89       	ldd	r24, Y+19	; 0x13
    19f0:	9c 89       	ldd	r25, Y+20	; 0x14
    19f2:	01 97       	sbiw	r24, 0x01	; 1
    19f4:	9c 8b       	std	Y+20, r25	; 0x14
    19f6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19f8:	8b 89       	ldd	r24, Y+19	; 0x13
    19fa:	9c 89       	ldd	r25, Y+20	; 0x14
    19fc:	00 97       	sbiw	r24, 0x00	; 0
    19fe:	69 f7       	brne	.-38     	; 0x19da <Lcd_vidInit+0x1f8>
    1a00:	14 c0       	rjmp	.+40     	; 0x1a2a <Lcd_vidInit+0x248>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a02:	6d 89       	ldd	r22, Y+21	; 0x15
    1a04:	7e 89       	ldd	r23, Y+22	; 0x16
    1a06:	8f 89       	ldd	r24, Y+23	; 0x17
    1a08:	98 8d       	ldd	r25, Y+24	; 0x18
    1a0a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a0e:	dc 01       	movw	r26, r24
    1a10:	cb 01       	movw	r24, r22
    1a12:	9c 8b       	std	Y+20, r25	; 0x14
    1a14:	8b 8b       	std	Y+19, r24	; 0x13
    1a16:	8b 89       	ldd	r24, Y+19	; 0x13
    1a18:	9c 89       	ldd	r25, Y+20	; 0x14
    1a1a:	98 8b       	std	Y+16, r25	; 0x10
    1a1c:	8f 87       	std	Y+15, r24	; 0x0f
    1a1e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1a20:	98 89       	ldd	r25, Y+16	; 0x10
    1a22:	01 97       	sbiw	r24, 0x01	; 1
    1a24:	f1 f7       	brne	.-4      	; 0x1a22 <Lcd_vidInit+0x240>
    1a26:	98 8b       	std	Y+16, r25	; 0x10
    1a28:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);
	Lcd_vidSendCommand(0x01);
    1a2a:	81 e0       	ldi	r24, 0x01	; 1
    1a2c:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <Lcd_vidSendCommand>
    1a30:	80 e0       	ldi	r24, 0x00	; 0
    1a32:	90 e0       	ldi	r25, 0x00	; 0
    1a34:	a0 e0       	ldi	r26, 0x00	; 0
    1a36:	b0 e4       	ldi	r27, 0x40	; 64
    1a38:	8b 87       	std	Y+11, r24	; 0x0b
    1a3a:	9c 87       	std	Y+12, r25	; 0x0c
    1a3c:	ad 87       	std	Y+13, r26	; 0x0d
    1a3e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a40:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a42:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a44:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a46:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a48:	20 e0       	ldi	r18, 0x00	; 0
    1a4a:	30 e0       	ldi	r19, 0x00	; 0
    1a4c:	4a ef       	ldi	r20, 0xFA	; 250
    1a4e:	54 e4       	ldi	r21, 0x44	; 68
    1a50:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a54:	dc 01       	movw	r26, r24
    1a56:	cb 01       	movw	r24, r22
    1a58:	8f 83       	std	Y+7, r24	; 0x07
    1a5a:	98 87       	std	Y+8, r25	; 0x08
    1a5c:	a9 87       	std	Y+9, r26	; 0x09
    1a5e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1a60:	6f 81       	ldd	r22, Y+7	; 0x07
    1a62:	78 85       	ldd	r23, Y+8	; 0x08
    1a64:	89 85       	ldd	r24, Y+9	; 0x09
    1a66:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a68:	20 e0       	ldi	r18, 0x00	; 0
    1a6a:	30 e0       	ldi	r19, 0x00	; 0
    1a6c:	40 e8       	ldi	r20, 0x80	; 128
    1a6e:	5f e3       	ldi	r21, 0x3F	; 63
    1a70:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    1a74:	88 23       	and	r24, r24
    1a76:	2c f4       	brge	.+10     	; 0x1a82 <Lcd_vidInit+0x2a0>
		__ticks = 1;
    1a78:	81 e0       	ldi	r24, 0x01	; 1
    1a7a:	90 e0       	ldi	r25, 0x00	; 0
    1a7c:	9e 83       	std	Y+6, r25	; 0x06
    1a7e:	8d 83       	std	Y+5, r24	; 0x05
    1a80:	3f c0       	rjmp	.+126    	; 0x1b00 <Lcd_vidInit+0x31e>
	else if (__tmp > 65535)
    1a82:	6f 81       	ldd	r22, Y+7	; 0x07
    1a84:	78 85       	ldd	r23, Y+8	; 0x08
    1a86:	89 85       	ldd	r24, Y+9	; 0x09
    1a88:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a8a:	20 e0       	ldi	r18, 0x00	; 0
    1a8c:	3f ef       	ldi	r19, 0xFF	; 255
    1a8e:	4f e7       	ldi	r20, 0x7F	; 127
    1a90:	57 e4       	ldi	r21, 0x47	; 71
    1a92:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    1a96:	18 16       	cp	r1, r24
    1a98:	4c f5       	brge	.+82     	; 0x1aec <Lcd_vidInit+0x30a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a9a:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a9c:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a9e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1aa0:	9e 85       	ldd	r25, Y+14	; 0x0e
    1aa2:	20 e0       	ldi	r18, 0x00	; 0
    1aa4:	30 e0       	ldi	r19, 0x00	; 0
    1aa6:	40 e2       	ldi	r20, 0x20	; 32
    1aa8:	51 e4       	ldi	r21, 0x41	; 65
    1aaa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1aae:	dc 01       	movw	r26, r24
    1ab0:	cb 01       	movw	r24, r22
    1ab2:	bc 01       	movw	r22, r24
    1ab4:	cd 01       	movw	r24, r26
    1ab6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1aba:	dc 01       	movw	r26, r24
    1abc:	cb 01       	movw	r24, r22
    1abe:	9e 83       	std	Y+6, r25	; 0x06
    1ac0:	8d 83       	std	Y+5, r24	; 0x05
    1ac2:	0f c0       	rjmp	.+30     	; 0x1ae2 <Lcd_vidInit+0x300>
    1ac4:	88 ec       	ldi	r24, 0xC8	; 200
    1ac6:	90 e0       	ldi	r25, 0x00	; 0
    1ac8:	9c 83       	std	Y+4, r25	; 0x04
    1aca:	8b 83       	std	Y+3, r24	; 0x03
    1acc:	8b 81       	ldd	r24, Y+3	; 0x03
    1ace:	9c 81       	ldd	r25, Y+4	; 0x04
    1ad0:	01 97       	sbiw	r24, 0x01	; 1
    1ad2:	f1 f7       	brne	.-4      	; 0x1ad0 <Lcd_vidInit+0x2ee>
    1ad4:	9c 83       	std	Y+4, r25	; 0x04
    1ad6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ad8:	8d 81       	ldd	r24, Y+5	; 0x05
    1ada:	9e 81       	ldd	r25, Y+6	; 0x06
    1adc:	01 97       	sbiw	r24, 0x01	; 1
    1ade:	9e 83       	std	Y+6, r25	; 0x06
    1ae0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ae2:	8d 81       	ldd	r24, Y+5	; 0x05
    1ae4:	9e 81       	ldd	r25, Y+6	; 0x06
    1ae6:	00 97       	sbiw	r24, 0x00	; 0
    1ae8:	69 f7       	brne	.-38     	; 0x1ac4 <Lcd_vidInit+0x2e2>
    1aea:	14 c0       	rjmp	.+40     	; 0x1b14 <Lcd_vidInit+0x332>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1aec:	6f 81       	ldd	r22, Y+7	; 0x07
    1aee:	78 85       	ldd	r23, Y+8	; 0x08
    1af0:	89 85       	ldd	r24, Y+9	; 0x09
    1af2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1af4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1af8:	dc 01       	movw	r26, r24
    1afa:	cb 01       	movw	r24, r22
    1afc:	9e 83       	std	Y+6, r25	; 0x06
    1afe:	8d 83       	std	Y+5, r24	; 0x05
    1b00:	8d 81       	ldd	r24, Y+5	; 0x05
    1b02:	9e 81       	ldd	r25, Y+6	; 0x06
    1b04:	9a 83       	std	Y+2, r25	; 0x02
    1b06:	89 83       	std	Y+1, r24	; 0x01
    1b08:	89 81       	ldd	r24, Y+1	; 0x01
    1b0a:	9a 81       	ldd	r25, Y+2	; 0x02
    1b0c:	01 97       	sbiw	r24, 0x01	; 1
    1b0e:	f1 f7       	brne	.-4      	; 0x1b0c <Lcd_vidInit+0x32a>
    1b10:	9a 83       	std	Y+2, r25	; 0x02
    1b12:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);

}
    1b14:	aa 96       	adiw	r28, 0x2a	; 42
    1b16:	0f b6       	in	r0, 0x3f	; 63
    1b18:	f8 94       	cli
    1b1a:	de bf       	out	0x3e, r29	; 62
    1b1c:	0f be       	out	0x3f, r0	; 63
    1b1e:	cd bf       	out	0x3d, r28	; 61
    1b20:	cf 91       	pop	r28
    1b22:	df 91       	pop	r29
    1b24:	08 95       	ret

00001b26 <Lcd_vidWriteChar>:
void Lcd_vidWriteChar(u8 Character)
{
    1b26:	df 93       	push	r29
    1b28:	cf 93       	push	r28
    1b2a:	cd b7       	in	r28, 0x3d	; 61
    1b2c:	de b7       	in	r29, 0x3e	; 62
    1b2e:	2f 97       	sbiw	r28, 0x0f	; 15
    1b30:	0f b6       	in	r0, 0x3f	; 63
    1b32:	f8 94       	cli
    1b34:	de bf       	out	0x3e, r29	; 62
    1b36:	0f be       	out	0x3f, r0	; 63
    1b38:	cd bf       	out	0x3d, r28	; 61
    1b3a:	8f 87       	std	Y+15, r24	; 0x0f
	Dio_vidSetPinVal(LCD_u8RS,DIO_u8HIGH);
    1b3c:	80 e1       	ldi	r24, 0x10	; 16
    1b3e:	61 e0       	ldi	r22, 0x01	; 1
    1b40:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8RW,DIO_u8LOW);
    1b44:	81 e1       	ldi	r24, 0x11	; 17
    1b46:	60 e0       	ldi	r22, 0x00	; 0
    1b48:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8EN,DIO_u8HIGH);
    1b4c:	82 e1       	ldi	r24, 0x12	; 18
    1b4e:	61 e0       	ldi	r22, 0x01	; 1
    1b50:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>

	Dio_vidSetPinVal(LCD_u8D0,GET_BIT(Character,0));
    1b54:	8f 85       	ldd	r24, Y+15	; 0x0f
    1b56:	98 2f       	mov	r25, r24
    1b58:	91 70       	andi	r25, 0x01	; 1
    1b5a:	88 e0       	ldi	r24, 0x08	; 8
    1b5c:	69 2f       	mov	r22, r25
    1b5e:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D1,GET_BIT(Character,1));
    1b62:	8f 85       	ldd	r24, Y+15	; 0x0f
    1b64:	86 95       	lsr	r24
    1b66:	98 2f       	mov	r25, r24
    1b68:	91 70       	andi	r25, 0x01	; 1
    1b6a:	89 e0       	ldi	r24, 0x09	; 9
    1b6c:	69 2f       	mov	r22, r25
    1b6e:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D2,GET_BIT(Character,2));
    1b72:	8f 85       	ldd	r24, Y+15	; 0x0f
    1b74:	86 95       	lsr	r24
    1b76:	86 95       	lsr	r24
    1b78:	98 2f       	mov	r25, r24
    1b7a:	91 70       	andi	r25, 0x01	; 1
    1b7c:	8a e0       	ldi	r24, 0x0A	; 10
    1b7e:	69 2f       	mov	r22, r25
    1b80:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D3,GET_BIT(Character,3));
    1b84:	8f 85       	ldd	r24, Y+15	; 0x0f
    1b86:	86 95       	lsr	r24
    1b88:	86 95       	lsr	r24
    1b8a:	86 95       	lsr	r24
    1b8c:	98 2f       	mov	r25, r24
    1b8e:	91 70       	andi	r25, 0x01	; 1
    1b90:	8b e0       	ldi	r24, 0x0B	; 11
    1b92:	69 2f       	mov	r22, r25
    1b94:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D4,GET_BIT(Character,4));
    1b98:	8f 85       	ldd	r24, Y+15	; 0x0f
    1b9a:	82 95       	swap	r24
    1b9c:	8f 70       	andi	r24, 0x0F	; 15
    1b9e:	98 2f       	mov	r25, r24
    1ba0:	91 70       	andi	r25, 0x01	; 1
    1ba2:	8c e0       	ldi	r24, 0x0C	; 12
    1ba4:	69 2f       	mov	r22, r25
    1ba6:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D5,GET_BIT(Character,5));
    1baa:	8f 85       	ldd	r24, Y+15	; 0x0f
    1bac:	82 95       	swap	r24
    1bae:	86 95       	lsr	r24
    1bb0:	87 70       	andi	r24, 0x07	; 7
    1bb2:	98 2f       	mov	r25, r24
    1bb4:	91 70       	andi	r25, 0x01	; 1
    1bb6:	8d e0       	ldi	r24, 0x0D	; 13
    1bb8:	69 2f       	mov	r22, r25
    1bba:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D6,GET_BIT(Character,6));
    1bbe:	8f 85       	ldd	r24, Y+15	; 0x0f
    1bc0:	82 95       	swap	r24
    1bc2:	86 95       	lsr	r24
    1bc4:	86 95       	lsr	r24
    1bc6:	83 70       	andi	r24, 0x03	; 3
    1bc8:	98 2f       	mov	r25, r24
    1bca:	91 70       	andi	r25, 0x01	; 1
    1bcc:	8e e0       	ldi	r24, 0x0E	; 14
    1bce:	69 2f       	mov	r22, r25
    1bd0:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D7,GET_BIT(Character,7));
    1bd4:	8f 85       	ldd	r24, Y+15	; 0x0f
    1bd6:	98 2f       	mov	r25, r24
    1bd8:	99 1f       	adc	r25, r25
    1bda:	99 27       	eor	r25, r25
    1bdc:	99 1f       	adc	r25, r25
    1bde:	8f e0       	ldi	r24, 0x0F	; 15
    1be0:	69 2f       	mov	r22, r25
    1be2:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
    1be6:	80 e0       	ldi	r24, 0x00	; 0
    1be8:	90 e0       	ldi	r25, 0x00	; 0
    1bea:	a0 e0       	ldi	r26, 0x00	; 0
    1bec:	b0 e4       	ldi	r27, 0x40	; 64
    1bee:	8b 87       	std	Y+11, r24	; 0x0b
    1bf0:	9c 87       	std	Y+12, r25	; 0x0c
    1bf2:	ad 87       	std	Y+13, r26	; 0x0d
    1bf4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1bf6:	6b 85       	ldd	r22, Y+11	; 0x0b
    1bf8:	7c 85       	ldd	r23, Y+12	; 0x0c
    1bfa:	8d 85       	ldd	r24, Y+13	; 0x0d
    1bfc:	9e 85       	ldd	r25, Y+14	; 0x0e
    1bfe:	20 e0       	ldi	r18, 0x00	; 0
    1c00:	30 e0       	ldi	r19, 0x00	; 0
    1c02:	4a ef       	ldi	r20, 0xFA	; 250
    1c04:	54 e4       	ldi	r21, 0x44	; 68
    1c06:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c0a:	dc 01       	movw	r26, r24
    1c0c:	cb 01       	movw	r24, r22
    1c0e:	8f 83       	std	Y+7, r24	; 0x07
    1c10:	98 87       	std	Y+8, r25	; 0x08
    1c12:	a9 87       	std	Y+9, r26	; 0x09
    1c14:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1c16:	6f 81       	ldd	r22, Y+7	; 0x07
    1c18:	78 85       	ldd	r23, Y+8	; 0x08
    1c1a:	89 85       	ldd	r24, Y+9	; 0x09
    1c1c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c1e:	20 e0       	ldi	r18, 0x00	; 0
    1c20:	30 e0       	ldi	r19, 0x00	; 0
    1c22:	40 e8       	ldi	r20, 0x80	; 128
    1c24:	5f e3       	ldi	r21, 0x3F	; 63
    1c26:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    1c2a:	88 23       	and	r24, r24
    1c2c:	2c f4       	brge	.+10     	; 0x1c38 <Lcd_vidWriteChar+0x112>
		__ticks = 1;
    1c2e:	81 e0       	ldi	r24, 0x01	; 1
    1c30:	90 e0       	ldi	r25, 0x00	; 0
    1c32:	9e 83       	std	Y+6, r25	; 0x06
    1c34:	8d 83       	std	Y+5, r24	; 0x05
    1c36:	3f c0       	rjmp	.+126    	; 0x1cb6 <Lcd_vidWriteChar+0x190>
	else if (__tmp > 65535)
    1c38:	6f 81       	ldd	r22, Y+7	; 0x07
    1c3a:	78 85       	ldd	r23, Y+8	; 0x08
    1c3c:	89 85       	ldd	r24, Y+9	; 0x09
    1c3e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c40:	20 e0       	ldi	r18, 0x00	; 0
    1c42:	3f ef       	ldi	r19, 0xFF	; 255
    1c44:	4f e7       	ldi	r20, 0x7F	; 127
    1c46:	57 e4       	ldi	r21, 0x47	; 71
    1c48:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    1c4c:	18 16       	cp	r1, r24
    1c4e:	4c f5       	brge	.+82     	; 0x1ca2 <Lcd_vidWriteChar+0x17c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c50:	6b 85       	ldd	r22, Y+11	; 0x0b
    1c52:	7c 85       	ldd	r23, Y+12	; 0x0c
    1c54:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c56:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c58:	20 e0       	ldi	r18, 0x00	; 0
    1c5a:	30 e0       	ldi	r19, 0x00	; 0
    1c5c:	40 e2       	ldi	r20, 0x20	; 32
    1c5e:	51 e4       	ldi	r21, 0x41	; 65
    1c60:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c64:	dc 01       	movw	r26, r24
    1c66:	cb 01       	movw	r24, r22
    1c68:	bc 01       	movw	r22, r24
    1c6a:	cd 01       	movw	r24, r26
    1c6c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c70:	dc 01       	movw	r26, r24
    1c72:	cb 01       	movw	r24, r22
    1c74:	9e 83       	std	Y+6, r25	; 0x06
    1c76:	8d 83       	std	Y+5, r24	; 0x05
    1c78:	0f c0       	rjmp	.+30     	; 0x1c98 <Lcd_vidWriteChar+0x172>
    1c7a:	88 ec       	ldi	r24, 0xC8	; 200
    1c7c:	90 e0       	ldi	r25, 0x00	; 0
    1c7e:	9c 83       	std	Y+4, r25	; 0x04
    1c80:	8b 83       	std	Y+3, r24	; 0x03
    1c82:	8b 81       	ldd	r24, Y+3	; 0x03
    1c84:	9c 81       	ldd	r25, Y+4	; 0x04
    1c86:	01 97       	sbiw	r24, 0x01	; 1
    1c88:	f1 f7       	brne	.-4      	; 0x1c86 <Lcd_vidWriteChar+0x160>
    1c8a:	9c 83       	std	Y+4, r25	; 0x04
    1c8c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c8e:	8d 81       	ldd	r24, Y+5	; 0x05
    1c90:	9e 81       	ldd	r25, Y+6	; 0x06
    1c92:	01 97       	sbiw	r24, 0x01	; 1
    1c94:	9e 83       	std	Y+6, r25	; 0x06
    1c96:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c98:	8d 81       	ldd	r24, Y+5	; 0x05
    1c9a:	9e 81       	ldd	r25, Y+6	; 0x06
    1c9c:	00 97       	sbiw	r24, 0x00	; 0
    1c9e:	69 f7       	brne	.-38     	; 0x1c7a <Lcd_vidWriteChar+0x154>
    1ca0:	14 c0       	rjmp	.+40     	; 0x1cca <Lcd_vidWriteChar+0x1a4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ca2:	6f 81       	ldd	r22, Y+7	; 0x07
    1ca4:	78 85       	ldd	r23, Y+8	; 0x08
    1ca6:	89 85       	ldd	r24, Y+9	; 0x09
    1ca8:	9a 85       	ldd	r25, Y+10	; 0x0a
    1caa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1cae:	dc 01       	movw	r26, r24
    1cb0:	cb 01       	movw	r24, r22
    1cb2:	9e 83       	std	Y+6, r25	; 0x06
    1cb4:	8d 83       	std	Y+5, r24	; 0x05
    1cb6:	8d 81       	ldd	r24, Y+5	; 0x05
    1cb8:	9e 81       	ldd	r25, Y+6	; 0x06
    1cba:	9a 83       	std	Y+2, r25	; 0x02
    1cbc:	89 83       	std	Y+1, r24	; 0x01
    1cbe:	89 81       	ldd	r24, Y+1	; 0x01
    1cc0:	9a 81       	ldd	r25, Y+2	; 0x02
    1cc2:	01 97       	sbiw	r24, 0x01	; 1
    1cc4:	f1 f7       	brne	.-4      	; 0x1cc2 <Lcd_vidWriteChar+0x19c>
    1cc6:	9a 83       	std	Y+2, r25	; 0x02
    1cc8:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	Dio_vidSetPinVal(LCD_u8EN,DIO_u8LOW);
    1cca:	82 e1       	ldi	r24, 0x12	; 18
    1ccc:	60 e0       	ldi	r22, 0x00	; 0
    1cce:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>

}
    1cd2:	2f 96       	adiw	r28, 0x0f	; 15
    1cd4:	0f b6       	in	r0, 0x3f	; 63
    1cd6:	f8 94       	cli
    1cd8:	de bf       	out	0x3e, r29	; 62
    1cda:	0f be       	out	0x3f, r0	; 63
    1cdc:	cd bf       	out	0x3d, r28	; 61
    1cde:	cf 91       	pop	r28
    1ce0:	df 91       	pop	r29
    1ce2:	08 95       	ret

00001ce4 <Lcd_vidSendCommand>:
void Lcd_vidSendCommand(u8 Cmd)
{
    1ce4:	df 93       	push	r29
    1ce6:	cf 93       	push	r28
    1ce8:	cd b7       	in	r28, 0x3d	; 61
    1cea:	de b7       	in	r29, 0x3e	; 62
    1cec:	2f 97       	sbiw	r28, 0x0f	; 15
    1cee:	0f b6       	in	r0, 0x3f	; 63
    1cf0:	f8 94       	cli
    1cf2:	de bf       	out	0x3e, r29	; 62
    1cf4:	0f be       	out	0x3f, r0	; 63
    1cf6:	cd bf       	out	0x3d, r28	; 61
    1cf8:	8f 87       	std	Y+15, r24	; 0x0f
	    Dio_vidSetPinVal(LCD_u8RS,DIO_u8LOW);
    1cfa:	80 e1       	ldi	r24, 0x10	; 16
    1cfc:	60 e0       	ldi	r22, 0x00	; 0
    1cfe:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
		Dio_vidSetPinVal(LCD_u8RW,DIO_u8LOW);
    1d02:	81 e1       	ldi	r24, 0x11	; 17
    1d04:	60 e0       	ldi	r22, 0x00	; 0
    1d06:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
		Dio_vidSetPinVal(LCD_u8EN,DIO_u8HIGH);
    1d0a:	82 e1       	ldi	r24, 0x12	; 18
    1d0c:	61 e0       	ldi	r22, 0x01	; 1
    1d0e:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>

		Dio_vidSetPinVal(LCD_u8D0,GET_BIT(Cmd,0));
    1d12:	8f 85       	ldd	r24, Y+15	; 0x0f
    1d14:	98 2f       	mov	r25, r24
    1d16:	91 70       	andi	r25, 0x01	; 1
    1d18:	88 e0       	ldi	r24, 0x08	; 8
    1d1a:	69 2f       	mov	r22, r25
    1d1c:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
		Dio_vidSetPinVal(LCD_u8D1,GET_BIT(Cmd,1));
    1d20:	8f 85       	ldd	r24, Y+15	; 0x0f
    1d22:	86 95       	lsr	r24
    1d24:	98 2f       	mov	r25, r24
    1d26:	91 70       	andi	r25, 0x01	; 1
    1d28:	89 e0       	ldi	r24, 0x09	; 9
    1d2a:	69 2f       	mov	r22, r25
    1d2c:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
		Dio_vidSetPinVal(LCD_u8D2,GET_BIT(Cmd,2));
    1d30:	8f 85       	ldd	r24, Y+15	; 0x0f
    1d32:	86 95       	lsr	r24
    1d34:	86 95       	lsr	r24
    1d36:	98 2f       	mov	r25, r24
    1d38:	91 70       	andi	r25, 0x01	; 1
    1d3a:	8a e0       	ldi	r24, 0x0A	; 10
    1d3c:	69 2f       	mov	r22, r25
    1d3e:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
		Dio_vidSetPinVal(LCD_u8D3,GET_BIT(Cmd,3));
    1d42:	8f 85       	ldd	r24, Y+15	; 0x0f
    1d44:	86 95       	lsr	r24
    1d46:	86 95       	lsr	r24
    1d48:	86 95       	lsr	r24
    1d4a:	98 2f       	mov	r25, r24
    1d4c:	91 70       	andi	r25, 0x01	; 1
    1d4e:	8b e0       	ldi	r24, 0x0B	; 11
    1d50:	69 2f       	mov	r22, r25
    1d52:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
		Dio_vidSetPinVal(LCD_u8D4,GET_BIT(Cmd,4));
    1d56:	8f 85       	ldd	r24, Y+15	; 0x0f
    1d58:	82 95       	swap	r24
    1d5a:	8f 70       	andi	r24, 0x0F	; 15
    1d5c:	98 2f       	mov	r25, r24
    1d5e:	91 70       	andi	r25, 0x01	; 1
    1d60:	8c e0       	ldi	r24, 0x0C	; 12
    1d62:	69 2f       	mov	r22, r25
    1d64:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
		Dio_vidSetPinVal(LCD_u8D5,GET_BIT(Cmd,5));
    1d68:	8f 85       	ldd	r24, Y+15	; 0x0f
    1d6a:	82 95       	swap	r24
    1d6c:	86 95       	lsr	r24
    1d6e:	87 70       	andi	r24, 0x07	; 7
    1d70:	98 2f       	mov	r25, r24
    1d72:	91 70       	andi	r25, 0x01	; 1
    1d74:	8d e0       	ldi	r24, 0x0D	; 13
    1d76:	69 2f       	mov	r22, r25
    1d78:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
		Dio_vidSetPinVal(LCD_u8D6,GET_BIT(Cmd,6));
    1d7c:	8f 85       	ldd	r24, Y+15	; 0x0f
    1d7e:	82 95       	swap	r24
    1d80:	86 95       	lsr	r24
    1d82:	86 95       	lsr	r24
    1d84:	83 70       	andi	r24, 0x03	; 3
    1d86:	98 2f       	mov	r25, r24
    1d88:	91 70       	andi	r25, 0x01	; 1
    1d8a:	8e e0       	ldi	r24, 0x0E	; 14
    1d8c:	69 2f       	mov	r22, r25
    1d8e:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
		Dio_vidSetPinVal(LCD_u8D7,GET_BIT(Cmd,7));
    1d92:	8f 85       	ldd	r24, Y+15	; 0x0f
    1d94:	98 2f       	mov	r25, r24
    1d96:	99 1f       	adc	r25, r25
    1d98:	99 27       	eor	r25, r25
    1d9a:	99 1f       	adc	r25, r25
    1d9c:	8f e0       	ldi	r24, 0x0F	; 15
    1d9e:	69 2f       	mov	r22, r25
    1da0:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
    1da4:	80 e0       	ldi	r24, 0x00	; 0
    1da6:	90 e0       	ldi	r25, 0x00	; 0
    1da8:	a0 e0       	ldi	r26, 0x00	; 0
    1daa:	b0 e4       	ldi	r27, 0x40	; 64
    1dac:	8b 87       	std	Y+11, r24	; 0x0b
    1dae:	9c 87       	std	Y+12, r25	; 0x0c
    1db0:	ad 87       	std	Y+13, r26	; 0x0d
    1db2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1db4:	6b 85       	ldd	r22, Y+11	; 0x0b
    1db6:	7c 85       	ldd	r23, Y+12	; 0x0c
    1db8:	8d 85       	ldd	r24, Y+13	; 0x0d
    1dba:	9e 85       	ldd	r25, Y+14	; 0x0e
    1dbc:	20 e0       	ldi	r18, 0x00	; 0
    1dbe:	30 e0       	ldi	r19, 0x00	; 0
    1dc0:	4a ef       	ldi	r20, 0xFA	; 250
    1dc2:	54 e4       	ldi	r21, 0x44	; 68
    1dc4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1dc8:	dc 01       	movw	r26, r24
    1dca:	cb 01       	movw	r24, r22
    1dcc:	8f 83       	std	Y+7, r24	; 0x07
    1dce:	98 87       	std	Y+8, r25	; 0x08
    1dd0:	a9 87       	std	Y+9, r26	; 0x09
    1dd2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1dd4:	6f 81       	ldd	r22, Y+7	; 0x07
    1dd6:	78 85       	ldd	r23, Y+8	; 0x08
    1dd8:	89 85       	ldd	r24, Y+9	; 0x09
    1dda:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ddc:	20 e0       	ldi	r18, 0x00	; 0
    1dde:	30 e0       	ldi	r19, 0x00	; 0
    1de0:	40 e8       	ldi	r20, 0x80	; 128
    1de2:	5f e3       	ldi	r21, 0x3F	; 63
    1de4:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    1de8:	88 23       	and	r24, r24
    1dea:	2c f4       	brge	.+10     	; 0x1df6 <Lcd_vidSendCommand+0x112>
		__ticks = 1;
    1dec:	81 e0       	ldi	r24, 0x01	; 1
    1dee:	90 e0       	ldi	r25, 0x00	; 0
    1df0:	9e 83       	std	Y+6, r25	; 0x06
    1df2:	8d 83       	std	Y+5, r24	; 0x05
    1df4:	3f c0       	rjmp	.+126    	; 0x1e74 <Lcd_vidSendCommand+0x190>
	else if (__tmp > 65535)
    1df6:	6f 81       	ldd	r22, Y+7	; 0x07
    1df8:	78 85       	ldd	r23, Y+8	; 0x08
    1dfa:	89 85       	ldd	r24, Y+9	; 0x09
    1dfc:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dfe:	20 e0       	ldi	r18, 0x00	; 0
    1e00:	3f ef       	ldi	r19, 0xFF	; 255
    1e02:	4f e7       	ldi	r20, 0x7F	; 127
    1e04:	57 e4       	ldi	r21, 0x47	; 71
    1e06:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    1e0a:	18 16       	cp	r1, r24
    1e0c:	4c f5       	brge	.+82     	; 0x1e60 <Lcd_vidSendCommand+0x17c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e0e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1e10:	7c 85       	ldd	r23, Y+12	; 0x0c
    1e12:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e14:	9e 85       	ldd	r25, Y+14	; 0x0e
    1e16:	20 e0       	ldi	r18, 0x00	; 0
    1e18:	30 e0       	ldi	r19, 0x00	; 0
    1e1a:	40 e2       	ldi	r20, 0x20	; 32
    1e1c:	51 e4       	ldi	r21, 0x41	; 65
    1e1e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e22:	dc 01       	movw	r26, r24
    1e24:	cb 01       	movw	r24, r22
    1e26:	bc 01       	movw	r22, r24
    1e28:	cd 01       	movw	r24, r26
    1e2a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e2e:	dc 01       	movw	r26, r24
    1e30:	cb 01       	movw	r24, r22
    1e32:	9e 83       	std	Y+6, r25	; 0x06
    1e34:	8d 83       	std	Y+5, r24	; 0x05
    1e36:	0f c0       	rjmp	.+30     	; 0x1e56 <Lcd_vidSendCommand+0x172>
    1e38:	88 ec       	ldi	r24, 0xC8	; 200
    1e3a:	90 e0       	ldi	r25, 0x00	; 0
    1e3c:	9c 83       	std	Y+4, r25	; 0x04
    1e3e:	8b 83       	std	Y+3, r24	; 0x03
    1e40:	8b 81       	ldd	r24, Y+3	; 0x03
    1e42:	9c 81       	ldd	r25, Y+4	; 0x04
    1e44:	01 97       	sbiw	r24, 0x01	; 1
    1e46:	f1 f7       	brne	.-4      	; 0x1e44 <Lcd_vidSendCommand+0x160>
    1e48:	9c 83       	std	Y+4, r25	; 0x04
    1e4a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e4c:	8d 81       	ldd	r24, Y+5	; 0x05
    1e4e:	9e 81       	ldd	r25, Y+6	; 0x06
    1e50:	01 97       	sbiw	r24, 0x01	; 1
    1e52:	9e 83       	std	Y+6, r25	; 0x06
    1e54:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e56:	8d 81       	ldd	r24, Y+5	; 0x05
    1e58:	9e 81       	ldd	r25, Y+6	; 0x06
    1e5a:	00 97       	sbiw	r24, 0x00	; 0
    1e5c:	69 f7       	brne	.-38     	; 0x1e38 <Lcd_vidSendCommand+0x154>
    1e5e:	14 c0       	rjmp	.+40     	; 0x1e88 <Lcd_vidSendCommand+0x1a4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e60:	6f 81       	ldd	r22, Y+7	; 0x07
    1e62:	78 85       	ldd	r23, Y+8	; 0x08
    1e64:	89 85       	ldd	r24, Y+9	; 0x09
    1e66:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e68:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e6c:	dc 01       	movw	r26, r24
    1e6e:	cb 01       	movw	r24, r22
    1e70:	9e 83       	std	Y+6, r25	; 0x06
    1e72:	8d 83       	std	Y+5, r24	; 0x05
    1e74:	8d 81       	ldd	r24, Y+5	; 0x05
    1e76:	9e 81       	ldd	r25, Y+6	; 0x06
    1e78:	9a 83       	std	Y+2, r25	; 0x02
    1e7a:	89 83       	std	Y+1, r24	; 0x01
    1e7c:	89 81       	ldd	r24, Y+1	; 0x01
    1e7e:	9a 81       	ldd	r25, Y+2	; 0x02
    1e80:	01 97       	sbiw	r24, 0x01	; 1
    1e82:	f1 f7       	brne	.-4      	; 0x1e80 <Lcd_vidSendCommand+0x19c>
    1e84:	9a 83       	std	Y+2, r25	; 0x02
    1e86:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(2);
		Dio_vidSetPinVal(LCD_u8EN,DIO_u8LOW);
    1e88:	82 e1       	ldi	r24, 0x12	; 18
    1e8a:	60 e0       	ldi	r22, 0x00	; 0
    1e8c:	0e 94 88 08 	call	0x1110	; 0x1110 <Dio_vidSetPinVal>
}
    1e90:	2f 96       	adiw	r28, 0x0f	; 15
    1e92:	0f b6       	in	r0, 0x3f	; 63
    1e94:	f8 94       	cli
    1e96:	de bf       	out	0x3e, r29	; 62
    1e98:	0f be       	out	0x3f, r0	; 63
    1e9a:	cd bf       	out	0x3d, r28	; 61
    1e9c:	cf 91       	pop	r28
    1e9e:	df 91       	pop	r29
    1ea0:	08 95       	ret

00001ea2 <Lcd_vidWriteString>:
void Lcd_vidWriteString(u8* String)
{
    1ea2:	df 93       	push	r29
    1ea4:	cf 93       	push	r28
    1ea6:	cd b7       	in	r28, 0x3d	; 61
    1ea8:	de b7       	in	r29, 0x3e	; 62
    1eaa:	61 97       	sbiw	r28, 0x11	; 17
    1eac:	0f b6       	in	r0, 0x3f	; 63
    1eae:	f8 94       	cli
    1eb0:	de bf       	out	0x3e, r29	; 62
    1eb2:	0f be       	out	0x3f, r0	; 63
    1eb4:	cd bf       	out	0x3d, r28	; 61
    1eb6:	99 8b       	std	Y+17, r25	; 0x11
    1eb8:	88 8b       	std	Y+16, r24	; 0x10
	u8 i=0;
    1eba:	1f 86       	std	Y+15, r1	; 0x0f
    1ebc:	80 c0       	rjmp	.+256    	; 0x1fbe <Lcd_vidWriteString+0x11c>
	while(String[i]!='\0')
	{
		Lcd_vidWriteChar(String[i]);
    1ebe:	8f 85       	ldd	r24, Y+15	; 0x0f
    1ec0:	28 2f       	mov	r18, r24
    1ec2:	30 e0       	ldi	r19, 0x00	; 0
    1ec4:	88 89       	ldd	r24, Y+16	; 0x10
    1ec6:	99 89       	ldd	r25, Y+17	; 0x11
    1ec8:	fc 01       	movw	r30, r24
    1eca:	e2 0f       	add	r30, r18
    1ecc:	f3 1f       	adc	r31, r19
    1ece:	80 81       	ld	r24, Z
    1ed0:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <Lcd_vidWriteChar>
    1ed4:	80 e0       	ldi	r24, 0x00	; 0
    1ed6:	90 e0       	ldi	r25, 0x00	; 0
    1ed8:	a0 e0       	ldi	r26, 0x00	; 0
    1eda:	b0 e4       	ldi	r27, 0x40	; 64
    1edc:	8b 87       	std	Y+11, r24	; 0x0b
    1ede:	9c 87       	std	Y+12, r25	; 0x0c
    1ee0:	ad 87       	std	Y+13, r26	; 0x0d
    1ee2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ee4:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ee6:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ee8:	8d 85       	ldd	r24, Y+13	; 0x0d
    1eea:	9e 85       	ldd	r25, Y+14	; 0x0e
    1eec:	20 e0       	ldi	r18, 0x00	; 0
    1eee:	30 e0       	ldi	r19, 0x00	; 0
    1ef0:	4a ef       	ldi	r20, 0xFA	; 250
    1ef2:	54 e4       	ldi	r21, 0x44	; 68
    1ef4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ef8:	dc 01       	movw	r26, r24
    1efa:	cb 01       	movw	r24, r22
    1efc:	8f 83       	std	Y+7, r24	; 0x07
    1efe:	98 87       	std	Y+8, r25	; 0x08
    1f00:	a9 87       	std	Y+9, r26	; 0x09
    1f02:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1f04:	6f 81       	ldd	r22, Y+7	; 0x07
    1f06:	78 85       	ldd	r23, Y+8	; 0x08
    1f08:	89 85       	ldd	r24, Y+9	; 0x09
    1f0a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f0c:	20 e0       	ldi	r18, 0x00	; 0
    1f0e:	30 e0       	ldi	r19, 0x00	; 0
    1f10:	40 e8       	ldi	r20, 0x80	; 128
    1f12:	5f e3       	ldi	r21, 0x3F	; 63
    1f14:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    1f18:	88 23       	and	r24, r24
    1f1a:	2c f4       	brge	.+10     	; 0x1f26 <Lcd_vidWriteString+0x84>
		__ticks = 1;
    1f1c:	81 e0       	ldi	r24, 0x01	; 1
    1f1e:	90 e0       	ldi	r25, 0x00	; 0
    1f20:	9e 83       	std	Y+6, r25	; 0x06
    1f22:	8d 83       	std	Y+5, r24	; 0x05
    1f24:	3f c0       	rjmp	.+126    	; 0x1fa4 <Lcd_vidWriteString+0x102>
	else if (__tmp > 65535)
    1f26:	6f 81       	ldd	r22, Y+7	; 0x07
    1f28:	78 85       	ldd	r23, Y+8	; 0x08
    1f2a:	89 85       	ldd	r24, Y+9	; 0x09
    1f2c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f2e:	20 e0       	ldi	r18, 0x00	; 0
    1f30:	3f ef       	ldi	r19, 0xFF	; 255
    1f32:	4f e7       	ldi	r20, 0x7F	; 127
    1f34:	57 e4       	ldi	r21, 0x47	; 71
    1f36:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    1f3a:	18 16       	cp	r1, r24
    1f3c:	4c f5       	brge	.+82     	; 0x1f90 <Lcd_vidWriteString+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f3e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1f40:	7c 85       	ldd	r23, Y+12	; 0x0c
    1f42:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f44:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f46:	20 e0       	ldi	r18, 0x00	; 0
    1f48:	30 e0       	ldi	r19, 0x00	; 0
    1f4a:	40 e2       	ldi	r20, 0x20	; 32
    1f4c:	51 e4       	ldi	r21, 0x41	; 65
    1f4e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f52:	dc 01       	movw	r26, r24
    1f54:	cb 01       	movw	r24, r22
    1f56:	bc 01       	movw	r22, r24
    1f58:	cd 01       	movw	r24, r26
    1f5a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f5e:	dc 01       	movw	r26, r24
    1f60:	cb 01       	movw	r24, r22
    1f62:	9e 83       	std	Y+6, r25	; 0x06
    1f64:	8d 83       	std	Y+5, r24	; 0x05
    1f66:	0f c0       	rjmp	.+30     	; 0x1f86 <Lcd_vidWriteString+0xe4>
    1f68:	88 ec       	ldi	r24, 0xC8	; 200
    1f6a:	90 e0       	ldi	r25, 0x00	; 0
    1f6c:	9c 83       	std	Y+4, r25	; 0x04
    1f6e:	8b 83       	std	Y+3, r24	; 0x03
    1f70:	8b 81       	ldd	r24, Y+3	; 0x03
    1f72:	9c 81       	ldd	r25, Y+4	; 0x04
    1f74:	01 97       	sbiw	r24, 0x01	; 1
    1f76:	f1 f7       	brne	.-4      	; 0x1f74 <Lcd_vidWriteString+0xd2>
    1f78:	9c 83       	std	Y+4, r25	; 0x04
    1f7a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f7c:	8d 81       	ldd	r24, Y+5	; 0x05
    1f7e:	9e 81       	ldd	r25, Y+6	; 0x06
    1f80:	01 97       	sbiw	r24, 0x01	; 1
    1f82:	9e 83       	std	Y+6, r25	; 0x06
    1f84:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f86:	8d 81       	ldd	r24, Y+5	; 0x05
    1f88:	9e 81       	ldd	r25, Y+6	; 0x06
    1f8a:	00 97       	sbiw	r24, 0x00	; 0
    1f8c:	69 f7       	brne	.-38     	; 0x1f68 <Lcd_vidWriteString+0xc6>
    1f8e:	14 c0       	rjmp	.+40     	; 0x1fb8 <Lcd_vidWriteString+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f90:	6f 81       	ldd	r22, Y+7	; 0x07
    1f92:	78 85       	ldd	r23, Y+8	; 0x08
    1f94:	89 85       	ldd	r24, Y+9	; 0x09
    1f96:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f98:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f9c:	dc 01       	movw	r26, r24
    1f9e:	cb 01       	movw	r24, r22
    1fa0:	9e 83       	std	Y+6, r25	; 0x06
    1fa2:	8d 83       	std	Y+5, r24	; 0x05
    1fa4:	8d 81       	ldd	r24, Y+5	; 0x05
    1fa6:	9e 81       	ldd	r25, Y+6	; 0x06
    1fa8:	9a 83       	std	Y+2, r25	; 0x02
    1faa:	89 83       	std	Y+1, r24	; 0x01
    1fac:	89 81       	ldd	r24, Y+1	; 0x01
    1fae:	9a 81       	ldd	r25, Y+2	; 0x02
    1fb0:	01 97       	sbiw	r24, 0x01	; 1
    1fb2:	f1 f7       	brne	.-4      	; 0x1fb0 <Lcd_vidWriteString+0x10e>
    1fb4:	9a 83       	std	Y+2, r25	; 0x02
    1fb6:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(2);
		i++;
    1fb8:	8f 85       	ldd	r24, Y+15	; 0x0f
    1fba:	8f 5f       	subi	r24, 0xFF	; 255
    1fbc:	8f 87       	std	Y+15, r24	; 0x0f
		Dio_vidSetPinVal(LCD_u8EN,DIO_u8LOW);
}
void Lcd_vidWriteString(u8* String)
{
	u8 i=0;
	while(String[i]!='\0')
    1fbe:	8f 85       	ldd	r24, Y+15	; 0x0f
    1fc0:	28 2f       	mov	r18, r24
    1fc2:	30 e0       	ldi	r19, 0x00	; 0
    1fc4:	88 89       	ldd	r24, Y+16	; 0x10
    1fc6:	99 89       	ldd	r25, Y+17	; 0x11
    1fc8:	fc 01       	movw	r30, r24
    1fca:	e2 0f       	add	r30, r18
    1fcc:	f3 1f       	adc	r31, r19
    1fce:	80 81       	ld	r24, Z
    1fd0:	88 23       	and	r24, r24
    1fd2:	09 f0       	breq	.+2      	; 0x1fd6 <Lcd_vidWriteString+0x134>
    1fd4:	74 cf       	rjmp	.-280    	; 0x1ebe <Lcd_vidWriteString+0x1c>
	{
		Lcd_vidWriteChar(String[i]);
		_delay_ms(2);
		i++;
	}
}
    1fd6:	61 96       	adiw	r28, 0x11	; 17
    1fd8:	0f b6       	in	r0, 0x3f	; 63
    1fda:	f8 94       	cli
    1fdc:	de bf       	out	0x3e, r29	; 62
    1fde:	0f be       	out	0x3f, r0	; 63
    1fe0:	cd bf       	out	0x3d, r28	; 61
    1fe2:	cf 91       	pop	r28
    1fe4:	df 91       	pop	r29
    1fe6:	08 95       	ret

00001fe8 <Lcd_vidGoTo>:

void Lcd_vidGoTo(u8 x , u8 y)
{
    1fe8:	df 93       	push	r29
    1fea:	cf 93       	push	r28
    1fec:	00 d0       	rcall	.+0      	; 0x1fee <Lcd_vidGoTo+0x6>
    1fee:	00 d0       	rcall	.+0      	; 0x1ff0 <Lcd_vidGoTo+0x8>
    1ff0:	cd b7       	in	r28, 0x3d	; 61
    1ff2:	de b7       	in	r29, 0x3e	; 62
    1ff4:	89 83       	std	Y+1, r24	; 0x01
    1ff6:	6a 83       	std	Y+2, r22	; 0x02
	if(x>0 && x<=16)    // x is a col
    1ff8:	89 81       	ldd	r24, Y+1	; 0x01
    1ffa:	88 23       	and	r24, r24
    1ffc:	e1 f0       	breq	.+56     	; 0x2036 <Lcd_vidGoTo+0x4e>
    1ffe:	89 81       	ldd	r24, Y+1	; 0x01
    2000:	81 31       	cpi	r24, 0x11	; 17
    2002:	c8 f4       	brcc	.+50     	; 0x2036 <Lcd_vidGoTo+0x4e>
	{
		switch(y)      // y is a row
    2004:	8a 81       	ldd	r24, Y+2	; 0x02
    2006:	28 2f       	mov	r18, r24
    2008:	30 e0       	ldi	r19, 0x00	; 0
    200a:	3c 83       	std	Y+4, r19	; 0x04
    200c:	2b 83       	std	Y+3, r18	; 0x03
    200e:	8b 81       	ldd	r24, Y+3	; 0x03
    2010:	9c 81       	ldd	r25, Y+4	; 0x04
    2012:	81 30       	cpi	r24, 0x01	; 1
    2014:	91 05       	cpc	r25, r1
    2016:	31 f0       	breq	.+12     	; 0x2024 <Lcd_vidGoTo+0x3c>
    2018:	2b 81       	ldd	r18, Y+3	; 0x03
    201a:	3c 81       	ldd	r19, Y+4	; 0x04
    201c:	22 30       	cpi	r18, 0x02	; 2
    201e:	31 05       	cpc	r19, r1
    2020:	31 f0       	breq	.+12     	; 0x202e <Lcd_vidGoTo+0x46>
    2022:	09 c0       	rjmp	.+18     	; 0x2036 <Lcd_vidGoTo+0x4e>
		{
		case 1:
			// col num + (0x80-1) in decimal (0x80 Force cursor to beginning to 1st line)
			Lcd_vidSendCommand(x+127);
    2024:	89 81       	ldd	r24, Y+1	; 0x01
    2026:	81 58       	subi	r24, 0x81	; 129
    2028:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <Lcd_vidSendCommand>
    202c:	04 c0       	rjmp	.+8      	; 0x2036 <Lcd_vidGoTo+0x4e>
			break;
		case 2:
			// col num + (0xc0-1) in decimal (0xc0 Force cursor to beginning to 2nd line)
			Lcd_vidSendCommand(x+191);
    202e:	89 81       	ldd	r24, Y+1	; 0x01
    2030:	81 54       	subi	r24, 0x41	; 65
    2032:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <Lcd_vidSendCommand>
			break;
		default:
			break;
		}
	}
}
    2036:	0f 90       	pop	r0
    2038:	0f 90       	pop	r0
    203a:	0f 90       	pop	r0
    203c:	0f 90       	pop	r0
    203e:	cf 91       	pop	r28
    2040:	df 91       	pop	r29
    2042:	08 95       	ret

00002044 <main>:
#include"Lcd_int.h"
#include"Keypad_int.h"


int main(void)
{
    2044:	0f 93       	push	r16
    2046:	1f 93       	push	r17
    2048:	df 93       	push	r29
    204a:	cf 93       	push	r28
    204c:	cd b7       	in	r28, 0x3d	; 61
    204e:	de b7       	in	r29, 0x3e	; 62
    2050:	cf 58       	subi	r28, 0x8F	; 143
    2052:	d0 40       	sbci	r29, 0x00	; 0
    2054:	0f b6       	in	r0, 0x3f	; 63
    2056:	f8 94       	cli
    2058:	de bf       	out	0x3e, r29	; 62
    205a:	0f be       	out	0x3f, r0	; 63
    205c:	cd bf       	out	0x3d, r28	; 61
	 Keypad_vidInit();
    205e:	0e 94 ff 09 	call	0x13fe	; 0x13fe <Keypad_vidInit>
	  Lcd_vidInit();
    2062:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <Lcd_vidInit>
	f32 x=10,y=10;
    2066:	fe 01       	movw	r30, r28
    2068:	ef 58       	subi	r30, 0x8F	; 143
    206a:	ff 4f       	sbci	r31, 0xFF	; 255
    206c:	80 e0       	ldi	r24, 0x00	; 0
    206e:	90 e0       	ldi	r25, 0x00	; 0
    2070:	a0 e2       	ldi	r26, 0x20	; 32
    2072:	b1 e4       	ldi	r27, 0x41	; 65
    2074:	80 83       	st	Z, r24
    2076:	91 83       	std	Z+1, r25	; 0x01
    2078:	a2 83       	std	Z+2, r26	; 0x02
    207a:	b3 83       	std	Z+3, r27	; 0x03
    207c:	fe 01       	movw	r30, r28
    207e:	e3 59       	subi	r30, 0x93	; 147
    2080:	ff 4f       	sbci	r31, 0xFF	; 255
    2082:	80 e0       	ldi	r24, 0x00	; 0
    2084:	90 e0       	ldi	r25, 0x00	; 0
    2086:	a0 e2       	ldi	r26, 0x20	; 32
    2088:	b1 e4       	ldi	r27, 0x41	; 65
    208a:	80 83       	st	Z, r24
    208c:	91 83       	std	Z+1, r25	; 0x01
    208e:	a2 83       	std	Z+2, r26	; 0x02
    2090:	b3 83       	std	Z+3, r27	; 0x03
	f32 result;
	u8 res;
	u8 op=100;
    2092:	fe 01       	movw	r30, r28
    2094:	e9 59       	subi	r30, 0x99	; 153
    2096:	ff 4f       	sbci	r31, 0xFF	; 255
    2098:	84 e6       	ldi	r24, 0x64	; 100
    209a:	80 83       	st	Z, r24
	f32 z;
	u8 arr[]="Unknown Operation";
    209c:	ce 01       	movw	r24, r28
    209e:	8b 58       	subi	r24, 0x8B	; 139
    20a0:	9f 4f       	sbci	r25, 0xFF	; 255
    20a2:	c5 57       	subi	r28, 0x75	; 117
    20a4:	df 4f       	sbci	r29, 0xFF	; 255
    20a6:	99 83       	std	Y+1, r25	; 0x01
    20a8:	88 83       	st	Y, r24
    20aa:	cb 58       	subi	r28, 0x8B	; 139
    20ac:	d0 40       	sbci	r29, 0x00	; 0
    20ae:	20 e6       	ldi	r18, 0x60	; 96
    20b0:	30 e0       	ldi	r19, 0x00	; 0
    20b2:	c3 57       	subi	r28, 0x73	; 115
    20b4:	df 4f       	sbci	r29, 0xFF	; 255
    20b6:	39 83       	std	Y+1, r19	; 0x01
    20b8:	28 83       	st	Y, r18
    20ba:	cd 58       	subi	r28, 0x8D	; 141
    20bc:	d0 40       	sbci	r29, 0x00	; 0
    20be:	32 e1       	ldi	r19, 0x12	; 18
    20c0:	c1 57       	subi	r28, 0x71	; 113
    20c2:	df 4f       	sbci	r29, 0xFF	; 255
    20c4:	38 83       	st	Y, r19
    20c6:	cf 58       	subi	r28, 0x8F	; 143
    20c8:	d0 40       	sbci	r29, 0x00	; 0
    20ca:	c3 57       	subi	r28, 0x73	; 115
    20cc:	df 4f       	sbci	r29, 0xFF	; 255
    20ce:	e8 81       	ld	r30, Y
    20d0:	f9 81       	ldd	r31, Y+1	; 0x01
    20d2:	cd 58       	subi	r28, 0x8D	; 141
    20d4:	d0 40       	sbci	r29, 0x00	; 0
    20d6:	00 80       	ld	r0, Z
    20d8:	c3 57       	subi	r28, 0x73	; 115
    20da:	df 4f       	sbci	r29, 0xFF	; 255
    20dc:	28 81       	ld	r18, Y
    20de:	39 81       	ldd	r19, Y+1	; 0x01
    20e0:	cd 58       	subi	r28, 0x8D	; 141
    20e2:	d0 40       	sbci	r29, 0x00	; 0
    20e4:	2f 5f       	subi	r18, 0xFF	; 255
    20e6:	3f 4f       	sbci	r19, 0xFF	; 255
    20e8:	c3 57       	subi	r28, 0x73	; 115
    20ea:	df 4f       	sbci	r29, 0xFF	; 255
    20ec:	39 83       	std	Y+1, r19	; 0x01
    20ee:	28 83       	st	Y, r18
    20f0:	cd 58       	subi	r28, 0x8D	; 141
    20f2:	d0 40       	sbci	r29, 0x00	; 0
    20f4:	c5 57       	subi	r28, 0x75	; 117
    20f6:	df 4f       	sbci	r29, 0xFF	; 255
    20f8:	e8 81       	ld	r30, Y
    20fa:	f9 81       	ldd	r31, Y+1	; 0x01
    20fc:	cb 58       	subi	r28, 0x8B	; 139
    20fe:	d0 40       	sbci	r29, 0x00	; 0
    2100:	00 82       	st	Z, r0
    2102:	c5 57       	subi	r28, 0x75	; 117
    2104:	df 4f       	sbci	r29, 0xFF	; 255
    2106:	28 81       	ld	r18, Y
    2108:	39 81       	ldd	r19, Y+1	; 0x01
    210a:	cb 58       	subi	r28, 0x8B	; 139
    210c:	d0 40       	sbci	r29, 0x00	; 0
    210e:	2f 5f       	subi	r18, 0xFF	; 255
    2110:	3f 4f       	sbci	r19, 0xFF	; 255
    2112:	c5 57       	subi	r28, 0x75	; 117
    2114:	df 4f       	sbci	r29, 0xFF	; 255
    2116:	39 83       	std	Y+1, r19	; 0x01
    2118:	28 83       	st	Y, r18
    211a:	cb 58       	subi	r28, 0x8B	; 139
    211c:	d0 40       	sbci	r29, 0x00	; 0
    211e:	c1 57       	subi	r28, 0x71	; 113
    2120:	df 4f       	sbci	r29, 0xFF	; 255
    2122:	38 81       	ld	r19, Y
    2124:	cf 58       	subi	r28, 0x8F	; 143
    2126:	d0 40       	sbci	r29, 0x00	; 0
    2128:	31 50       	subi	r19, 0x01	; 1
    212a:	c1 57       	subi	r28, 0x71	; 113
    212c:	df 4f       	sbci	r29, 0xFF	; 255
    212e:	38 83       	st	Y, r19
    2130:	cf 58       	subi	r28, 0x8F	; 143
    2132:	d0 40       	sbci	r29, 0x00	; 0
    2134:	c1 57       	subi	r28, 0x71	; 113
    2136:	df 4f       	sbci	r29, 0xFF	; 255
    2138:	88 81       	ld	r24, Y
    213a:	cf 58       	subi	r28, 0x8F	; 143
    213c:	d0 40       	sbci	r29, 0x00	; 0
    213e:	88 23       	and	r24, r24
    2140:	21 f6       	brne	.-120    	; 0x20ca <main+0x86>
    2142:	3b c0       	rjmp	.+118    	; 0x21ba <main+0x176>
	while(1)
	{
	while(x==10)
		{
		x=Keypad_u8GetKey();
    2144:	0e 94 36 0a 	call	0x146c	; 0x146c <Keypad_u8GetKey>
    2148:	8e 01       	movw	r16, r28
    214a:	0f 58       	subi	r16, 0x8F	; 143
    214c:	1f 4f       	sbci	r17, 0xFF	; 255
    214e:	88 2f       	mov	r24, r24
    2150:	90 e0       	ldi	r25, 0x00	; 0
    2152:	a0 e0       	ldi	r26, 0x00	; 0
    2154:	b0 e0       	ldi	r27, 0x00	; 0
    2156:	bc 01       	movw	r22, r24
    2158:	cd 01       	movw	r24, r26
    215a:	0e 94 2f 05 	call	0xa5e	; 0xa5e <__floatunsisf>
    215e:	dc 01       	movw	r26, r24
    2160:	cb 01       	movw	r24, r22
    2162:	f8 01       	movw	r30, r16
    2164:	80 83       	st	Z, r24
    2166:	91 83       	std	Z+1, r25	; 0x01
    2168:	a2 83       	std	Z+2, r26	; 0x02
    216a:	b3 83       	std	Z+3, r27	; 0x03

		   if(x<10)
    216c:	fe 01       	movw	r30, r28
    216e:	ef 58       	subi	r30, 0x8F	; 143
    2170:	ff 4f       	sbci	r31, 0xFF	; 255
    2172:	60 81       	ld	r22, Z
    2174:	71 81       	ldd	r23, Z+1	; 0x01
    2176:	82 81       	ldd	r24, Z+2	; 0x02
    2178:	93 81       	ldd	r25, Z+3	; 0x03
    217a:	20 e0       	ldi	r18, 0x00	; 0
    217c:	30 e0       	ldi	r19, 0x00	; 0
    217e:	40 e2       	ldi	r20, 0x20	; 32
    2180:	51 e4       	ldi	r21, 0x41	; 65
    2182:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    2186:	88 23       	and	r24, r24
    2188:	c4 f4       	brge	.+48     	; 0x21ba <main+0x176>
		     {
			   Lcd_vidWriteChar(x+0x30);
    218a:	fe 01       	movw	r30, r28
    218c:	ef 58       	subi	r30, 0x8F	; 143
    218e:	ff 4f       	sbci	r31, 0xFF	; 255
    2190:	60 81       	ld	r22, Z
    2192:	71 81       	ldd	r23, Z+1	; 0x01
    2194:	82 81       	ldd	r24, Z+2	; 0x02
    2196:	93 81       	ldd	r25, Z+3	; 0x03
    2198:	20 e0       	ldi	r18, 0x00	; 0
    219a:	30 e0       	ldi	r19, 0x00	; 0
    219c:	40 e4       	ldi	r20, 0x40	; 64
    219e:	52 e4       	ldi	r21, 0x42	; 66
    21a0:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <__addsf3>
    21a4:	dc 01       	movw	r26, r24
    21a6:	cb 01       	movw	r24, r22
    21a8:	bc 01       	movw	r22, r24
    21aa:	cd 01       	movw	r24, r26
    21ac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21b0:	dc 01       	movw	r26, r24
    21b2:	cb 01       	movw	r24, r22
    21b4:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <Lcd_vidWriteChar>
    21b8:	6d c0       	rjmp	.+218    	; 0x2294 <main+0x250>
	u8 op=100;
	f32 z;
	u8 arr[]="Unknown Operation";
	while(1)
	{
	while(x==10)
    21ba:	fe 01       	movw	r30, r28
    21bc:	ef 58       	subi	r30, 0x8F	; 143
    21be:	ff 4f       	sbci	r31, 0xFF	; 255
    21c0:	60 81       	ld	r22, Z
    21c2:	71 81       	ldd	r23, Z+1	; 0x01
    21c4:	82 81       	ldd	r24, Z+2	; 0x02
    21c6:	93 81       	ldd	r25, Z+3	; 0x03
    21c8:	20 e0       	ldi	r18, 0x00	; 0
    21ca:	30 e0       	ldi	r19, 0x00	; 0
    21cc:	40 e2       	ldi	r20, 0x20	; 32
    21ce:	51 e4       	ldi	r21, 0x41	; 65
    21d0:	0e 94 bd 03 	call	0x77a	; 0x77a <__eqsf2>
    21d4:	88 23       	and	r24, r24
    21d6:	09 f4       	brne	.+2      	; 0x21da <main+0x196>
    21d8:	b5 cf       	rjmp	.-150    	; 0x2144 <main+0x100>
    21da:	5c c0       	rjmp	.+184    	; 0x2294 <main+0x250>



	while(op==100)
		{
		    op=Keypad_u8GetKey();
    21dc:	0e 94 36 0a 	call	0x146c	; 0x146c <Keypad_u8GetKey>
    21e0:	fe 01       	movw	r30, r28
    21e2:	e9 59       	subi	r30, 0x99	; 153
    21e4:	ff 4f       	sbci	r31, 0xFF	; 255
    21e6:	80 83       	st	Z, r24

			if(op<100)
    21e8:	fe 01       	movw	r30, r28
    21ea:	e9 59       	subi	r30, 0x99	; 153
    21ec:	ff 4f       	sbci	r31, 0xFF	; 255
    21ee:	80 81       	ld	r24, Z
    21f0:	84 36       	cpi	r24, 0x64	; 100
    21f2:	08 f0       	brcs	.+2      	; 0x21f6 <main+0x1b2>
    21f4:	4f c0       	rjmp	.+158    	; 0x2294 <main+0x250>
				 {
				switch(op)
    21f6:	fe 01       	movw	r30, r28
    21f8:	e9 59       	subi	r30, 0x99	; 153
    21fa:	ff 4f       	sbci	r31, 0xFF	; 255
    21fc:	80 81       	ld	r24, Z
    21fe:	28 2f       	mov	r18, r24
    2200:	30 e0       	ldi	r19, 0x00	; 0
    2202:	c7 57       	subi	r28, 0x77	; 119
    2204:	df 4f       	sbci	r29, 0xFF	; 255
    2206:	39 83       	std	Y+1, r19	; 0x01
    2208:	28 83       	st	Y, r18
    220a:	c9 58       	subi	r28, 0x89	; 137
    220c:	d0 40       	sbci	r29, 0x00	; 0
    220e:	c7 57       	subi	r28, 0x77	; 119
    2210:	df 4f       	sbci	r29, 0xFF	; 255
    2212:	88 81       	ld	r24, Y
    2214:	99 81       	ldd	r25, Y+1	; 0x01
    2216:	c9 58       	subi	r28, 0x89	; 137
    2218:	d0 40       	sbci	r29, 0x00	; 0
    221a:	8b 30       	cpi	r24, 0x0B	; 11
    221c:	91 05       	cpc	r25, r1
    221e:	51 f1       	breq	.+84     	; 0x2274 <main+0x230>
    2220:	c7 57       	subi	r28, 0x77	; 119
    2222:	df 4f       	sbci	r29, 0xFF	; 255
    2224:	e8 81       	ld	r30, Y
    2226:	f9 81       	ldd	r31, Y+1	; 0x01
    2228:	c9 58       	subi	r28, 0x89	; 137
    222a:	d0 40       	sbci	r29, 0x00	; 0
    222c:	ec 30       	cpi	r30, 0x0C	; 12
    222e:	f1 05       	cpc	r31, r1
    2230:	54 f4       	brge	.+20     	; 0x2246 <main+0x202>
    2232:	c7 57       	subi	r28, 0x77	; 119
    2234:	df 4f       	sbci	r29, 0xFF	; 255
    2236:	28 81       	ld	r18, Y
    2238:	39 81       	ldd	r19, Y+1	; 0x01
    223a:	c9 58       	subi	r28, 0x89	; 137
    223c:	d0 40       	sbci	r29, 0x00	; 0
    223e:	2a 30       	cpi	r18, 0x0A	; 10
    2240:	31 05       	cpc	r19, r1
    2242:	a1 f0       	breq	.+40     	; 0x226c <main+0x228>
    2244:	23 c0       	rjmp	.+70     	; 0x228c <main+0x248>
    2246:	c7 57       	subi	r28, 0x77	; 119
    2248:	df 4f       	sbci	r29, 0xFF	; 255
    224a:	88 81       	ld	r24, Y
    224c:	99 81       	ldd	r25, Y+1	; 0x01
    224e:	c9 58       	subi	r28, 0x89	; 137
    2250:	d0 40       	sbci	r29, 0x00	; 0
    2252:	8c 30       	cpi	r24, 0x0C	; 12
    2254:	91 05       	cpc	r25, r1
    2256:	91 f0       	breq	.+36     	; 0x227c <main+0x238>
    2258:	c7 57       	subi	r28, 0x77	; 119
    225a:	df 4f       	sbci	r29, 0xFF	; 255
    225c:	e8 81       	ld	r30, Y
    225e:	f9 81       	ldd	r31, Y+1	; 0x01
    2260:	c9 58       	subi	r28, 0x89	; 137
    2262:	d0 40       	sbci	r29, 0x00	; 0
    2264:	ed 30       	cpi	r30, 0x0D	; 13
    2266:	f1 05       	cpc	r31, r1
    2268:	69 f0       	breq	.+26     	; 0x2284 <main+0x240>
    226a:	10 c0       	rjmp	.+32     	; 0x228c <main+0x248>
					{
					   case(10):
					    {
						   Lcd_vidWriteChar('+');
    226c:	8b e2       	ldi	r24, 0x2B	; 43
    226e:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <Lcd_vidWriteChar>
    2272:	3b c0       	rjmp	.+118    	; 0x22ea <main+0x2a6>
						break;
					    }
					   case(11):
					    {
					   	   Lcd_vidWriteChar('-');
    2274:	8d e2       	ldi	r24, 0x2D	; 45
    2276:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <Lcd_vidWriteChar>
    227a:	37 c0       	rjmp	.+110    	; 0x22ea <main+0x2a6>
					   	break;
					    }
					   case(12):
					    {
					   	   Lcd_vidWriteChar('*');
    227c:	8a e2       	ldi	r24, 0x2A	; 42
    227e:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <Lcd_vidWriteChar>
    2282:	33 c0       	rjmp	.+102    	; 0x22ea <main+0x2a6>

					   	break;
					    }
					   case(13):
					    {
					   	   Lcd_vidWriteChar('/');
    2284:	8f e2       	ldi	r24, 0x2F	; 47
    2286:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <Lcd_vidWriteChar>
    228a:	2f c0       	rjmp	.+94     	; 0x22ea <main+0x2a6>
					   	break;
					    }
					   default: Lcd_vidWriteChar('?');
    228c:	8f e3       	ldi	r24, 0x3F	; 63
    228e:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <Lcd_vidWriteChar>
    2292:	2b c0       	rjmp	.+86     	; 0x22ea <main+0x2a6>
		}




	while(op==100)
    2294:	fe 01       	movw	r30, r28
    2296:	e9 59       	subi	r30, 0x99	; 153
    2298:	ff 4f       	sbci	r31, 0xFF	; 255
    229a:	80 81       	ld	r24, Z
    229c:	84 36       	cpi	r24, 0x64	; 100
    229e:	09 f4       	brne	.+2      	; 0x22a2 <main+0x25e>
    22a0:	9d cf       	rjmp	.-198    	; 0x21dc <main+0x198>
    22a2:	23 c0       	rjmp	.+70     	; 0x22ea <main+0x2a6>



	while(y==10)
	{
	    y=Keypad_u8GetKey();
    22a4:	0e 94 36 0a 	call	0x146c	; 0x146c <Keypad_u8GetKey>
    22a8:	8e 01       	movw	r16, r28
    22aa:	03 59       	subi	r16, 0x93	; 147
    22ac:	1f 4f       	sbci	r17, 0xFF	; 255
    22ae:	88 2f       	mov	r24, r24
    22b0:	90 e0       	ldi	r25, 0x00	; 0
    22b2:	a0 e0       	ldi	r26, 0x00	; 0
    22b4:	b0 e0       	ldi	r27, 0x00	; 0
    22b6:	bc 01       	movw	r22, r24
    22b8:	cd 01       	movw	r24, r26
    22ba:	0e 94 2f 05 	call	0xa5e	; 0xa5e <__floatunsisf>
    22be:	dc 01       	movw	r26, r24
    22c0:	cb 01       	movw	r24, r22
    22c2:	f8 01       	movw	r30, r16
    22c4:	80 83       	st	Z, r24
    22c6:	91 83       	std	Z+1, r25	; 0x01
    22c8:	a2 83       	std	Z+2, r26	; 0x02
    22ca:	b3 83       	std	Z+3, r27	; 0x03

			if(y<10)
    22cc:	fe 01       	movw	r30, r28
    22ce:	e3 59       	subi	r30, 0x93	; 147
    22d0:	ff 4f       	sbci	r31, 0xFF	; 255
    22d2:	60 81       	ld	r22, Z
    22d4:	71 81       	ldd	r23, Z+1	; 0x01
    22d6:	82 81       	ldd	r24, Z+2	; 0x02
    22d8:	93 81       	ldd	r25, Z+3	; 0x03
    22da:	20 e0       	ldi	r18, 0x00	; 0
    22dc:	30 e0       	ldi	r19, 0x00	; 0
    22de:	40 e2       	ldi	r20, 0x20	; 32
    22e0:	51 e4       	ldi	r21, 0x41	; 65
    22e2:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    22e6:	88 23       	and	r24, r24
    22e8:	7c f0       	brlt	.+30     	; 0x2308 <main+0x2c4>
				  }
		}



	while(y==10)
    22ea:	fe 01       	movw	r30, r28
    22ec:	e3 59       	subi	r30, 0x93	; 147
    22ee:	ff 4f       	sbci	r31, 0xFF	; 255
    22f0:	60 81       	ld	r22, Z
    22f2:	71 81       	ldd	r23, Z+1	; 0x01
    22f4:	82 81       	ldd	r24, Z+2	; 0x02
    22f6:	93 81       	ldd	r25, Z+3	; 0x03
    22f8:	20 e0       	ldi	r18, 0x00	; 0
    22fa:	30 e0       	ldi	r19, 0x00	; 0
    22fc:	40 e2       	ldi	r20, 0x20	; 32
    22fe:	51 e4       	ldi	r21, 0x41	; 65
    2300:	0e 94 bd 03 	call	0x77a	; 0x77a <__eqsf2>
    2304:	88 23       	and	r24, r24
    2306:	71 f2       	breq	.-100    	; 0x22a4 <main+0x260>
		     break;
			  }
	}


	Lcd_vidWriteChar(y+0x30);
    2308:	fe 01       	movw	r30, r28
    230a:	e3 59       	subi	r30, 0x93	; 147
    230c:	ff 4f       	sbci	r31, 0xFF	; 255
    230e:	60 81       	ld	r22, Z
    2310:	71 81       	ldd	r23, Z+1	; 0x01
    2312:	82 81       	ldd	r24, Z+2	; 0x02
    2314:	93 81       	ldd	r25, Z+3	; 0x03
    2316:	20 e0       	ldi	r18, 0x00	; 0
    2318:	30 e0       	ldi	r19, 0x00	; 0
    231a:	40 e4       	ldi	r20, 0x40	; 64
    231c:	52 e4       	ldi	r21, 0x42	; 66
    231e:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <__addsf3>
    2322:	dc 01       	movw	r26, r24
    2324:	cb 01       	movw	r24, r22
    2326:	bc 01       	movw	r22, r24
    2328:	cd 01       	movw	r24, r26
    232a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    232e:	dc 01       	movw	r26, r24
    2330:	cb 01       	movw	r24, r22
    2332:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <Lcd_vidWriteChar>
    2336:	fe 01       	movw	r30, r28
    2338:	e1 5a       	subi	r30, 0xA1	; 161
    233a:	ff 4f       	sbci	r31, 0xFF	; 255
    233c:	80 e0       	ldi	r24, 0x00	; 0
    233e:	90 e0       	ldi	r25, 0x00	; 0
    2340:	a6 e1       	ldi	r26, 0x16	; 22
    2342:	b3 e4       	ldi	r27, 0x43	; 67
    2344:	80 83       	st	Z, r24
    2346:	91 83       	std	Z+1, r25	; 0x01
    2348:	a2 83       	std	Z+2, r26	; 0x02
    234a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    234c:	8e 01       	movw	r16, r28
    234e:	05 5a       	subi	r16, 0xA5	; 165
    2350:	1f 4f       	sbci	r17, 0xFF	; 255
    2352:	fe 01       	movw	r30, r28
    2354:	e1 5a       	subi	r30, 0xA1	; 161
    2356:	ff 4f       	sbci	r31, 0xFF	; 255
    2358:	60 81       	ld	r22, Z
    235a:	71 81       	ldd	r23, Z+1	; 0x01
    235c:	82 81       	ldd	r24, Z+2	; 0x02
    235e:	93 81       	ldd	r25, Z+3	; 0x03
    2360:	20 e0       	ldi	r18, 0x00	; 0
    2362:	30 e0       	ldi	r19, 0x00	; 0
    2364:	4a ef       	ldi	r20, 0xFA	; 250
    2366:	54 e4       	ldi	r21, 0x44	; 68
    2368:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    236c:	dc 01       	movw	r26, r24
    236e:	cb 01       	movw	r24, r22
    2370:	f8 01       	movw	r30, r16
    2372:	80 83       	st	Z, r24
    2374:	91 83       	std	Z+1, r25	; 0x01
    2376:	a2 83       	std	Z+2, r26	; 0x02
    2378:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    237a:	fe 01       	movw	r30, r28
    237c:	e5 5a       	subi	r30, 0xA5	; 165
    237e:	ff 4f       	sbci	r31, 0xFF	; 255
    2380:	60 81       	ld	r22, Z
    2382:	71 81       	ldd	r23, Z+1	; 0x01
    2384:	82 81       	ldd	r24, Z+2	; 0x02
    2386:	93 81       	ldd	r25, Z+3	; 0x03
    2388:	20 e0       	ldi	r18, 0x00	; 0
    238a:	30 e0       	ldi	r19, 0x00	; 0
    238c:	40 e8       	ldi	r20, 0x80	; 128
    238e:	5f e3       	ldi	r21, 0x3F	; 63
    2390:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    2394:	88 23       	and	r24, r24
    2396:	44 f4       	brge	.+16     	; 0x23a8 <main+0x364>
		__ticks = 1;
    2398:	fe 01       	movw	r30, r28
    239a:	e7 5a       	subi	r30, 0xA7	; 167
    239c:	ff 4f       	sbci	r31, 0xFF	; 255
    239e:	81 e0       	ldi	r24, 0x01	; 1
    23a0:	90 e0       	ldi	r25, 0x00	; 0
    23a2:	91 83       	std	Z+1, r25	; 0x01
    23a4:	80 83       	st	Z, r24
    23a6:	64 c0       	rjmp	.+200    	; 0x2470 <main+0x42c>
	else if (__tmp > 65535)
    23a8:	fe 01       	movw	r30, r28
    23aa:	e5 5a       	subi	r30, 0xA5	; 165
    23ac:	ff 4f       	sbci	r31, 0xFF	; 255
    23ae:	60 81       	ld	r22, Z
    23b0:	71 81       	ldd	r23, Z+1	; 0x01
    23b2:	82 81       	ldd	r24, Z+2	; 0x02
    23b4:	93 81       	ldd	r25, Z+3	; 0x03
    23b6:	20 e0       	ldi	r18, 0x00	; 0
    23b8:	3f ef       	ldi	r19, 0xFF	; 255
    23ba:	4f e7       	ldi	r20, 0x7F	; 127
    23bc:	57 e4       	ldi	r21, 0x47	; 71
    23be:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    23c2:	18 16       	cp	r1, r24
    23c4:	0c f0       	brlt	.+2      	; 0x23c8 <main+0x384>
    23c6:	43 c0       	rjmp	.+134    	; 0x244e <main+0x40a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23c8:	fe 01       	movw	r30, r28
    23ca:	e1 5a       	subi	r30, 0xA1	; 161
    23cc:	ff 4f       	sbci	r31, 0xFF	; 255
    23ce:	60 81       	ld	r22, Z
    23d0:	71 81       	ldd	r23, Z+1	; 0x01
    23d2:	82 81       	ldd	r24, Z+2	; 0x02
    23d4:	93 81       	ldd	r25, Z+3	; 0x03
    23d6:	20 e0       	ldi	r18, 0x00	; 0
    23d8:	30 e0       	ldi	r19, 0x00	; 0
    23da:	40 e2       	ldi	r20, 0x20	; 32
    23dc:	51 e4       	ldi	r21, 0x41	; 65
    23de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23e2:	dc 01       	movw	r26, r24
    23e4:	cb 01       	movw	r24, r22
    23e6:	8e 01       	movw	r16, r28
    23e8:	07 5a       	subi	r16, 0xA7	; 167
    23ea:	1f 4f       	sbci	r17, 0xFF	; 255
    23ec:	bc 01       	movw	r22, r24
    23ee:	cd 01       	movw	r24, r26
    23f0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23f4:	dc 01       	movw	r26, r24
    23f6:	cb 01       	movw	r24, r22
    23f8:	f8 01       	movw	r30, r16
    23fa:	91 83       	std	Z+1, r25	; 0x01
    23fc:	80 83       	st	Z, r24
    23fe:	1f c0       	rjmp	.+62     	; 0x243e <main+0x3fa>
    2400:	fe 01       	movw	r30, r28
    2402:	e9 5a       	subi	r30, 0xA9	; 169
    2404:	ff 4f       	sbci	r31, 0xFF	; 255
    2406:	88 ec       	ldi	r24, 0xC8	; 200
    2408:	90 e0       	ldi	r25, 0x00	; 0
    240a:	91 83       	std	Z+1, r25	; 0x01
    240c:	80 83       	st	Z, r24
    240e:	fe 01       	movw	r30, r28
    2410:	e9 5a       	subi	r30, 0xA9	; 169
    2412:	ff 4f       	sbci	r31, 0xFF	; 255
    2414:	80 81       	ld	r24, Z
    2416:	91 81       	ldd	r25, Z+1	; 0x01
    2418:	01 97       	sbiw	r24, 0x01	; 1
    241a:	f1 f7       	brne	.-4      	; 0x2418 <main+0x3d4>
    241c:	fe 01       	movw	r30, r28
    241e:	e9 5a       	subi	r30, 0xA9	; 169
    2420:	ff 4f       	sbci	r31, 0xFF	; 255
    2422:	91 83       	std	Z+1, r25	; 0x01
    2424:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2426:	de 01       	movw	r26, r28
    2428:	a7 5a       	subi	r26, 0xA7	; 167
    242a:	bf 4f       	sbci	r27, 0xFF	; 255
    242c:	fe 01       	movw	r30, r28
    242e:	e7 5a       	subi	r30, 0xA7	; 167
    2430:	ff 4f       	sbci	r31, 0xFF	; 255
    2432:	80 81       	ld	r24, Z
    2434:	91 81       	ldd	r25, Z+1	; 0x01
    2436:	01 97       	sbiw	r24, 0x01	; 1
    2438:	11 96       	adiw	r26, 0x01	; 1
    243a:	9c 93       	st	X, r25
    243c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    243e:	fe 01       	movw	r30, r28
    2440:	e7 5a       	subi	r30, 0xA7	; 167
    2442:	ff 4f       	sbci	r31, 0xFF	; 255
    2444:	80 81       	ld	r24, Z
    2446:	91 81       	ldd	r25, Z+1	; 0x01
    2448:	00 97       	sbiw	r24, 0x00	; 0
    244a:	d1 f6       	brne	.-76     	; 0x2400 <main+0x3bc>
    244c:	28 c0       	rjmp	.+80     	; 0x249e <main+0x45a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    244e:	8e 01       	movw	r16, r28
    2450:	07 5a       	subi	r16, 0xA7	; 167
    2452:	1f 4f       	sbci	r17, 0xFF	; 255
    2454:	fe 01       	movw	r30, r28
    2456:	e5 5a       	subi	r30, 0xA5	; 165
    2458:	ff 4f       	sbci	r31, 0xFF	; 255
    245a:	60 81       	ld	r22, Z
    245c:	71 81       	ldd	r23, Z+1	; 0x01
    245e:	82 81       	ldd	r24, Z+2	; 0x02
    2460:	93 81       	ldd	r25, Z+3	; 0x03
    2462:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2466:	dc 01       	movw	r26, r24
    2468:	cb 01       	movw	r24, r22
    246a:	f8 01       	movw	r30, r16
    246c:	91 83       	std	Z+1, r25	; 0x01
    246e:	80 83       	st	Z, r24
    2470:	de 01       	movw	r26, r28
    2472:	ab 5a       	subi	r26, 0xAB	; 171
    2474:	bf 4f       	sbci	r27, 0xFF	; 255
    2476:	fe 01       	movw	r30, r28
    2478:	e7 5a       	subi	r30, 0xA7	; 167
    247a:	ff 4f       	sbci	r31, 0xFF	; 255
    247c:	80 81       	ld	r24, Z
    247e:	91 81       	ldd	r25, Z+1	; 0x01
    2480:	11 96       	adiw	r26, 0x01	; 1
    2482:	9c 93       	st	X, r25
    2484:	8e 93       	st	-X, r24
    2486:	fe 01       	movw	r30, r28
    2488:	eb 5a       	subi	r30, 0xAB	; 171
    248a:	ff 4f       	sbci	r31, 0xFF	; 255
    248c:	80 81       	ld	r24, Z
    248e:	91 81       	ldd	r25, Z+1	; 0x01
    2490:	01 97       	sbiw	r24, 0x01	; 1
    2492:	f1 f7       	brne	.-4      	; 0x2490 <main+0x44c>
    2494:	fe 01       	movw	r30, r28
    2496:	eb 5a       	subi	r30, 0xAB	; 171
    2498:	ff 4f       	sbci	r31, 0xFF	; 255
    249a:	91 83       	std	Z+1, r25	; 0x01
    249c:	80 83       	st	Z, r24
	_delay_ms(150);

switch(op)
    249e:	fe 01       	movw	r30, r28
    24a0:	e9 59       	subi	r30, 0x99	; 153
    24a2:	ff 4f       	sbci	r31, 0xFF	; 255
    24a4:	80 81       	ld	r24, Z
    24a6:	28 2f       	mov	r18, r24
    24a8:	30 e0       	ldi	r19, 0x00	; 0
    24aa:	c9 57       	subi	r28, 0x79	; 121
    24ac:	df 4f       	sbci	r29, 0xFF	; 255
    24ae:	39 83       	std	Y+1, r19	; 0x01
    24b0:	28 83       	st	Y, r18
    24b2:	c7 58       	subi	r28, 0x87	; 135
    24b4:	d0 40       	sbci	r29, 0x00	; 0
    24b6:	c9 57       	subi	r28, 0x79	; 121
    24b8:	df 4f       	sbci	r29, 0xFF	; 255
    24ba:	88 81       	ld	r24, Y
    24bc:	99 81       	ldd	r25, Y+1	; 0x01
    24be:	c7 58       	subi	r28, 0x87	; 135
    24c0:	d0 40       	sbci	r29, 0x00	; 0
    24c2:	8b 30       	cpi	r24, 0x0B	; 11
    24c4:	91 05       	cpc	r25, r1
    24c6:	09 f4       	brne	.+2      	; 0x24ca <main+0x486>
    24c8:	43 c0       	rjmp	.+134    	; 0x2550 <main+0x50c>
    24ca:	c9 57       	subi	r28, 0x79	; 121
    24cc:	df 4f       	sbci	r29, 0xFF	; 255
    24ce:	e8 81       	ld	r30, Y
    24d0:	f9 81       	ldd	r31, Y+1	; 0x01
    24d2:	c7 58       	subi	r28, 0x87	; 135
    24d4:	d0 40       	sbci	r29, 0x00	; 0
    24d6:	ec 30       	cpi	r30, 0x0C	; 12
    24d8:	f1 05       	cpc	r31, r1
    24da:	54 f4       	brge	.+20     	; 0x24f0 <main+0x4ac>
    24dc:	c9 57       	subi	r28, 0x79	; 121
    24de:	df 4f       	sbci	r29, 0xFF	; 255
    24e0:	28 81       	ld	r18, Y
    24e2:	39 81       	ldd	r19, Y+1	; 0x01
    24e4:	c7 58       	subi	r28, 0x87	; 135
    24e6:	d0 40       	sbci	r29, 0x00	; 0
    24e8:	2a 30       	cpi	r18, 0x0A	; 10
    24ea:	31 05       	cpc	r19, r1
    24ec:	b1 f0       	breq	.+44     	; 0x251a <main+0x4d6>
    24ee:	81 c0       	rjmp	.+258    	; 0x25f2 <main+0x5ae>
    24f0:	c9 57       	subi	r28, 0x79	; 121
    24f2:	df 4f       	sbci	r29, 0xFF	; 255
    24f4:	88 81       	ld	r24, Y
    24f6:	99 81       	ldd	r25, Y+1	; 0x01
    24f8:	c7 58       	subi	r28, 0x87	; 135
    24fa:	d0 40       	sbci	r29, 0x00	; 0
    24fc:	8c 30       	cpi	r24, 0x0C	; 12
    24fe:	91 05       	cpc	r25, r1
    2500:	09 f4       	brne	.+2      	; 0x2504 <main+0x4c0>
    2502:	41 c0       	rjmp	.+130    	; 0x2586 <main+0x542>
    2504:	c9 57       	subi	r28, 0x79	; 121
    2506:	df 4f       	sbci	r29, 0xFF	; 255
    2508:	e8 81       	ld	r30, Y
    250a:	f9 81       	ldd	r31, Y+1	; 0x01
    250c:	c7 58       	subi	r28, 0x87	; 135
    250e:	d0 40       	sbci	r29, 0x00	; 0
    2510:	ed 30       	cpi	r30, 0x0D	; 13
    2512:	f1 05       	cpc	r31, r1
    2514:	09 f4       	brne	.+2      	; 0x2518 <main+0x4d4>
    2516:	52 c0       	rjmp	.+164    	; 0x25bc <main+0x578>
    2518:	6c c0       	rjmp	.+216    	; 0x25f2 <main+0x5ae>
{
	case(10):
	{
		result=x+y;
    251a:	8e 01       	movw	r16, r28
    251c:	07 59       	subi	r16, 0x97	; 151
    251e:	1f 4f       	sbci	r17, 0xFF	; 255
    2520:	fe 01       	movw	r30, r28
    2522:	ef 58       	subi	r30, 0x8F	; 143
    2524:	ff 4f       	sbci	r31, 0xFF	; 255
    2526:	de 01       	movw	r26, r28
    2528:	a3 59       	subi	r26, 0x93	; 147
    252a:	bf 4f       	sbci	r27, 0xFF	; 255
    252c:	60 81       	ld	r22, Z
    252e:	71 81       	ldd	r23, Z+1	; 0x01
    2530:	82 81       	ldd	r24, Z+2	; 0x02
    2532:	93 81       	ldd	r25, Z+3	; 0x03
    2534:	2d 91       	ld	r18, X+
    2536:	3d 91       	ld	r19, X+
    2538:	4d 91       	ld	r20, X+
    253a:	5c 91       	ld	r21, X
    253c:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <__addsf3>
    2540:	dc 01       	movw	r26, r24
    2542:	cb 01       	movw	r24, r22
    2544:	f8 01       	movw	r30, r16
    2546:	80 83       	st	Z, r24
    2548:	91 83       	std	Z+1, r25	; 0x01
    254a:	a2 83       	std	Z+2, r26	; 0x02
    254c:	b3 83       	std	Z+3, r27	; 0x03
    254e:	56 c0       	rjmp	.+172    	; 0x25fc <main+0x5b8>
		break;
	}
	case(11):
	{
		result=x-y;
    2550:	8e 01       	movw	r16, r28
    2552:	07 59       	subi	r16, 0x97	; 151
    2554:	1f 4f       	sbci	r17, 0xFF	; 255
    2556:	fe 01       	movw	r30, r28
    2558:	ef 58       	subi	r30, 0x8F	; 143
    255a:	ff 4f       	sbci	r31, 0xFF	; 255
    255c:	de 01       	movw	r26, r28
    255e:	a3 59       	subi	r26, 0x93	; 147
    2560:	bf 4f       	sbci	r27, 0xFF	; 255
    2562:	60 81       	ld	r22, Z
    2564:	71 81       	ldd	r23, Z+1	; 0x01
    2566:	82 81       	ldd	r24, Z+2	; 0x02
    2568:	93 81       	ldd	r25, Z+3	; 0x03
    256a:	2d 91       	ld	r18, X+
    256c:	3d 91       	ld	r19, X+
    256e:	4d 91       	ld	r20, X+
    2570:	5c 91       	ld	r21, X
    2572:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
    2576:	dc 01       	movw	r26, r24
    2578:	cb 01       	movw	r24, r22
    257a:	f8 01       	movw	r30, r16
    257c:	80 83       	st	Z, r24
    257e:	91 83       	std	Z+1, r25	; 0x01
    2580:	a2 83       	std	Z+2, r26	; 0x02
    2582:	b3 83       	std	Z+3, r27	; 0x03
    2584:	3b c0       	rjmp	.+118    	; 0x25fc <main+0x5b8>
	    break;
	}
	case(12):
	{
		result=x*y;
    2586:	8e 01       	movw	r16, r28
    2588:	07 59       	subi	r16, 0x97	; 151
    258a:	1f 4f       	sbci	r17, 0xFF	; 255
    258c:	fe 01       	movw	r30, r28
    258e:	ef 58       	subi	r30, 0x8F	; 143
    2590:	ff 4f       	sbci	r31, 0xFF	; 255
    2592:	de 01       	movw	r26, r28
    2594:	a3 59       	subi	r26, 0x93	; 147
    2596:	bf 4f       	sbci	r27, 0xFF	; 255
    2598:	60 81       	ld	r22, Z
    259a:	71 81       	ldd	r23, Z+1	; 0x01
    259c:	82 81       	ldd	r24, Z+2	; 0x02
    259e:	93 81       	ldd	r25, Z+3	; 0x03
    25a0:	2d 91       	ld	r18, X+
    25a2:	3d 91       	ld	r19, X+
    25a4:	4d 91       	ld	r20, X+
    25a6:	5c 91       	ld	r21, X
    25a8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25ac:	dc 01       	movw	r26, r24
    25ae:	cb 01       	movw	r24, r22
    25b0:	f8 01       	movw	r30, r16
    25b2:	80 83       	st	Z, r24
    25b4:	91 83       	std	Z+1, r25	; 0x01
    25b6:	a2 83       	std	Z+2, r26	; 0x02
    25b8:	b3 83       	std	Z+3, r27	; 0x03
    25ba:	20 c0       	rjmp	.+64     	; 0x25fc <main+0x5b8>
	    break;
	}
	case(13):
	{
		result=x/y;
    25bc:	8e 01       	movw	r16, r28
    25be:	07 59       	subi	r16, 0x97	; 151
    25c0:	1f 4f       	sbci	r17, 0xFF	; 255
    25c2:	fe 01       	movw	r30, r28
    25c4:	ef 58       	subi	r30, 0x8F	; 143
    25c6:	ff 4f       	sbci	r31, 0xFF	; 255
    25c8:	de 01       	movw	r26, r28
    25ca:	a3 59       	subi	r26, 0x93	; 147
    25cc:	bf 4f       	sbci	r27, 0xFF	; 255
    25ce:	60 81       	ld	r22, Z
    25d0:	71 81       	ldd	r23, Z+1	; 0x01
    25d2:	82 81       	ldd	r24, Z+2	; 0x02
    25d4:	93 81       	ldd	r25, Z+3	; 0x03
    25d6:	2d 91       	ld	r18, X+
    25d8:	3d 91       	ld	r19, X+
    25da:	4d 91       	ld	r20, X+
    25dc:	5c 91       	ld	r21, X
    25de:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    25e2:	dc 01       	movw	r26, r24
    25e4:	cb 01       	movw	r24, r22
    25e6:	f8 01       	movw	r30, r16
    25e8:	80 83       	st	Z, r24
    25ea:	91 83       	std	Z+1, r25	; 0x01
    25ec:	a2 83       	std	Z+2, r26	; 0x02
    25ee:	b3 83       	std	Z+3, r27	; 0x03
    25f0:	05 c0       	rjmp	.+10     	; 0x25fc <main+0x5b8>
	    break;
	}
	default:Lcd_vidWriteString(arr);
    25f2:	ce 01       	movw	r24, r28
    25f4:	8b 58       	subi	r24, 0x8B	; 139
    25f6:	9f 4f       	sbci	r25, 0xFF	; 255
    25f8:	0e 94 51 0f 	call	0x1ea2	; 0x1ea2 <Lcd_vidWriteString>
}
res=result;
    25fc:	8e 01       	movw	r16, r28
    25fe:	08 59       	subi	r16, 0x98	; 152
    2600:	1f 4f       	sbci	r17, 0xFF	; 255
    2602:	fe 01       	movw	r30, r28
    2604:	e7 59       	subi	r30, 0x97	; 151
    2606:	ff 4f       	sbci	r31, 0xFF	; 255
    2608:	60 81       	ld	r22, Z
    260a:	71 81       	ldd	r23, Z+1	; 0x01
    260c:	82 81       	ldd	r24, Z+2	; 0x02
    260e:	93 81       	ldd	r25, Z+3	; 0x03
    2610:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2614:	dc 01       	movw	r26, r24
    2616:	cb 01       	movw	r24, r22
    2618:	f8 01       	movw	r30, r16
    261a:	80 83       	st	Z, r24
z=(result-res)*10;
    261c:	fe 01       	movw	r30, r28
    261e:	e8 59       	subi	r30, 0x98	; 152
    2620:	ff 4f       	sbci	r31, 0xFF	; 255
    2622:	80 81       	ld	r24, Z
    2624:	88 2f       	mov	r24, r24
    2626:	90 e0       	ldi	r25, 0x00	; 0
    2628:	aa 27       	eor	r26, r26
    262a:	97 fd       	sbrc	r25, 7
    262c:	a0 95       	com	r26
    262e:	ba 2f       	mov	r27, r26
    2630:	bc 01       	movw	r22, r24
    2632:	cd 01       	movw	r24, r26
    2634:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__floatsisf>
    2638:	9b 01       	movw	r18, r22
    263a:	ac 01       	movw	r20, r24
    263c:	fe 01       	movw	r30, r28
    263e:	e7 59       	subi	r30, 0x97	; 151
    2640:	ff 4f       	sbci	r31, 0xFF	; 255
    2642:	60 81       	ld	r22, Z
    2644:	71 81       	ldd	r23, Z+1	; 0x01
    2646:	82 81       	ldd	r24, Z+2	; 0x02
    2648:	93 81       	ldd	r25, Z+3	; 0x03
    264a:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
    264e:	dc 01       	movw	r26, r24
    2650:	cb 01       	movw	r24, r22
    2652:	8e 01       	movw	r16, r28
    2654:	0d 59       	subi	r16, 0x9D	; 157
    2656:	1f 4f       	sbci	r17, 0xFF	; 255
    2658:	bc 01       	movw	r22, r24
    265a:	cd 01       	movw	r24, r26
    265c:	20 e0       	ldi	r18, 0x00	; 0
    265e:	30 e0       	ldi	r19, 0x00	; 0
    2660:	40 e2       	ldi	r20, 0x20	; 32
    2662:	51 e4       	ldi	r21, 0x41	; 65
    2664:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2668:	dc 01       	movw	r26, r24
    266a:	cb 01       	movw	r24, r22
    266c:	f8 01       	movw	r30, r16
    266e:	80 83       	st	Z, r24
    2670:	91 83       	std	Z+1, r25	; 0x01
    2672:	a2 83       	std	Z+2, r26	; 0x02
    2674:	b3 83       	std	Z+3, r27	; 0x03
Lcd_vidWriteChar('=');
    2676:	8d e3       	ldi	r24, 0x3D	; 61
    2678:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <Lcd_vidWriteChar>
    267c:	fe 01       	movw	r30, r28
    267e:	ef 5a       	subi	r30, 0xAF	; 175
    2680:	ff 4f       	sbci	r31, 0xFF	; 255
    2682:	80 e0       	ldi	r24, 0x00	; 0
    2684:	90 e0       	ldi	r25, 0x00	; 0
    2686:	a0 e0       	ldi	r26, 0x00	; 0
    2688:	b0 e4       	ldi	r27, 0x40	; 64
    268a:	80 83       	st	Z, r24
    268c:	91 83       	std	Z+1, r25	; 0x01
    268e:	a2 83       	std	Z+2, r26	; 0x02
    2690:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2692:	8e 01       	movw	r16, r28
    2694:	03 5b       	subi	r16, 0xB3	; 179
    2696:	1f 4f       	sbci	r17, 0xFF	; 255
    2698:	fe 01       	movw	r30, r28
    269a:	ef 5a       	subi	r30, 0xAF	; 175
    269c:	ff 4f       	sbci	r31, 0xFF	; 255
    269e:	60 81       	ld	r22, Z
    26a0:	71 81       	ldd	r23, Z+1	; 0x01
    26a2:	82 81       	ldd	r24, Z+2	; 0x02
    26a4:	93 81       	ldd	r25, Z+3	; 0x03
    26a6:	20 e0       	ldi	r18, 0x00	; 0
    26a8:	30 e0       	ldi	r19, 0x00	; 0
    26aa:	4a ef       	ldi	r20, 0xFA	; 250
    26ac:	54 e4       	ldi	r21, 0x44	; 68
    26ae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26b2:	dc 01       	movw	r26, r24
    26b4:	cb 01       	movw	r24, r22
    26b6:	f8 01       	movw	r30, r16
    26b8:	80 83       	st	Z, r24
    26ba:	91 83       	std	Z+1, r25	; 0x01
    26bc:	a2 83       	std	Z+2, r26	; 0x02
    26be:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    26c0:	fe 01       	movw	r30, r28
    26c2:	e3 5b       	subi	r30, 0xB3	; 179
    26c4:	ff 4f       	sbci	r31, 0xFF	; 255
    26c6:	60 81       	ld	r22, Z
    26c8:	71 81       	ldd	r23, Z+1	; 0x01
    26ca:	82 81       	ldd	r24, Z+2	; 0x02
    26cc:	93 81       	ldd	r25, Z+3	; 0x03
    26ce:	20 e0       	ldi	r18, 0x00	; 0
    26d0:	30 e0       	ldi	r19, 0x00	; 0
    26d2:	40 e8       	ldi	r20, 0x80	; 128
    26d4:	5f e3       	ldi	r21, 0x3F	; 63
    26d6:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    26da:	88 23       	and	r24, r24
    26dc:	44 f4       	brge	.+16     	; 0x26ee <main+0x6aa>
		__ticks = 1;
    26de:	fe 01       	movw	r30, r28
    26e0:	e5 5b       	subi	r30, 0xB5	; 181
    26e2:	ff 4f       	sbci	r31, 0xFF	; 255
    26e4:	81 e0       	ldi	r24, 0x01	; 1
    26e6:	90 e0       	ldi	r25, 0x00	; 0
    26e8:	91 83       	std	Z+1, r25	; 0x01
    26ea:	80 83       	st	Z, r24
    26ec:	64 c0       	rjmp	.+200    	; 0x27b6 <main+0x772>
	else if (__tmp > 65535)
    26ee:	fe 01       	movw	r30, r28
    26f0:	e3 5b       	subi	r30, 0xB3	; 179
    26f2:	ff 4f       	sbci	r31, 0xFF	; 255
    26f4:	60 81       	ld	r22, Z
    26f6:	71 81       	ldd	r23, Z+1	; 0x01
    26f8:	82 81       	ldd	r24, Z+2	; 0x02
    26fa:	93 81       	ldd	r25, Z+3	; 0x03
    26fc:	20 e0       	ldi	r18, 0x00	; 0
    26fe:	3f ef       	ldi	r19, 0xFF	; 255
    2700:	4f e7       	ldi	r20, 0x7F	; 127
    2702:	57 e4       	ldi	r21, 0x47	; 71
    2704:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    2708:	18 16       	cp	r1, r24
    270a:	0c f0       	brlt	.+2      	; 0x270e <main+0x6ca>
    270c:	43 c0       	rjmp	.+134    	; 0x2794 <main+0x750>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    270e:	fe 01       	movw	r30, r28
    2710:	ef 5a       	subi	r30, 0xAF	; 175
    2712:	ff 4f       	sbci	r31, 0xFF	; 255
    2714:	60 81       	ld	r22, Z
    2716:	71 81       	ldd	r23, Z+1	; 0x01
    2718:	82 81       	ldd	r24, Z+2	; 0x02
    271a:	93 81       	ldd	r25, Z+3	; 0x03
    271c:	20 e0       	ldi	r18, 0x00	; 0
    271e:	30 e0       	ldi	r19, 0x00	; 0
    2720:	40 e2       	ldi	r20, 0x20	; 32
    2722:	51 e4       	ldi	r21, 0x41	; 65
    2724:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2728:	dc 01       	movw	r26, r24
    272a:	cb 01       	movw	r24, r22
    272c:	8e 01       	movw	r16, r28
    272e:	05 5b       	subi	r16, 0xB5	; 181
    2730:	1f 4f       	sbci	r17, 0xFF	; 255
    2732:	bc 01       	movw	r22, r24
    2734:	cd 01       	movw	r24, r26
    2736:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    273a:	dc 01       	movw	r26, r24
    273c:	cb 01       	movw	r24, r22
    273e:	f8 01       	movw	r30, r16
    2740:	91 83       	std	Z+1, r25	; 0x01
    2742:	80 83       	st	Z, r24
    2744:	1f c0       	rjmp	.+62     	; 0x2784 <main+0x740>
    2746:	fe 01       	movw	r30, r28
    2748:	e7 5b       	subi	r30, 0xB7	; 183
    274a:	ff 4f       	sbci	r31, 0xFF	; 255
    274c:	88 ec       	ldi	r24, 0xC8	; 200
    274e:	90 e0       	ldi	r25, 0x00	; 0
    2750:	91 83       	std	Z+1, r25	; 0x01
    2752:	80 83       	st	Z, r24
    2754:	fe 01       	movw	r30, r28
    2756:	e7 5b       	subi	r30, 0xB7	; 183
    2758:	ff 4f       	sbci	r31, 0xFF	; 255
    275a:	80 81       	ld	r24, Z
    275c:	91 81       	ldd	r25, Z+1	; 0x01
    275e:	01 97       	sbiw	r24, 0x01	; 1
    2760:	f1 f7       	brne	.-4      	; 0x275e <main+0x71a>
    2762:	fe 01       	movw	r30, r28
    2764:	e7 5b       	subi	r30, 0xB7	; 183
    2766:	ff 4f       	sbci	r31, 0xFF	; 255
    2768:	91 83       	std	Z+1, r25	; 0x01
    276a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    276c:	de 01       	movw	r26, r28
    276e:	a5 5b       	subi	r26, 0xB5	; 181
    2770:	bf 4f       	sbci	r27, 0xFF	; 255
    2772:	fe 01       	movw	r30, r28
    2774:	e5 5b       	subi	r30, 0xB5	; 181
    2776:	ff 4f       	sbci	r31, 0xFF	; 255
    2778:	80 81       	ld	r24, Z
    277a:	91 81       	ldd	r25, Z+1	; 0x01
    277c:	01 97       	sbiw	r24, 0x01	; 1
    277e:	11 96       	adiw	r26, 0x01	; 1
    2780:	9c 93       	st	X, r25
    2782:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2784:	fe 01       	movw	r30, r28
    2786:	e5 5b       	subi	r30, 0xB5	; 181
    2788:	ff 4f       	sbci	r31, 0xFF	; 255
    278a:	80 81       	ld	r24, Z
    278c:	91 81       	ldd	r25, Z+1	; 0x01
    278e:	00 97       	sbiw	r24, 0x00	; 0
    2790:	d1 f6       	brne	.-76     	; 0x2746 <main+0x702>
    2792:	27 c0       	rjmp	.+78     	; 0x27e2 <main+0x79e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2794:	8e 01       	movw	r16, r28
    2796:	05 5b       	subi	r16, 0xB5	; 181
    2798:	1f 4f       	sbci	r17, 0xFF	; 255
    279a:	fe 01       	movw	r30, r28
    279c:	e3 5b       	subi	r30, 0xB3	; 179
    279e:	ff 4f       	sbci	r31, 0xFF	; 255
    27a0:	60 81       	ld	r22, Z
    27a2:	71 81       	ldd	r23, Z+1	; 0x01
    27a4:	82 81       	ldd	r24, Z+2	; 0x02
    27a6:	93 81       	ldd	r25, Z+3	; 0x03
    27a8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27ac:	dc 01       	movw	r26, r24
    27ae:	cb 01       	movw	r24, r22
    27b0:	f8 01       	movw	r30, r16
    27b2:	91 83       	std	Z+1, r25	; 0x01
    27b4:	80 83       	st	Z, r24
    27b6:	de 01       	movw	r26, r28
    27b8:	a9 5b       	subi	r26, 0xB9	; 185
    27ba:	bf 4f       	sbci	r27, 0xFF	; 255
    27bc:	fe 01       	movw	r30, r28
    27be:	e5 5b       	subi	r30, 0xB5	; 181
    27c0:	ff 4f       	sbci	r31, 0xFF	; 255
    27c2:	80 81       	ld	r24, Z
    27c4:	91 81       	ldd	r25, Z+1	; 0x01
    27c6:	8d 93       	st	X+, r24
    27c8:	9c 93       	st	X, r25
    27ca:	fe 01       	movw	r30, r28
    27cc:	e9 5b       	subi	r30, 0xB9	; 185
    27ce:	ff 4f       	sbci	r31, 0xFF	; 255
    27d0:	80 81       	ld	r24, Z
    27d2:	91 81       	ldd	r25, Z+1	; 0x01
    27d4:	01 97       	sbiw	r24, 0x01	; 1
    27d6:	f1 f7       	brne	.-4      	; 0x27d4 <main+0x790>
    27d8:	fe 01       	movw	r30, r28
    27da:	e9 5b       	subi	r30, 0xB9	; 185
    27dc:	ff 4f       	sbci	r31, 0xFF	; 255
    27de:	91 83       	std	Z+1, r25	; 0x01
    27e0:	80 83       	st	Z, r24
	_delay_ms(2);
Lcd_vidWriteChar(res+0x30);
    27e2:	fe 01       	movw	r30, r28
    27e4:	e8 59       	subi	r30, 0x98	; 152
    27e6:	ff 4f       	sbci	r31, 0xFF	; 255
    27e8:	80 81       	ld	r24, Z
    27ea:	80 5d       	subi	r24, 0xD0	; 208
    27ec:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <Lcd_vidWriteChar>
    27f0:	fe 01       	movw	r30, r28
    27f2:	ed 5b       	subi	r30, 0xBD	; 189
    27f4:	ff 4f       	sbci	r31, 0xFF	; 255
    27f6:	80 e0       	ldi	r24, 0x00	; 0
    27f8:	90 e0       	ldi	r25, 0x00	; 0
    27fa:	a0 e0       	ldi	r26, 0x00	; 0
    27fc:	b0 e4       	ldi	r27, 0x40	; 64
    27fe:	80 83       	st	Z, r24
    2800:	91 83       	std	Z+1, r25	; 0x01
    2802:	a2 83       	std	Z+2, r26	; 0x02
    2804:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2806:	8e 01       	movw	r16, r28
    2808:	01 5c       	subi	r16, 0xC1	; 193
    280a:	1f 4f       	sbci	r17, 0xFF	; 255
    280c:	fe 01       	movw	r30, r28
    280e:	ed 5b       	subi	r30, 0xBD	; 189
    2810:	ff 4f       	sbci	r31, 0xFF	; 255
    2812:	60 81       	ld	r22, Z
    2814:	71 81       	ldd	r23, Z+1	; 0x01
    2816:	82 81       	ldd	r24, Z+2	; 0x02
    2818:	93 81       	ldd	r25, Z+3	; 0x03
    281a:	20 e0       	ldi	r18, 0x00	; 0
    281c:	30 e0       	ldi	r19, 0x00	; 0
    281e:	4a ef       	ldi	r20, 0xFA	; 250
    2820:	54 e4       	ldi	r21, 0x44	; 68
    2822:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2826:	dc 01       	movw	r26, r24
    2828:	cb 01       	movw	r24, r22
    282a:	f8 01       	movw	r30, r16
    282c:	80 83       	st	Z, r24
    282e:	91 83       	std	Z+1, r25	; 0x01
    2830:	a2 83       	std	Z+2, r26	; 0x02
    2832:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2834:	fe 01       	movw	r30, r28
    2836:	ff 96       	adiw	r30, 0x3f	; 63
    2838:	60 81       	ld	r22, Z
    283a:	71 81       	ldd	r23, Z+1	; 0x01
    283c:	82 81       	ldd	r24, Z+2	; 0x02
    283e:	93 81       	ldd	r25, Z+3	; 0x03
    2840:	20 e0       	ldi	r18, 0x00	; 0
    2842:	30 e0       	ldi	r19, 0x00	; 0
    2844:	40 e8       	ldi	r20, 0x80	; 128
    2846:	5f e3       	ldi	r21, 0x3F	; 63
    2848:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    284c:	88 23       	and	r24, r24
    284e:	2c f4       	brge	.+10     	; 0x285a <main+0x816>
		__ticks = 1;
    2850:	81 e0       	ldi	r24, 0x01	; 1
    2852:	90 e0       	ldi	r25, 0x00	; 0
    2854:	9e af       	std	Y+62, r25	; 0x3e
    2856:	8d af       	std	Y+61, r24	; 0x3d
    2858:	46 c0       	rjmp	.+140    	; 0x28e6 <main+0x8a2>
	else if (__tmp > 65535)
    285a:	fe 01       	movw	r30, r28
    285c:	ff 96       	adiw	r30, 0x3f	; 63
    285e:	60 81       	ld	r22, Z
    2860:	71 81       	ldd	r23, Z+1	; 0x01
    2862:	82 81       	ldd	r24, Z+2	; 0x02
    2864:	93 81       	ldd	r25, Z+3	; 0x03
    2866:	20 e0       	ldi	r18, 0x00	; 0
    2868:	3f ef       	ldi	r19, 0xFF	; 255
    286a:	4f e7       	ldi	r20, 0x7F	; 127
    286c:	57 e4       	ldi	r21, 0x47	; 71
    286e:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    2872:	18 16       	cp	r1, r24
    2874:	64 f5       	brge	.+88     	; 0x28ce <main+0x88a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2876:	fe 01       	movw	r30, r28
    2878:	ed 5b       	subi	r30, 0xBD	; 189
    287a:	ff 4f       	sbci	r31, 0xFF	; 255
    287c:	60 81       	ld	r22, Z
    287e:	71 81       	ldd	r23, Z+1	; 0x01
    2880:	82 81       	ldd	r24, Z+2	; 0x02
    2882:	93 81       	ldd	r25, Z+3	; 0x03
    2884:	20 e0       	ldi	r18, 0x00	; 0
    2886:	30 e0       	ldi	r19, 0x00	; 0
    2888:	40 e2       	ldi	r20, 0x20	; 32
    288a:	51 e4       	ldi	r21, 0x41	; 65
    288c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2890:	dc 01       	movw	r26, r24
    2892:	cb 01       	movw	r24, r22
    2894:	bc 01       	movw	r22, r24
    2896:	cd 01       	movw	r24, r26
    2898:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    289c:	dc 01       	movw	r26, r24
    289e:	cb 01       	movw	r24, r22
    28a0:	9e af       	std	Y+62, r25	; 0x3e
    28a2:	8d af       	std	Y+61, r24	; 0x3d
    28a4:	0f c0       	rjmp	.+30     	; 0x28c4 <main+0x880>
    28a6:	88 ec       	ldi	r24, 0xC8	; 200
    28a8:	90 e0       	ldi	r25, 0x00	; 0
    28aa:	9c af       	std	Y+60, r25	; 0x3c
    28ac:	8b af       	std	Y+59, r24	; 0x3b
    28ae:	8b ad       	ldd	r24, Y+59	; 0x3b
    28b0:	9c ad       	ldd	r25, Y+60	; 0x3c
    28b2:	01 97       	sbiw	r24, 0x01	; 1
    28b4:	f1 f7       	brne	.-4      	; 0x28b2 <main+0x86e>
    28b6:	9c af       	std	Y+60, r25	; 0x3c
    28b8:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28ba:	8d ad       	ldd	r24, Y+61	; 0x3d
    28bc:	9e ad       	ldd	r25, Y+62	; 0x3e
    28be:	01 97       	sbiw	r24, 0x01	; 1
    28c0:	9e af       	std	Y+62, r25	; 0x3e
    28c2:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28c4:	8d ad       	ldd	r24, Y+61	; 0x3d
    28c6:	9e ad       	ldd	r25, Y+62	; 0x3e
    28c8:	00 97       	sbiw	r24, 0x00	; 0
    28ca:	69 f7       	brne	.-38     	; 0x28a6 <main+0x862>
    28cc:	16 c0       	rjmp	.+44     	; 0x28fa <main+0x8b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    28ce:	fe 01       	movw	r30, r28
    28d0:	ff 96       	adiw	r30, 0x3f	; 63
    28d2:	60 81       	ld	r22, Z
    28d4:	71 81       	ldd	r23, Z+1	; 0x01
    28d6:	82 81       	ldd	r24, Z+2	; 0x02
    28d8:	93 81       	ldd	r25, Z+3	; 0x03
    28da:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28de:	dc 01       	movw	r26, r24
    28e0:	cb 01       	movw	r24, r22
    28e2:	9e af       	std	Y+62, r25	; 0x3e
    28e4:	8d af       	std	Y+61, r24	; 0x3d
    28e6:	8d ad       	ldd	r24, Y+61	; 0x3d
    28e8:	9e ad       	ldd	r25, Y+62	; 0x3e
    28ea:	9a af       	std	Y+58, r25	; 0x3a
    28ec:	89 af       	std	Y+57, r24	; 0x39
    28ee:	89 ad       	ldd	r24, Y+57	; 0x39
    28f0:	9a ad       	ldd	r25, Y+58	; 0x3a
    28f2:	01 97       	sbiw	r24, 0x01	; 1
    28f4:	f1 f7       	brne	.-4      	; 0x28f2 <main+0x8ae>
    28f6:	9a af       	std	Y+58, r25	; 0x3a
    28f8:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(2);
Lcd_vidWriteChar('.');
    28fa:	8e e2       	ldi	r24, 0x2E	; 46
    28fc:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <Lcd_vidWriteChar>
    2900:	80 e0       	ldi	r24, 0x00	; 0
    2902:	90 e0       	ldi	r25, 0x00	; 0
    2904:	a0 e0       	ldi	r26, 0x00	; 0
    2906:	b0 e4       	ldi	r27, 0x40	; 64
    2908:	8d ab       	std	Y+53, r24	; 0x35
    290a:	9e ab       	std	Y+54, r25	; 0x36
    290c:	af ab       	std	Y+55, r26	; 0x37
    290e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2910:	6d a9       	ldd	r22, Y+53	; 0x35
    2912:	7e a9       	ldd	r23, Y+54	; 0x36
    2914:	8f a9       	ldd	r24, Y+55	; 0x37
    2916:	98 ad       	ldd	r25, Y+56	; 0x38
    2918:	20 e0       	ldi	r18, 0x00	; 0
    291a:	30 e0       	ldi	r19, 0x00	; 0
    291c:	4a ef       	ldi	r20, 0xFA	; 250
    291e:	54 e4       	ldi	r21, 0x44	; 68
    2920:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2924:	dc 01       	movw	r26, r24
    2926:	cb 01       	movw	r24, r22
    2928:	89 ab       	std	Y+49, r24	; 0x31
    292a:	9a ab       	std	Y+50, r25	; 0x32
    292c:	ab ab       	std	Y+51, r26	; 0x33
    292e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2930:	69 a9       	ldd	r22, Y+49	; 0x31
    2932:	7a a9       	ldd	r23, Y+50	; 0x32
    2934:	8b a9       	ldd	r24, Y+51	; 0x33
    2936:	9c a9       	ldd	r25, Y+52	; 0x34
    2938:	20 e0       	ldi	r18, 0x00	; 0
    293a:	30 e0       	ldi	r19, 0x00	; 0
    293c:	40 e8       	ldi	r20, 0x80	; 128
    293e:	5f e3       	ldi	r21, 0x3F	; 63
    2940:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    2944:	88 23       	and	r24, r24
    2946:	2c f4       	brge	.+10     	; 0x2952 <main+0x90e>
		__ticks = 1;
    2948:	81 e0       	ldi	r24, 0x01	; 1
    294a:	90 e0       	ldi	r25, 0x00	; 0
    294c:	98 ab       	std	Y+48, r25	; 0x30
    294e:	8f a7       	std	Y+47, r24	; 0x2f
    2950:	3f c0       	rjmp	.+126    	; 0x29d0 <main+0x98c>
	else if (__tmp > 65535)
    2952:	69 a9       	ldd	r22, Y+49	; 0x31
    2954:	7a a9       	ldd	r23, Y+50	; 0x32
    2956:	8b a9       	ldd	r24, Y+51	; 0x33
    2958:	9c a9       	ldd	r25, Y+52	; 0x34
    295a:	20 e0       	ldi	r18, 0x00	; 0
    295c:	3f ef       	ldi	r19, 0xFF	; 255
    295e:	4f e7       	ldi	r20, 0x7F	; 127
    2960:	57 e4       	ldi	r21, 0x47	; 71
    2962:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    2966:	18 16       	cp	r1, r24
    2968:	4c f5       	brge	.+82     	; 0x29bc <main+0x978>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    296a:	6d a9       	ldd	r22, Y+53	; 0x35
    296c:	7e a9       	ldd	r23, Y+54	; 0x36
    296e:	8f a9       	ldd	r24, Y+55	; 0x37
    2970:	98 ad       	ldd	r25, Y+56	; 0x38
    2972:	20 e0       	ldi	r18, 0x00	; 0
    2974:	30 e0       	ldi	r19, 0x00	; 0
    2976:	40 e2       	ldi	r20, 0x20	; 32
    2978:	51 e4       	ldi	r21, 0x41	; 65
    297a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    297e:	dc 01       	movw	r26, r24
    2980:	cb 01       	movw	r24, r22
    2982:	bc 01       	movw	r22, r24
    2984:	cd 01       	movw	r24, r26
    2986:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    298a:	dc 01       	movw	r26, r24
    298c:	cb 01       	movw	r24, r22
    298e:	98 ab       	std	Y+48, r25	; 0x30
    2990:	8f a7       	std	Y+47, r24	; 0x2f
    2992:	0f c0       	rjmp	.+30     	; 0x29b2 <main+0x96e>
    2994:	88 ec       	ldi	r24, 0xC8	; 200
    2996:	90 e0       	ldi	r25, 0x00	; 0
    2998:	9e a7       	std	Y+46, r25	; 0x2e
    299a:	8d a7       	std	Y+45, r24	; 0x2d
    299c:	8d a5       	ldd	r24, Y+45	; 0x2d
    299e:	9e a5       	ldd	r25, Y+46	; 0x2e
    29a0:	01 97       	sbiw	r24, 0x01	; 1
    29a2:	f1 f7       	brne	.-4      	; 0x29a0 <main+0x95c>
    29a4:	9e a7       	std	Y+46, r25	; 0x2e
    29a6:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29a8:	8f a5       	ldd	r24, Y+47	; 0x2f
    29aa:	98 a9       	ldd	r25, Y+48	; 0x30
    29ac:	01 97       	sbiw	r24, 0x01	; 1
    29ae:	98 ab       	std	Y+48, r25	; 0x30
    29b0:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    29b2:	8f a5       	ldd	r24, Y+47	; 0x2f
    29b4:	98 a9       	ldd	r25, Y+48	; 0x30
    29b6:	00 97       	sbiw	r24, 0x00	; 0
    29b8:	69 f7       	brne	.-38     	; 0x2994 <main+0x950>
    29ba:	14 c0       	rjmp	.+40     	; 0x29e4 <main+0x9a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    29bc:	69 a9       	ldd	r22, Y+49	; 0x31
    29be:	7a a9       	ldd	r23, Y+50	; 0x32
    29c0:	8b a9       	ldd	r24, Y+51	; 0x33
    29c2:	9c a9       	ldd	r25, Y+52	; 0x34
    29c4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29c8:	dc 01       	movw	r26, r24
    29ca:	cb 01       	movw	r24, r22
    29cc:	98 ab       	std	Y+48, r25	; 0x30
    29ce:	8f a7       	std	Y+47, r24	; 0x2f
    29d0:	8f a5       	ldd	r24, Y+47	; 0x2f
    29d2:	98 a9       	ldd	r25, Y+48	; 0x30
    29d4:	9c a7       	std	Y+44, r25	; 0x2c
    29d6:	8b a7       	std	Y+43, r24	; 0x2b
    29d8:	8b a5       	ldd	r24, Y+43	; 0x2b
    29da:	9c a5       	ldd	r25, Y+44	; 0x2c
    29dc:	01 97       	sbiw	r24, 0x01	; 1
    29de:	f1 f7       	brne	.-4      	; 0x29dc <main+0x998>
    29e0:	9c a7       	std	Y+44, r25	; 0x2c
    29e2:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(2);
Lcd_vidWriteChar(z+0x30);
    29e4:	fe 01       	movw	r30, r28
    29e6:	ed 59       	subi	r30, 0x9D	; 157
    29e8:	ff 4f       	sbci	r31, 0xFF	; 255
    29ea:	60 81       	ld	r22, Z
    29ec:	71 81       	ldd	r23, Z+1	; 0x01
    29ee:	82 81       	ldd	r24, Z+2	; 0x02
    29f0:	93 81       	ldd	r25, Z+3	; 0x03
    29f2:	20 e0       	ldi	r18, 0x00	; 0
    29f4:	30 e0       	ldi	r19, 0x00	; 0
    29f6:	40 e4       	ldi	r20, 0x40	; 64
    29f8:	52 e4       	ldi	r21, 0x42	; 66
    29fa:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <__addsf3>
    29fe:	dc 01       	movw	r26, r24
    2a00:	cb 01       	movw	r24, r22
    2a02:	bc 01       	movw	r22, r24
    2a04:	cd 01       	movw	r24, r26
    2a06:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a0a:	dc 01       	movw	r26, r24
    2a0c:	cb 01       	movw	r24, r22
    2a0e:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <Lcd_vidWriteChar>
    2a12:	80 e0       	ldi	r24, 0x00	; 0
    2a14:	90 e0       	ldi	r25, 0x00	; 0
    2a16:	a0 e0       	ldi	r26, 0x00	; 0
    2a18:	b0 e4       	ldi	r27, 0x40	; 64
    2a1a:	8f a3       	std	Y+39, r24	; 0x27
    2a1c:	98 a7       	std	Y+40, r25	; 0x28
    2a1e:	a9 a7       	std	Y+41, r26	; 0x29
    2a20:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a22:	6f a1       	ldd	r22, Y+39	; 0x27
    2a24:	78 a5       	ldd	r23, Y+40	; 0x28
    2a26:	89 a5       	ldd	r24, Y+41	; 0x29
    2a28:	9a a5       	ldd	r25, Y+42	; 0x2a
    2a2a:	20 e0       	ldi	r18, 0x00	; 0
    2a2c:	30 e0       	ldi	r19, 0x00	; 0
    2a2e:	4a ef       	ldi	r20, 0xFA	; 250
    2a30:	54 e4       	ldi	r21, 0x44	; 68
    2a32:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a36:	dc 01       	movw	r26, r24
    2a38:	cb 01       	movw	r24, r22
    2a3a:	8b a3       	std	Y+35, r24	; 0x23
    2a3c:	9c a3       	std	Y+36, r25	; 0x24
    2a3e:	ad a3       	std	Y+37, r26	; 0x25
    2a40:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2a42:	6b a1       	ldd	r22, Y+35	; 0x23
    2a44:	7c a1       	ldd	r23, Y+36	; 0x24
    2a46:	8d a1       	ldd	r24, Y+37	; 0x25
    2a48:	9e a1       	ldd	r25, Y+38	; 0x26
    2a4a:	20 e0       	ldi	r18, 0x00	; 0
    2a4c:	30 e0       	ldi	r19, 0x00	; 0
    2a4e:	40 e8       	ldi	r20, 0x80	; 128
    2a50:	5f e3       	ldi	r21, 0x3F	; 63
    2a52:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    2a56:	88 23       	and	r24, r24
    2a58:	2c f4       	brge	.+10     	; 0x2a64 <main+0xa20>
		__ticks = 1;
    2a5a:	81 e0       	ldi	r24, 0x01	; 1
    2a5c:	90 e0       	ldi	r25, 0x00	; 0
    2a5e:	9a a3       	std	Y+34, r25	; 0x22
    2a60:	89 a3       	std	Y+33, r24	; 0x21
    2a62:	3f c0       	rjmp	.+126    	; 0x2ae2 <main+0xa9e>
	else if (__tmp > 65535)
    2a64:	6b a1       	ldd	r22, Y+35	; 0x23
    2a66:	7c a1       	ldd	r23, Y+36	; 0x24
    2a68:	8d a1       	ldd	r24, Y+37	; 0x25
    2a6a:	9e a1       	ldd	r25, Y+38	; 0x26
    2a6c:	20 e0       	ldi	r18, 0x00	; 0
    2a6e:	3f ef       	ldi	r19, 0xFF	; 255
    2a70:	4f e7       	ldi	r20, 0x7F	; 127
    2a72:	57 e4       	ldi	r21, 0x47	; 71
    2a74:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    2a78:	18 16       	cp	r1, r24
    2a7a:	4c f5       	brge	.+82     	; 0x2ace <main+0xa8a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a7c:	6f a1       	ldd	r22, Y+39	; 0x27
    2a7e:	78 a5       	ldd	r23, Y+40	; 0x28
    2a80:	89 a5       	ldd	r24, Y+41	; 0x29
    2a82:	9a a5       	ldd	r25, Y+42	; 0x2a
    2a84:	20 e0       	ldi	r18, 0x00	; 0
    2a86:	30 e0       	ldi	r19, 0x00	; 0
    2a88:	40 e2       	ldi	r20, 0x20	; 32
    2a8a:	51 e4       	ldi	r21, 0x41	; 65
    2a8c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a90:	dc 01       	movw	r26, r24
    2a92:	cb 01       	movw	r24, r22
    2a94:	bc 01       	movw	r22, r24
    2a96:	cd 01       	movw	r24, r26
    2a98:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a9c:	dc 01       	movw	r26, r24
    2a9e:	cb 01       	movw	r24, r22
    2aa0:	9a a3       	std	Y+34, r25	; 0x22
    2aa2:	89 a3       	std	Y+33, r24	; 0x21
    2aa4:	0f c0       	rjmp	.+30     	; 0x2ac4 <main+0xa80>
    2aa6:	88 ec       	ldi	r24, 0xC8	; 200
    2aa8:	90 e0       	ldi	r25, 0x00	; 0
    2aaa:	98 a3       	std	Y+32, r25	; 0x20
    2aac:	8f 8f       	std	Y+31, r24	; 0x1f
    2aae:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2ab0:	98 a1       	ldd	r25, Y+32	; 0x20
    2ab2:	01 97       	sbiw	r24, 0x01	; 1
    2ab4:	f1 f7       	brne	.-4      	; 0x2ab2 <main+0xa6e>
    2ab6:	98 a3       	std	Y+32, r25	; 0x20
    2ab8:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2aba:	89 a1       	ldd	r24, Y+33	; 0x21
    2abc:	9a a1       	ldd	r25, Y+34	; 0x22
    2abe:	01 97       	sbiw	r24, 0x01	; 1
    2ac0:	9a a3       	std	Y+34, r25	; 0x22
    2ac2:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ac4:	89 a1       	ldd	r24, Y+33	; 0x21
    2ac6:	9a a1       	ldd	r25, Y+34	; 0x22
    2ac8:	00 97       	sbiw	r24, 0x00	; 0
    2aca:	69 f7       	brne	.-38     	; 0x2aa6 <main+0xa62>
    2acc:	14 c0       	rjmp	.+40     	; 0x2af6 <main+0xab2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ace:	6b a1       	ldd	r22, Y+35	; 0x23
    2ad0:	7c a1       	ldd	r23, Y+36	; 0x24
    2ad2:	8d a1       	ldd	r24, Y+37	; 0x25
    2ad4:	9e a1       	ldd	r25, Y+38	; 0x26
    2ad6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ada:	dc 01       	movw	r26, r24
    2adc:	cb 01       	movw	r24, r22
    2ade:	9a a3       	std	Y+34, r25	; 0x22
    2ae0:	89 a3       	std	Y+33, r24	; 0x21
    2ae2:	89 a1       	ldd	r24, Y+33	; 0x21
    2ae4:	9a a1       	ldd	r25, Y+34	; 0x22
    2ae6:	9e 8f       	std	Y+30, r25	; 0x1e
    2ae8:	8d 8f       	std	Y+29, r24	; 0x1d
    2aea:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2aec:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2aee:	01 97       	sbiw	r24, 0x01	; 1
    2af0:	f1 f7       	brne	.-4      	; 0x2aee <main+0xaaa>
    2af2:	9e 8f       	std	Y+30, r25	; 0x1e
    2af4:	8d 8f       	std	Y+29, r24	; 0x1d
    2af6:	80 e0       	ldi	r24, 0x00	; 0
    2af8:	90 e0       	ldi	r25, 0x00	; 0
    2afa:	aa ef       	ldi	r26, 0xFA	; 250
    2afc:	b4 e4       	ldi	r27, 0x44	; 68
    2afe:	89 8f       	std	Y+25, r24	; 0x19
    2b00:	9a 8f       	std	Y+26, r25	; 0x1a
    2b02:	ab 8f       	std	Y+27, r26	; 0x1b
    2b04:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b06:	69 8d       	ldd	r22, Y+25	; 0x19
    2b08:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2b0a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2b0c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2b0e:	20 e0       	ldi	r18, 0x00	; 0
    2b10:	30 e0       	ldi	r19, 0x00	; 0
    2b12:	4a ef       	ldi	r20, 0xFA	; 250
    2b14:	54 e4       	ldi	r21, 0x44	; 68
    2b16:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b1a:	dc 01       	movw	r26, r24
    2b1c:	cb 01       	movw	r24, r22
    2b1e:	8d 8b       	std	Y+21, r24	; 0x15
    2b20:	9e 8b       	std	Y+22, r25	; 0x16
    2b22:	af 8b       	std	Y+23, r26	; 0x17
    2b24:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2b26:	6d 89       	ldd	r22, Y+21	; 0x15
    2b28:	7e 89       	ldd	r23, Y+22	; 0x16
    2b2a:	8f 89       	ldd	r24, Y+23	; 0x17
    2b2c:	98 8d       	ldd	r25, Y+24	; 0x18
    2b2e:	20 e0       	ldi	r18, 0x00	; 0
    2b30:	30 e0       	ldi	r19, 0x00	; 0
    2b32:	40 e8       	ldi	r20, 0x80	; 128
    2b34:	5f e3       	ldi	r21, 0x3F	; 63
    2b36:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    2b3a:	88 23       	and	r24, r24
    2b3c:	2c f4       	brge	.+10     	; 0x2b48 <main+0xb04>
		__ticks = 1;
    2b3e:	81 e0       	ldi	r24, 0x01	; 1
    2b40:	90 e0       	ldi	r25, 0x00	; 0
    2b42:	9c 8b       	std	Y+20, r25	; 0x14
    2b44:	8b 8b       	std	Y+19, r24	; 0x13
    2b46:	3f c0       	rjmp	.+126    	; 0x2bc6 <main+0xb82>
	else if (__tmp > 65535)
    2b48:	6d 89       	ldd	r22, Y+21	; 0x15
    2b4a:	7e 89       	ldd	r23, Y+22	; 0x16
    2b4c:	8f 89       	ldd	r24, Y+23	; 0x17
    2b4e:	98 8d       	ldd	r25, Y+24	; 0x18
    2b50:	20 e0       	ldi	r18, 0x00	; 0
    2b52:	3f ef       	ldi	r19, 0xFF	; 255
    2b54:	4f e7       	ldi	r20, 0x7F	; 127
    2b56:	57 e4       	ldi	r21, 0x47	; 71
    2b58:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    2b5c:	18 16       	cp	r1, r24
    2b5e:	4c f5       	brge	.+82     	; 0x2bb2 <main+0xb6e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b60:	69 8d       	ldd	r22, Y+25	; 0x19
    2b62:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2b64:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2b66:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2b68:	20 e0       	ldi	r18, 0x00	; 0
    2b6a:	30 e0       	ldi	r19, 0x00	; 0
    2b6c:	40 e2       	ldi	r20, 0x20	; 32
    2b6e:	51 e4       	ldi	r21, 0x41	; 65
    2b70:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b74:	dc 01       	movw	r26, r24
    2b76:	cb 01       	movw	r24, r22
    2b78:	bc 01       	movw	r22, r24
    2b7a:	cd 01       	movw	r24, r26
    2b7c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b80:	dc 01       	movw	r26, r24
    2b82:	cb 01       	movw	r24, r22
    2b84:	9c 8b       	std	Y+20, r25	; 0x14
    2b86:	8b 8b       	std	Y+19, r24	; 0x13
    2b88:	0f c0       	rjmp	.+30     	; 0x2ba8 <main+0xb64>
    2b8a:	88 ec       	ldi	r24, 0xC8	; 200
    2b8c:	90 e0       	ldi	r25, 0x00	; 0
    2b8e:	9a 8b       	std	Y+18, r25	; 0x12
    2b90:	89 8b       	std	Y+17, r24	; 0x11
    2b92:	89 89       	ldd	r24, Y+17	; 0x11
    2b94:	9a 89       	ldd	r25, Y+18	; 0x12
    2b96:	01 97       	sbiw	r24, 0x01	; 1
    2b98:	f1 f7       	brne	.-4      	; 0x2b96 <main+0xb52>
    2b9a:	9a 8b       	std	Y+18, r25	; 0x12
    2b9c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b9e:	8b 89       	ldd	r24, Y+19	; 0x13
    2ba0:	9c 89       	ldd	r25, Y+20	; 0x14
    2ba2:	01 97       	sbiw	r24, 0x01	; 1
    2ba4:	9c 8b       	std	Y+20, r25	; 0x14
    2ba6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ba8:	8b 89       	ldd	r24, Y+19	; 0x13
    2baa:	9c 89       	ldd	r25, Y+20	; 0x14
    2bac:	00 97       	sbiw	r24, 0x00	; 0
    2bae:	69 f7       	brne	.-38     	; 0x2b8a <main+0xb46>
    2bb0:	14 c0       	rjmp	.+40     	; 0x2bda <main+0xb96>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2bb2:	6d 89       	ldd	r22, Y+21	; 0x15
    2bb4:	7e 89       	ldd	r23, Y+22	; 0x16
    2bb6:	8f 89       	ldd	r24, Y+23	; 0x17
    2bb8:	98 8d       	ldd	r25, Y+24	; 0x18
    2bba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bbe:	dc 01       	movw	r26, r24
    2bc0:	cb 01       	movw	r24, r22
    2bc2:	9c 8b       	std	Y+20, r25	; 0x14
    2bc4:	8b 8b       	std	Y+19, r24	; 0x13
    2bc6:	8b 89       	ldd	r24, Y+19	; 0x13
    2bc8:	9c 89       	ldd	r25, Y+20	; 0x14
    2bca:	98 8b       	std	Y+16, r25	; 0x10
    2bcc:	8f 87       	std	Y+15, r24	; 0x0f
    2bce:	8f 85       	ldd	r24, Y+15	; 0x0f
    2bd0:	98 89       	ldd	r25, Y+16	; 0x10
    2bd2:	01 97       	sbiw	r24, 0x01	; 1
    2bd4:	f1 f7       	brne	.-4      	; 0x2bd2 <main+0xb8e>
    2bd6:	98 8b       	std	Y+16, r25	; 0x10
    2bd8:	8f 87       	std	Y+15, r24	; 0x0f
			_delay_ms(2);
_delay_ms(2000);
 Lcd_vidSendCommand(0x01);
    2bda:	81 e0       	ldi	r24, 0x01	; 1
    2bdc:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <Lcd_vidSendCommand>
    2be0:	80 e0       	ldi	r24, 0x00	; 0
    2be2:	90 e0       	ldi	r25, 0x00	; 0
    2be4:	aa e7       	ldi	r26, 0x7A	; 122
    2be6:	b4 e4       	ldi	r27, 0x44	; 68
    2be8:	8b 87       	std	Y+11, r24	; 0x0b
    2bea:	9c 87       	std	Y+12, r25	; 0x0c
    2bec:	ad 87       	std	Y+13, r26	; 0x0d
    2bee:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2bf0:	6b 85       	ldd	r22, Y+11	; 0x0b
    2bf2:	7c 85       	ldd	r23, Y+12	; 0x0c
    2bf4:	8d 85       	ldd	r24, Y+13	; 0x0d
    2bf6:	9e 85       	ldd	r25, Y+14	; 0x0e
    2bf8:	20 e0       	ldi	r18, 0x00	; 0
    2bfa:	30 e0       	ldi	r19, 0x00	; 0
    2bfc:	4a ef       	ldi	r20, 0xFA	; 250
    2bfe:	54 e4       	ldi	r21, 0x44	; 68
    2c00:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c04:	dc 01       	movw	r26, r24
    2c06:	cb 01       	movw	r24, r22
    2c08:	8f 83       	std	Y+7, r24	; 0x07
    2c0a:	98 87       	std	Y+8, r25	; 0x08
    2c0c:	a9 87       	std	Y+9, r26	; 0x09
    2c0e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2c10:	6f 81       	ldd	r22, Y+7	; 0x07
    2c12:	78 85       	ldd	r23, Y+8	; 0x08
    2c14:	89 85       	ldd	r24, Y+9	; 0x09
    2c16:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c18:	20 e0       	ldi	r18, 0x00	; 0
    2c1a:	30 e0       	ldi	r19, 0x00	; 0
    2c1c:	40 e8       	ldi	r20, 0x80	; 128
    2c1e:	5f e3       	ldi	r21, 0x3F	; 63
    2c20:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    2c24:	88 23       	and	r24, r24
    2c26:	2c f4       	brge	.+10     	; 0x2c32 <main+0xbee>
		__ticks = 1;
    2c28:	81 e0       	ldi	r24, 0x01	; 1
    2c2a:	90 e0       	ldi	r25, 0x00	; 0
    2c2c:	9e 83       	std	Y+6, r25	; 0x06
    2c2e:	8d 83       	std	Y+5, r24	; 0x05
    2c30:	3f c0       	rjmp	.+126    	; 0x2cb0 <main+0xc6c>
	else if (__tmp > 65535)
    2c32:	6f 81       	ldd	r22, Y+7	; 0x07
    2c34:	78 85       	ldd	r23, Y+8	; 0x08
    2c36:	89 85       	ldd	r24, Y+9	; 0x09
    2c38:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c3a:	20 e0       	ldi	r18, 0x00	; 0
    2c3c:	3f ef       	ldi	r19, 0xFF	; 255
    2c3e:	4f e7       	ldi	r20, 0x7F	; 127
    2c40:	57 e4       	ldi	r21, 0x47	; 71
    2c42:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    2c46:	18 16       	cp	r1, r24
    2c48:	4c f5       	brge	.+82     	; 0x2c9c <main+0xc58>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c4a:	6b 85       	ldd	r22, Y+11	; 0x0b
    2c4c:	7c 85       	ldd	r23, Y+12	; 0x0c
    2c4e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c50:	9e 85       	ldd	r25, Y+14	; 0x0e
    2c52:	20 e0       	ldi	r18, 0x00	; 0
    2c54:	30 e0       	ldi	r19, 0x00	; 0
    2c56:	40 e2       	ldi	r20, 0x20	; 32
    2c58:	51 e4       	ldi	r21, 0x41	; 65
    2c5a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c5e:	dc 01       	movw	r26, r24
    2c60:	cb 01       	movw	r24, r22
    2c62:	bc 01       	movw	r22, r24
    2c64:	cd 01       	movw	r24, r26
    2c66:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c6a:	dc 01       	movw	r26, r24
    2c6c:	cb 01       	movw	r24, r22
    2c6e:	9e 83       	std	Y+6, r25	; 0x06
    2c70:	8d 83       	std	Y+5, r24	; 0x05
    2c72:	0f c0       	rjmp	.+30     	; 0x2c92 <main+0xc4e>
    2c74:	88 ec       	ldi	r24, 0xC8	; 200
    2c76:	90 e0       	ldi	r25, 0x00	; 0
    2c78:	9c 83       	std	Y+4, r25	; 0x04
    2c7a:	8b 83       	std	Y+3, r24	; 0x03
    2c7c:	8b 81       	ldd	r24, Y+3	; 0x03
    2c7e:	9c 81       	ldd	r25, Y+4	; 0x04
    2c80:	01 97       	sbiw	r24, 0x01	; 1
    2c82:	f1 f7       	brne	.-4      	; 0x2c80 <main+0xc3c>
    2c84:	9c 83       	std	Y+4, r25	; 0x04
    2c86:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c88:	8d 81       	ldd	r24, Y+5	; 0x05
    2c8a:	9e 81       	ldd	r25, Y+6	; 0x06
    2c8c:	01 97       	sbiw	r24, 0x01	; 1
    2c8e:	9e 83       	std	Y+6, r25	; 0x06
    2c90:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c92:	8d 81       	ldd	r24, Y+5	; 0x05
    2c94:	9e 81       	ldd	r25, Y+6	; 0x06
    2c96:	00 97       	sbiw	r24, 0x00	; 0
    2c98:	69 f7       	brne	.-38     	; 0x2c74 <main+0xc30>
    2c9a:	8f ca       	rjmp	.-2786   	; 0x21ba <main+0x176>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c9c:	6f 81       	ldd	r22, Y+7	; 0x07
    2c9e:	78 85       	ldd	r23, Y+8	; 0x08
    2ca0:	89 85       	ldd	r24, Y+9	; 0x09
    2ca2:	9a 85       	ldd	r25, Y+10	; 0x0a
    2ca4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ca8:	dc 01       	movw	r26, r24
    2caa:	cb 01       	movw	r24, r22
    2cac:	9e 83       	std	Y+6, r25	; 0x06
    2cae:	8d 83       	std	Y+5, r24	; 0x05
    2cb0:	8d 81       	ldd	r24, Y+5	; 0x05
    2cb2:	9e 81       	ldd	r25, Y+6	; 0x06
    2cb4:	9a 83       	std	Y+2, r25	; 0x02
    2cb6:	89 83       	std	Y+1, r24	; 0x01
    2cb8:	89 81       	ldd	r24, Y+1	; 0x01
    2cba:	9a 81       	ldd	r25, Y+2	; 0x02
    2cbc:	01 97       	sbiw	r24, 0x01	; 1
    2cbe:	f1 f7       	brne	.-4      	; 0x2cbc <main+0xc78>
    2cc0:	9a 83       	std	Y+2, r25	; 0x02
    2cc2:	89 83       	std	Y+1, r24	; 0x01
    2cc4:	7a ca       	rjmp	.-2828   	; 0x21ba <main+0x176>

00002cc6 <__prologue_saves__>:
    2cc6:	2f 92       	push	r2
    2cc8:	3f 92       	push	r3
    2cca:	4f 92       	push	r4
    2ccc:	5f 92       	push	r5
    2cce:	6f 92       	push	r6
    2cd0:	7f 92       	push	r7
    2cd2:	8f 92       	push	r8
    2cd4:	9f 92       	push	r9
    2cd6:	af 92       	push	r10
    2cd8:	bf 92       	push	r11
    2cda:	cf 92       	push	r12
    2cdc:	df 92       	push	r13
    2cde:	ef 92       	push	r14
    2ce0:	ff 92       	push	r15
    2ce2:	0f 93       	push	r16
    2ce4:	1f 93       	push	r17
    2ce6:	cf 93       	push	r28
    2ce8:	df 93       	push	r29
    2cea:	cd b7       	in	r28, 0x3d	; 61
    2cec:	de b7       	in	r29, 0x3e	; 62
    2cee:	ca 1b       	sub	r28, r26
    2cf0:	db 0b       	sbc	r29, r27
    2cf2:	0f b6       	in	r0, 0x3f	; 63
    2cf4:	f8 94       	cli
    2cf6:	de bf       	out	0x3e, r29	; 62
    2cf8:	0f be       	out	0x3f, r0	; 63
    2cfa:	cd bf       	out	0x3d, r28	; 61
    2cfc:	09 94       	ijmp

00002cfe <__epilogue_restores__>:
    2cfe:	2a 88       	ldd	r2, Y+18	; 0x12
    2d00:	39 88       	ldd	r3, Y+17	; 0x11
    2d02:	48 88       	ldd	r4, Y+16	; 0x10
    2d04:	5f 84       	ldd	r5, Y+15	; 0x0f
    2d06:	6e 84       	ldd	r6, Y+14	; 0x0e
    2d08:	7d 84       	ldd	r7, Y+13	; 0x0d
    2d0a:	8c 84       	ldd	r8, Y+12	; 0x0c
    2d0c:	9b 84       	ldd	r9, Y+11	; 0x0b
    2d0e:	aa 84       	ldd	r10, Y+10	; 0x0a
    2d10:	b9 84       	ldd	r11, Y+9	; 0x09
    2d12:	c8 84       	ldd	r12, Y+8	; 0x08
    2d14:	df 80       	ldd	r13, Y+7	; 0x07
    2d16:	ee 80       	ldd	r14, Y+6	; 0x06
    2d18:	fd 80       	ldd	r15, Y+5	; 0x05
    2d1a:	0c 81       	ldd	r16, Y+4	; 0x04
    2d1c:	1b 81       	ldd	r17, Y+3	; 0x03
    2d1e:	aa 81       	ldd	r26, Y+2	; 0x02
    2d20:	b9 81       	ldd	r27, Y+1	; 0x01
    2d22:	ce 0f       	add	r28, r30
    2d24:	d1 1d       	adc	r29, r1
    2d26:	0f b6       	in	r0, 0x3f	; 63
    2d28:	f8 94       	cli
    2d2a:	de bf       	out	0x3e, r29	; 62
    2d2c:	0f be       	out	0x3f, r0	; 63
    2d2e:	cd bf       	out	0x3d, r28	; 61
    2d30:	ed 01       	movw	r28, r26
    2d32:	08 95       	ret

00002d34 <_exit>:
    2d34:	f8 94       	cli

00002d36 <__stop_program>:
    2d36:	ff cf       	rjmp	.-2      	; 0x2d36 <__stop_program>

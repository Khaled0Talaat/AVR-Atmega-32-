Archive member included because of file (symbol)

e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodqi4.o)
                              ./main.o (__udivmodqi4)
e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./ADC_prg.o
LOAD ./Dio_prg.o
LOAD ./Interrupt_prg.o
LOAD ./Seg_prg.o
LOAD ./main.o
LOAD e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xefa
 *(.vectors)
 .vectors       0x00000000       0x54 e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000060        0x8 e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000068        0x4 e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000068                __vector_12
                0x00000068                __bad_interrupt
                0x00000068                __vector_6
                0x00000068                __vector_3
                0x00000068                __vector_11
                0x00000068                __vector_13
                0x00000068                __vector_17
                0x00000068                __vector_19
                0x00000068                __vector_7
                0x00000068                __vector_5
                0x00000068                __vector_4
                0x00000068                __vector_9
                0x00000068                __vector_2
                0x00000068                __vector_15
                0x00000068                __vector_8
                0x00000068                __vector_14
                0x00000068                __vector_10
                0x00000068                __vector_16
                0x00000068                __vector_18
                0x00000068                __vector_20
 .text          0x0000006c        0x0 ./ADC_prg.o
 .text          0x0000006c        0x0 ./Dio_prg.o
 .text          0x0000006c        0x0 ./Interrupt_prg.o
 .text          0x0000006c        0x0 ./Seg_prg.o
 .text          0x0000006c        0x0 ./main.o
 .text          0x0000006c        0x0 e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodqi4.o)
 .text          0x0000006c        0x0 e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x0000006c                . = ALIGN (0x2)
 *(.text.*)
 .text.Adc_vidInit
                0x0000006c       0xb6 ./ADC_prg.o
                0x0000006c                Adc_vidInit
 .text.Adc_u16ConvertChannel
                0x00000122       0x8a ./ADC_prg.o
                0x00000122                Adc_u16ConvertChannel
 .text.Dio_vidSetPinDir
                0x000001ac      0x1d6 ./Dio_prg.o
                0x000001ac                Dio_vidSetPinDir
 .text.Dio_vidSetPinVal
                0x00000382      0x1d6 ./Dio_prg.o
                0x00000382                Dio_vidSetPinVal
 .text.Dio_u8GetPinVal
                0x00000558      0x118 ./Dio_prg.o
                0x00000558                Dio_u8GetPinVal
 .text.Interrupt_vidINT0_Init
                0x00000670       0x56 ./Interrupt_prg.o
                0x00000670                Interrupt_vidINT0_Init
 .text.Interrupt_vidINT1_Init
                0x000006c6       0x56 ./Interrupt_prg.o
                0x000006c6                Interrupt_vidINT1_Init
 .text.SevenSegment_vidInit
                0x0000071c       0x8e ./Seg_prg.o
                0x0000071c                SevenSegment_vidInit
 .text.SevenSegment_vidDisplay
                0x000007aa      0x6ba ./Seg_prg.o
                0x000007aa                SevenSegment_vidDisplay
 .text.main     0x00000e64       0x5a ./main.o
                0x00000e64                main
 .text.__vector_1
                0x00000ebe       0x20 ./main.o
                0x00000ebe                __vector_1
 .text.libgcc   0x00000ede       0x18 e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodqi4.o)
                0x00000ede                __udivmodqi4
 .text.libgcc   0x00000ef6        0x0 e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000ef6                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000ef6        0x0 e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000ef6                exit
                0x00000ef6                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000ef6        0x4 e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000efa                _etext = .

.data           0x00800060        0x0 load address 0x00000efa
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./ADC_prg.o
 .data          0x00800060        0x0 ./Dio_prg.o
 .data          0x00800060        0x0 ./Interrupt_prg.o
 .data          0x00800060        0x0 ./Seg_prg.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodqi4.o)
 .data          0x00800060        0x0 e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x0
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800060        0x0 ./ADC_prg.o
 .bss           0x00800060        0x0 ./Dio_prg.o
 .bss           0x00800060        0x0 ./Interrupt_prg.o
 .bss           0x00800060        0x0 ./Seg_prg.o
 .bss           0x00800060        0x0 ./main.o
 .bss           0x00800060        0x0 e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodqi4.o)
 .bss           0x00800060        0x0 e:/khaled/_embedded system course_/imt_tools/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.bss*)
 *(COMMON)
                0x00800060                PROVIDE (__bss_end, .)
                0x00000efa                __data_load_start = LOADADDR (.data)
                0x00000efa                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800060        0x0
                0x00800060                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800060                PROVIDE (__noinit_end, .)
                0x00800060                _end = .
                0x00800060                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1704
 *(.stab)
 .stab          0x00000000      0x4bc ./ADC_prg.o
 .stab          0x000004bc      0x414 ./Dio_prg.o
                                0x63c (size before relaxing)
 .stab          0x000008d0      0x210 ./Interrupt_prg.o
                                0x438 (size before relaxing)
 .stab          0x00000ae0      0xa44 ./Seg_prg.o
                                0xbd0 (size before relaxing)
 .stab          0x00001524      0x1e0 ./main.o
                                0x414 (size before relaxing)

.stabstr        0x00000000      0xbc3
 *(.stabstr)
 .stabstr       0x00000000      0xbc3 ./ADC_prg.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Potentiometer_7Seg_Button.elf elf32-avr)
LOAD linker stubs

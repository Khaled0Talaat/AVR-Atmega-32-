
Potentiometer_7Seg_Button.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000efa  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00001704  00000000  00000000  00000f50  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000bc3  00000000  00000000  00002654  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 5f 07 	jmp	0xebe	; 0xebe <__vector_1>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 32 07 	call	0xe64	; 0xe64 <main>
  64:	0c 94 7b 07 	jmp	0xef6	; 0xef6 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <Adc_vidInit>:
 */
#include<avr/io.h>
#include"std_types.h"
#include"Bit_math.h"
void Adc_vidInit(void)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
	CLEAR_BIT(ADMUX,7);
  74:	a7 e2       	ldi	r26, 0x27	; 39
  76:	b0 e0       	ldi	r27, 0x00	; 0
  78:	e7 e2       	ldi	r30, 0x27	; 39
  7a:	f0 e0       	ldi	r31, 0x00	; 0
  7c:	80 81       	ld	r24, Z
  7e:	8f 77       	andi	r24, 0x7F	; 127
  80:	8c 93       	st	X, r24
	SET_BIT(ADMUX,6);
  82:	a7 e2       	ldi	r26, 0x27	; 39
  84:	b0 e0       	ldi	r27, 0x00	; 0
  86:	e7 e2       	ldi	r30, 0x27	; 39
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	80 81       	ld	r24, Z
  8c:	80 64       	ori	r24, 0x40	; 64
  8e:	8c 93       	st	X, r24
#if ADC_u8ADJUST==ADC_u8Right_ADJUST
	CLEAR_BIT(ADMUX,5);
  90:	a7 e2       	ldi	r26, 0x27	; 39
  92:	b0 e0       	ldi	r27, 0x00	; 0
  94:	e7 e2       	ldi	r30, 0x27	; 39
  96:	f0 e0       	ldi	r31, 0x00	; 0
  98:	80 81       	ld	r24, Z
  9a:	8f 7d       	andi	r24, 0xDF	; 223
  9c:	8c 93       	st	X, r24
#elif ADC_u8ADJUST==ADC_u8Left_ADJUST
	SET_BIT(ADMUX,5);
#endif
	SET_BIT(ADCSRA,7);
  9e:	a6 e2       	ldi	r26, 0x26	; 38
  a0:	b0 e0       	ldi	r27, 0x00	; 0
  a2:	e6 e2       	ldi	r30, 0x26	; 38
  a4:	f0 e0       	ldi	r31, 0x00	; 0
  a6:	80 81       	ld	r24, Z
  a8:	80 68       	ori	r24, 0x80	; 128
  aa:	8c 93       	st	X, r24
	SET_BIT(ADCSRA,5);
  ac:	a6 e2       	ldi	r26, 0x26	; 38
  ae:	b0 e0       	ldi	r27, 0x00	; 0
  b0:	e6 e2       	ldi	r30, 0x26	; 38
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	80 62       	ori	r24, 0x20	; 32
  b8:	8c 93       	st	X, r24
	CLEAR_BIT(ADCSRA,3);
  ba:	a6 e2       	ldi	r26, 0x26	; 38
  bc:	b0 e0       	ldi	r27, 0x00	; 0
  be:	e6 e2       	ldi	r30, 0x26	; 38
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	80 81       	ld	r24, Z
  c4:	87 7f       	andi	r24, 0xF7	; 247
  c6:	8c 93       	st	X, r24
	CLEAR_BIT(ADCSRA,2);
  c8:	a6 e2       	ldi	r26, 0x26	; 38
  ca:	b0 e0       	ldi	r27, 0x00	; 0
  cc:	e6 e2       	ldi	r30, 0x26	; 38
  ce:	f0 e0       	ldi	r31, 0x00	; 0
  d0:	80 81       	ld	r24, Z
  d2:	8b 7f       	andi	r24, 0xFB	; 251
  d4:	8c 93       	st	X, r24
	SET_BIT(ADCSRA,1);
  d6:	a6 e2       	ldi	r26, 0x26	; 38
  d8:	b0 e0       	ldi	r27, 0x00	; 0
  da:	e6 e2       	ldi	r30, 0x26	; 38
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	80 81       	ld	r24, Z
  e0:	82 60       	ori	r24, 0x02	; 2
  e2:	8c 93       	st	X, r24
	SET_BIT(ADCSRA,0);
  e4:	a6 e2       	ldi	r26, 0x26	; 38
  e6:	b0 e0       	ldi	r27, 0x00	; 0
  e8:	e6 e2       	ldi	r30, 0x26	; 38
  ea:	f0 e0       	ldi	r31, 0x00	; 0
  ec:	80 81       	ld	r24, Z
  ee:	81 60       	ori	r24, 0x01	; 1
  f0:	8c 93       	st	X, r24

	CLEAR_BIT(SFIOR,7);
  f2:	a0 e5       	ldi	r26, 0x50	; 80
  f4:	b0 e0       	ldi	r27, 0x00	; 0
  f6:	e0 e5       	ldi	r30, 0x50	; 80
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	80 81       	ld	r24, Z
  fc:	8f 77       	andi	r24, 0x7F	; 127
  fe:	8c 93       	st	X, r24
	SET_BIT(SFIOR,6);
 100:	a0 e5       	ldi	r26, 0x50	; 80
 102:	b0 e0       	ldi	r27, 0x00	; 0
 104:	e0 e5       	ldi	r30, 0x50	; 80
 106:	f0 e0       	ldi	r31, 0x00	; 0
 108:	80 81       	ld	r24, Z
 10a:	80 64       	ori	r24, 0x40	; 64
 10c:	8c 93       	st	X, r24
	CLEAR_BIT(SFIOR,5);
 10e:	a0 e5       	ldi	r26, 0x50	; 80
 110:	b0 e0       	ldi	r27, 0x00	; 0
 112:	e0 e5       	ldi	r30, 0x50	; 80
 114:	f0 e0       	ldi	r31, 0x00	; 0
 116:	80 81       	ld	r24, Z
 118:	8f 7d       	andi	r24, 0xDF	; 223
 11a:	8c 93       	st	X, r24
}
 11c:	cf 91       	pop	r28
 11e:	df 91       	pop	r29
 120:	08 95       	ret

00000122 <Adc_u16ConvertChannel>:

u16 Adc_u16ConvertChannel(u8 channel)
{
 122:	df 93       	push	r29
 124:	cf 93       	push	r28
 126:	00 d0       	rcall	.+0      	; 0x128 <Adc_u16ConvertChannel+0x6>
 128:	00 d0       	rcall	.+0      	; 0x12a <Adc_u16ConvertChannel+0x8>
 12a:	cd b7       	in	r28, 0x3d	; 61
 12c:	de b7       	in	r29, 0x3e	; 62
 12e:	8c 83       	std	Y+4, r24	; 0x04
	u8 Reg_value;
	u16 Adc_Result=0;
 130:	1a 82       	std	Y+2, r1	; 0x02
 132:	19 82       	std	Y+1, r1	; 0x01
	Reg_value=(ADMUX&0xE0)|channel;
 134:	e7 e2       	ldi	r30, 0x27	; 39
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	80 81       	ld	r24, Z
 13a:	98 2f       	mov	r25, r24
 13c:	90 7e       	andi	r25, 0xE0	; 224
 13e:	8c 81       	ldd	r24, Y+4	; 0x04
 140:	89 2b       	or	r24, r25
 142:	8b 83       	std	Y+3, r24	; 0x03
	ADMUX=Reg_value;
 144:	e7 e2       	ldi	r30, 0x27	; 39
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	8b 81       	ldd	r24, Y+3	; 0x03
 14a:	80 83       	st	Z, r24
	//SET_BIT(ADCSRA,6); Commented because of auto trigger
	while(GET_BIT(ADCSRA,4)==0);
 14c:	e6 e2       	ldi	r30, 0x26	; 38
 14e:	f0 e0       	ldi	r31, 0x00	; 0
 150:	80 81       	ld	r24, Z
 152:	82 95       	swap	r24
 154:	8f 70       	andi	r24, 0x0F	; 15
 156:	88 2f       	mov	r24, r24
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	81 70       	andi	r24, 0x01	; 1
 15c:	90 70       	andi	r25, 0x00	; 0
 15e:	00 97       	sbiw	r24, 0x00	; 0
 160:	a9 f3       	breq	.-22     	; 0x14c <Adc_u16ConvertChannel+0x2a>
	SET_BIT(ADCSRA,4);
 162:	a6 e2       	ldi	r26, 0x26	; 38
 164:	b0 e0       	ldi	r27, 0x00	; 0
 166:	e6 e2       	ldi	r30, 0x26	; 38
 168:	f0 e0       	ldi	r31, 0x00	; 0
 16a:	80 81       	ld	r24, Z
 16c:	80 61       	ori	r24, 0x10	; 16
 16e:	8c 93       	st	X, r24
#if ADC_u8ADJUST==ADC_u8Right_ADJUST
	Adc_Result=ADCL;
 170:	e4 e2       	ldi	r30, 0x24	; 36
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	80 81       	ld	r24, Z
 176:	88 2f       	mov	r24, r24
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	9a 83       	std	Y+2, r25	; 0x02
 17c:	89 83       	std	Y+1, r24	; 0x01
	Adc_Result|=(ADCH<<8);
 17e:	e5 e2       	ldi	r30, 0x25	; 37
 180:	f0 e0       	ldi	r31, 0x00	; 0
 182:	80 81       	ld	r24, Z
 184:	88 2f       	mov	r24, r24
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	98 2f       	mov	r25, r24
 18a:	88 27       	eor	r24, r24
 18c:	9c 01       	movw	r18, r24
 18e:	89 81       	ldd	r24, Y+1	; 0x01
 190:	9a 81       	ldd	r25, Y+2	; 0x02
 192:	82 2b       	or	r24, r18
 194:	93 2b       	or	r25, r19
 196:	9a 83       	std	Y+2, r25	; 0x02
 198:	89 83       	std	Y+1, r24	; 0x01
#elif ADC_u8ADJUST==ADC_u8Left_ADJUST
	Adc_Result=ADCH;
#endif
	return Adc_Result;
 19a:	89 81       	ldd	r24, Y+1	; 0x01
 19c:	9a 81       	ldd	r25, Y+2	; 0x02

}
 19e:	0f 90       	pop	r0
 1a0:	0f 90       	pop	r0
 1a2:	0f 90       	pop	r0
 1a4:	0f 90       	pop	r0
 1a6:	cf 91       	pop	r28
 1a8:	df 91       	pop	r29
 1aa:	08 95       	ret

000001ac <Dio_vidSetPinDir>:
 */
#include"std_types.h"
#include"Bit_math.h"
#include<avr/io.h>
void Dio_vidSetPinDir(u8 Pin,u8 Dir)
{
 1ac:	df 93       	push	r29
 1ae:	cf 93       	push	r28
 1b0:	00 d0       	rcall	.+0      	; 0x1b2 <Dio_vidSetPinDir+0x6>
 1b2:	00 d0       	rcall	.+0      	; 0x1b4 <Dio_vidSetPinDir+0x8>
 1b4:	00 d0       	rcall	.+0      	; 0x1b6 <Dio_vidSetPinDir+0xa>
 1b6:	cd b7       	in	r28, 0x3d	; 61
 1b8:	de b7       	in	r29, 0x3e	; 62
 1ba:	8b 83       	std	Y+3, r24	; 0x03
 1bc:	6c 83       	std	Y+4, r22	; 0x04
	u8 Loc_u8Port;
	u8 Loc_u8Pin;

	Loc_u8Port=Pin/8;
 1be:	8b 81       	ldd	r24, Y+3	; 0x03
 1c0:	86 95       	lsr	r24
 1c2:	86 95       	lsr	r24
 1c4:	86 95       	lsr	r24
 1c6:	8a 83       	std	Y+2, r24	; 0x02
	Loc_u8Pin=Pin%8;
 1c8:	8b 81       	ldd	r24, Y+3	; 0x03
 1ca:	87 70       	andi	r24, 0x07	; 7
 1cc:	89 83       	std	Y+1, r24	; 0x01

	switch(Loc_u8Port)
 1ce:	8a 81       	ldd	r24, Y+2	; 0x02
 1d0:	28 2f       	mov	r18, r24
 1d2:	30 e0       	ldi	r19, 0x00	; 0
 1d4:	3e 83       	std	Y+6, r19	; 0x06
 1d6:	2d 83       	std	Y+5, r18	; 0x05
 1d8:	8d 81       	ldd	r24, Y+5	; 0x05
 1da:	9e 81       	ldd	r25, Y+6	; 0x06
 1dc:	81 30       	cpi	r24, 0x01	; 1
 1de:	91 05       	cpc	r25, r1
 1e0:	09 f4       	brne	.+2      	; 0x1e4 <Dio_vidSetPinDir+0x38>
 1e2:	43 c0       	rjmp	.+134    	; 0x26a <Dio_vidSetPinDir+0xbe>
 1e4:	2d 81       	ldd	r18, Y+5	; 0x05
 1e6:	3e 81       	ldd	r19, Y+6	; 0x06
 1e8:	22 30       	cpi	r18, 0x02	; 2
 1ea:	31 05       	cpc	r19, r1
 1ec:	2c f4       	brge	.+10     	; 0x1f8 <Dio_vidSetPinDir+0x4c>
 1ee:	8d 81       	ldd	r24, Y+5	; 0x05
 1f0:	9e 81       	ldd	r25, Y+6	; 0x06
 1f2:	00 97       	sbiw	r24, 0x00	; 0
 1f4:	71 f0       	breq	.+28     	; 0x212 <Dio_vidSetPinDir+0x66>
 1f6:	bc c0       	rjmp	.+376    	; 0x370 <Dio_vidSetPinDir+0x1c4>
 1f8:	2d 81       	ldd	r18, Y+5	; 0x05
 1fa:	3e 81       	ldd	r19, Y+6	; 0x06
 1fc:	22 30       	cpi	r18, 0x02	; 2
 1fe:	31 05       	cpc	r19, r1
 200:	09 f4       	brne	.+2      	; 0x204 <Dio_vidSetPinDir+0x58>
 202:	5f c0       	rjmp	.+190    	; 0x2c2 <Dio_vidSetPinDir+0x116>
 204:	8d 81       	ldd	r24, Y+5	; 0x05
 206:	9e 81       	ldd	r25, Y+6	; 0x06
 208:	83 30       	cpi	r24, 0x03	; 3
 20a:	91 05       	cpc	r25, r1
 20c:	09 f4       	brne	.+2      	; 0x210 <Dio_vidSetPinDir+0x64>
 20e:	85 c0       	rjmp	.+266    	; 0x31a <Dio_vidSetPinDir+0x16e>
 210:	af c0       	rjmp	.+350    	; 0x370 <Dio_vidSetPinDir+0x1c4>
	{
	case 0:
	if(Dir==0)
 212:	8c 81       	ldd	r24, Y+4	; 0x04
 214:	88 23       	and	r24, r24
 216:	a9 f4       	brne	.+42     	; 0x242 <Dio_vidSetPinDir+0x96>
		CLEAR_BIT(DDRA,Loc_u8Pin);
 218:	aa e3       	ldi	r26, 0x3A	; 58
 21a:	b0 e0       	ldi	r27, 0x00	; 0
 21c:	ea e3       	ldi	r30, 0x3A	; 58
 21e:	f0 e0       	ldi	r31, 0x00	; 0
 220:	80 81       	ld	r24, Z
 222:	48 2f       	mov	r20, r24
 224:	89 81       	ldd	r24, Y+1	; 0x01
 226:	28 2f       	mov	r18, r24
 228:	30 e0       	ldi	r19, 0x00	; 0
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	02 2e       	mov	r0, r18
 230:	02 c0       	rjmp	.+4      	; 0x236 <Dio_vidSetPinDir+0x8a>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	0a 94       	dec	r0
 238:	e2 f7       	brpl	.-8      	; 0x232 <Dio_vidSetPinDir+0x86>
 23a:	80 95       	com	r24
 23c:	84 23       	and	r24, r20
 23e:	8c 93       	st	X, r24
 240:	97 c0       	rjmp	.+302    	; 0x370 <Dio_vidSetPinDir+0x1c4>
	else
		SET_BIT(DDRA,Loc_u8Pin);
 242:	aa e3       	ldi	r26, 0x3A	; 58
 244:	b0 e0       	ldi	r27, 0x00	; 0
 246:	ea e3       	ldi	r30, 0x3A	; 58
 248:	f0 e0       	ldi	r31, 0x00	; 0
 24a:	80 81       	ld	r24, Z
 24c:	48 2f       	mov	r20, r24
 24e:	89 81       	ldd	r24, Y+1	; 0x01
 250:	28 2f       	mov	r18, r24
 252:	30 e0       	ldi	r19, 0x00	; 0
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	02 2e       	mov	r0, r18
 25a:	02 c0       	rjmp	.+4      	; 0x260 <Dio_vidSetPinDir+0xb4>
 25c:	88 0f       	add	r24, r24
 25e:	99 1f       	adc	r25, r25
 260:	0a 94       	dec	r0
 262:	e2 f7       	brpl	.-8      	; 0x25c <Dio_vidSetPinDir+0xb0>
 264:	84 2b       	or	r24, r20
 266:	8c 93       	st	X, r24
 268:	83 c0       	rjmp	.+262    	; 0x370 <Dio_vidSetPinDir+0x1c4>
	break;

	case 1:
		if(Dir==0)
 26a:	8c 81       	ldd	r24, Y+4	; 0x04
 26c:	88 23       	and	r24, r24
 26e:	a9 f4       	brne	.+42     	; 0x29a <Dio_vidSetPinDir+0xee>
			CLEAR_BIT(DDRB,Loc_u8Pin);
 270:	a7 e3       	ldi	r26, 0x37	; 55
 272:	b0 e0       	ldi	r27, 0x00	; 0
 274:	e7 e3       	ldi	r30, 0x37	; 55
 276:	f0 e0       	ldi	r31, 0x00	; 0
 278:	80 81       	ld	r24, Z
 27a:	48 2f       	mov	r20, r24
 27c:	89 81       	ldd	r24, Y+1	; 0x01
 27e:	28 2f       	mov	r18, r24
 280:	30 e0       	ldi	r19, 0x00	; 0
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	02 2e       	mov	r0, r18
 288:	02 c0       	rjmp	.+4      	; 0x28e <Dio_vidSetPinDir+0xe2>
 28a:	88 0f       	add	r24, r24
 28c:	99 1f       	adc	r25, r25
 28e:	0a 94       	dec	r0
 290:	e2 f7       	brpl	.-8      	; 0x28a <Dio_vidSetPinDir+0xde>
 292:	80 95       	com	r24
 294:	84 23       	and	r24, r20
 296:	8c 93       	st	X, r24
 298:	6b c0       	rjmp	.+214    	; 0x370 <Dio_vidSetPinDir+0x1c4>
		else
			SET_BIT(DDRB,Loc_u8Pin);
 29a:	a7 e3       	ldi	r26, 0x37	; 55
 29c:	b0 e0       	ldi	r27, 0x00	; 0
 29e:	e7 e3       	ldi	r30, 0x37	; 55
 2a0:	f0 e0       	ldi	r31, 0x00	; 0
 2a2:	80 81       	ld	r24, Z
 2a4:	48 2f       	mov	r20, r24
 2a6:	89 81       	ldd	r24, Y+1	; 0x01
 2a8:	28 2f       	mov	r18, r24
 2aa:	30 e0       	ldi	r19, 0x00	; 0
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	02 2e       	mov	r0, r18
 2b2:	02 c0       	rjmp	.+4      	; 0x2b8 <Dio_vidSetPinDir+0x10c>
 2b4:	88 0f       	add	r24, r24
 2b6:	99 1f       	adc	r25, r25
 2b8:	0a 94       	dec	r0
 2ba:	e2 f7       	brpl	.-8      	; 0x2b4 <Dio_vidSetPinDir+0x108>
 2bc:	84 2b       	or	r24, r20
 2be:	8c 93       	st	X, r24
 2c0:	57 c0       	rjmp	.+174    	; 0x370 <Dio_vidSetPinDir+0x1c4>
		break;
	case 2:
		if(Dir==0)
 2c2:	8c 81       	ldd	r24, Y+4	; 0x04
 2c4:	88 23       	and	r24, r24
 2c6:	a9 f4       	brne	.+42     	; 0x2f2 <Dio_vidSetPinDir+0x146>
			CLEAR_BIT(DDRC,Loc_u8Pin);
 2c8:	a4 e3       	ldi	r26, 0x34	; 52
 2ca:	b0 e0       	ldi	r27, 0x00	; 0
 2cc:	e4 e3       	ldi	r30, 0x34	; 52
 2ce:	f0 e0       	ldi	r31, 0x00	; 0
 2d0:	80 81       	ld	r24, Z
 2d2:	48 2f       	mov	r20, r24
 2d4:	89 81       	ldd	r24, Y+1	; 0x01
 2d6:	28 2f       	mov	r18, r24
 2d8:	30 e0       	ldi	r19, 0x00	; 0
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	02 2e       	mov	r0, r18
 2e0:	02 c0       	rjmp	.+4      	; 0x2e6 <Dio_vidSetPinDir+0x13a>
 2e2:	88 0f       	add	r24, r24
 2e4:	99 1f       	adc	r25, r25
 2e6:	0a 94       	dec	r0
 2e8:	e2 f7       	brpl	.-8      	; 0x2e2 <Dio_vidSetPinDir+0x136>
 2ea:	80 95       	com	r24
 2ec:	84 23       	and	r24, r20
 2ee:	8c 93       	st	X, r24
 2f0:	3f c0       	rjmp	.+126    	; 0x370 <Dio_vidSetPinDir+0x1c4>
		else
			SET_BIT(DDRC,Loc_u8Pin);
 2f2:	a4 e3       	ldi	r26, 0x34	; 52
 2f4:	b0 e0       	ldi	r27, 0x00	; 0
 2f6:	e4 e3       	ldi	r30, 0x34	; 52
 2f8:	f0 e0       	ldi	r31, 0x00	; 0
 2fa:	80 81       	ld	r24, Z
 2fc:	48 2f       	mov	r20, r24
 2fe:	89 81       	ldd	r24, Y+1	; 0x01
 300:	28 2f       	mov	r18, r24
 302:	30 e0       	ldi	r19, 0x00	; 0
 304:	81 e0       	ldi	r24, 0x01	; 1
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	02 2e       	mov	r0, r18
 30a:	02 c0       	rjmp	.+4      	; 0x310 <Dio_vidSetPinDir+0x164>
 30c:	88 0f       	add	r24, r24
 30e:	99 1f       	adc	r25, r25
 310:	0a 94       	dec	r0
 312:	e2 f7       	brpl	.-8      	; 0x30c <Dio_vidSetPinDir+0x160>
 314:	84 2b       	or	r24, r20
 316:	8c 93       	st	X, r24
 318:	2b c0       	rjmp	.+86     	; 0x370 <Dio_vidSetPinDir+0x1c4>
		break;
	case 3:
		if(Dir==0)
 31a:	8c 81       	ldd	r24, Y+4	; 0x04
 31c:	88 23       	and	r24, r24
 31e:	a9 f4       	brne	.+42     	; 0x34a <Dio_vidSetPinDir+0x19e>
			CLEAR_BIT(DDRD,Loc_u8Pin);
 320:	a1 e3       	ldi	r26, 0x31	; 49
 322:	b0 e0       	ldi	r27, 0x00	; 0
 324:	e1 e3       	ldi	r30, 0x31	; 49
 326:	f0 e0       	ldi	r31, 0x00	; 0
 328:	80 81       	ld	r24, Z
 32a:	48 2f       	mov	r20, r24
 32c:	89 81       	ldd	r24, Y+1	; 0x01
 32e:	28 2f       	mov	r18, r24
 330:	30 e0       	ldi	r19, 0x00	; 0
 332:	81 e0       	ldi	r24, 0x01	; 1
 334:	90 e0       	ldi	r25, 0x00	; 0
 336:	02 2e       	mov	r0, r18
 338:	02 c0       	rjmp	.+4      	; 0x33e <Dio_vidSetPinDir+0x192>
 33a:	88 0f       	add	r24, r24
 33c:	99 1f       	adc	r25, r25
 33e:	0a 94       	dec	r0
 340:	e2 f7       	brpl	.-8      	; 0x33a <Dio_vidSetPinDir+0x18e>
 342:	80 95       	com	r24
 344:	84 23       	and	r24, r20
 346:	8c 93       	st	X, r24
 348:	13 c0       	rjmp	.+38     	; 0x370 <Dio_vidSetPinDir+0x1c4>
		else
			SET_BIT(DDRD,Loc_u8Pin);
 34a:	a1 e3       	ldi	r26, 0x31	; 49
 34c:	b0 e0       	ldi	r27, 0x00	; 0
 34e:	e1 e3       	ldi	r30, 0x31	; 49
 350:	f0 e0       	ldi	r31, 0x00	; 0
 352:	80 81       	ld	r24, Z
 354:	48 2f       	mov	r20, r24
 356:	89 81       	ldd	r24, Y+1	; 0x01
 358:	28 2f       	mov	r18, r24
 35a:	30 e0       	ldi	r19, 0x00	; 0
 35c:	81 e0       	ldi	r24, 0x01	; 1
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	02 2e       	mov	r0, r18
 362:	02 c0       	rjmp	.+4      	; 0x368 <Dio_vidSetPinDir+0x1bc>
 364:	88 0f       	add	r24, r24
 366:	99 1f       	adc	r25, r25
 368:	0a 94       	dec	r0
 36a:	e2 f7       	brpl	.-8      	; 0x364 <Dio_vidSetPinDir+0x1b8>
 36c:	84 2b       	or	r24, r20
 36e:	8c 93       	st	X, r24
		break;
	}
}
 370:	26 96       	adiw	r28, 0x06	; 6
 372:	0f b6       	in	r0, 0x3f	; 63
 374:	f8 94       	cli
 376:	de bf       	out	0x3e, r29	; 62
 378:	0f be       	out	0x3f, r0	; 63
 37a:	cd bf       	out	0x3d, r28	; 61
 37c:	cf 91       	pop	r28
 37e:	df 91       	pop	r29
 380:	08 95       	ret

00000382 <Dio_vidSetPinVal>:
void Dio_vidSetPinVal(u8 Pin,u8 Val)
{
 382:	df 93       	push	r29
 384:	cf 93       	push	r28
 386:	00 d0       	rcall	.+0      	; 0x388 <Dio_vidSetPinVal+0x6>
 388:	00 d0       	rcall	.+0      	; 0x38a <Dio_vidSetPinVal+0x8>
 38a:	00 d0       	rcall	.+0      	; 0x38c <Dio_vidSetPinVal+0xa>
 38c:	cd b7       	in	r28, 0x3d	; 61
 38e:	de b7       	in	r29, 0x3e	; 62
 390:	8b 83       	std	Y+3, r24	; 0x03
 392:	6c 83       	std	Y+4, r22	; 0x04
	u8 Loc_u8Port;
	u8 Loc_u8Pin;

		Loc_u8Port=Pin/8;
 394:	8b 81       	ldd	r24, Y+3	; 0x03
 396:	86 95       	lsr	r24
 398:	86 95       	lsr	r24
 39a:	86 95       	lsr	r24
 39c:	8a 83       	std	Y+2, r24	; 0x02
		Loc_u8Pin=Pin%8;
 39e:	8b 81       	ldd	r24, Y+3	; 0x03
 3a0:	87 70       	andi	r24, 0x07	; 7
 3a2:	89 83       	std	Y+1, r24	; 0x01

		switch(Loc_u8Port)
 3a4:	8a 81       	ldd	r24, Y+2	; 0x02
 3a6:	28 2f       	mov	r18, r24
 3a8:	30 e0       	ldi	r19, 0x00	; 0
 3aa:	3e 83       	std	Y+6, r19	; 0x06
 3ac:	2d 83       	std	Y+5, r18	; 0x05
 3ae:	8d 81       	ldd	r24, Y+5	; 0x05
 3b0:	9e 81       	ldd	r25, Y+6	; 0x06
 3b2:	81 30       	cpi	r24, 0x01	; 1
 3b4:	91 05       	cpc	r25, r1
 3b6:	09 f4       	brne	.+2      	; 0x3ba <Dio_vidSetPinVal+0x38>
 3b8:	43 c0       	rjmp	.+134    	; 0x440 <Dio_vidSetPinVal+0xbe>
 3ba:	2d 81       	ldd	r18, Y+5	; 0x05
 3bc:	3e 81       	ldd	r19, Y+6	; 0x06
 3be:	22 30       	cpi	r18, 0x02	; 2
 3c0:	31 05       	cpc	r19, r1
 3c2:	2c f4       	brge	.+10     	; 0x3ce <Dio_vidSetPinVal+0x4c>
 3c4:	8d 81       	ldd	r24, Y+5	; 0x05
 3c6:	9e 81       	ldd	r25, Y+6	; 0x06
 3c8:	00 97       	sbiw	r24, 0x00	; 0
 3ca:	71 f0       	breq	.+28     	; 0x3e8 <Dio_vidSetPinVal+0x66>
 3cc:	bc c0       	rjmp	.+376    	; 0x546 <Dio_vidSetPinVal+0x1c4>
 3ce:	2d 81       	ldd	r18, Y+5	; 0x05
 3d0:	3e 81       	ldd	r19, Y+6	; 0x06
 3d2:	22 30       	cpi	r18, 0x02	; 2
 3d4:	31 05       	cpc	r19, r1
 3d6:	09 f4       	brne	.+2      	; 0x3da <Dio_vidSetPinVal+0x58>
 3d8:	5f c0       	rjmp	.+190    	; 0x498 <Dio_vidSetPinVal+0x116>
 3da:	8d 81       	ldd	r24, Y+5	; 0x05
 3dc:	9e 81       	ldd	r25, Y+6	; 0x06
 3de:	83 30       	cpi	r24, 0x03	; 3
 3e0:	91 05       	cpc	r25, r1
 3e2:	09 f4       	brne	.+2      	; 0x3e6 <Dio_vidSetPinVal+0x64>
 3e4:	85 c0       	rjmp	.+266    	; 0x4f0 <Dio_vidSetPinVal+0x16e>
 3e6:	af c0       	rjmp	.+350    	; 0x546 <Dio_vidSetPinVal+0x1c4>
		{
		case 0:
		if(Val==0)
 3e8:	8c 81       	ldd	r24, Y+4	; 0x04
 3ea:	88 23       	and	r24, r24
 3ec:	a9 f4       	brne	.+42     	; 0x418 <Dio_vidSetPinVal+0x96>
			CLEAR_BIT(PORTA,Loc_u8Pin);
 3ee:	ab e3       	ldi	r26, 0x3B	; 59
 3f0:	b0 e0       	ldi	r27, 0x00	; 0
 3f2:	eb e3       	ldi	r30, 0x3B	; 59
 3f4:	f0 e0       	ldi	r31, 0x00	; 0
 3f6:	80 81       	ld	r24, Z
 3f8:	48 2f       	mov	r20, r24
 3fa:	89 81       	ldd	r24, Y+1	; 0x01
 3fc:	28 2f       	mov	r18, r24
 3fe:	30 e0       	ldi	r19, 0x00	; 0
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	02 2e       	mov	r0, r18
 406:	02 c0       	rjmp	.+4      	; 0x40c <Dio_vidSetPinVal+0x8a>
 408:	88 0f       	add	r24, r24
 40a:	99 1f       	adc	r25, r25
 40c:	0a 94       	dec	r0
 40e:	e2 f7       	brpl	.-8      	; 0x408 <Dio_vidSetPinVal+0x86>
 410:	80 95       	com	r24
 412:	84 23       	and	r24, r20
 414:	8c 93       	st	X, r24
 416:	97 c0       	rjmp	.+302    	; 0x546 <Dio_vidSetPinVal+0x1c4>
		else
			SET_BIT(PORTA,Loc_u8Pin);
 418:	ab e3       	ldi	r26, 0x3B	; 59
 41a:	b0 e0       	ldi	r27, 0x00	; 0
 41c:	eb e3       	ldi	r30, 0x3B	; 59
 41e:	f0 e0       	ldi	r31, 0x00	; 0
 420:	80 81       	ld	r24, Z
 422:	48 2f       	mov	r20, r24
 424:	89 81       	ldd	r24, Y+1	; 0x01
 426:	28 2f       	mov	r18, r24
 428:	30 e0       	ldi	r19, 0x00	; 0
 42a:	81 e0       	ldi	r24, 0x01	; 1
 42c:	90 e0       	ldi	r25, 0x00	; 0
 42e:	02 2e       	mov	r0, r18
 430:	02 c0       	rjmp	.+4      	; 0x436 <Dio_vidSetPinVal+0xb4>
 432:	88 0f       	add	r24, r24
 434:	99 1f       	adc	r25, r25
 436:	0a 94       	dec	r0
 438:	e2 f7       	brpl	.-8      	; 0x432 <Dio_vidSetPinVal+0xb0>
 43a:	84 2b       	or	r24, r20
 43c:	8c 93       	st	X, r24
 43e:	83 c0       	rjmp	.+262    	; 0x546 <Dio_vidSetPinVal+0x1c4>
		break;

		case 1:
			if(Val==0)
 440:	8c 81       	ldd	r24, Y+4	; 0x04
 442:	88 23       	and	r24, r24
 444:	a9 f4       	brne	.+42     	; 0x470 <Dio_vidSetPinVal+0xee>
				CLEAR_BIT(PORTB,Loc_u8Pin);
 446:	a8 e3       	ldi	r26, 0x38	; 56
 448:	b0 e0       	ldi	r27, 0x00	; 0
 44a:	e8 e3       	ldi	r30, 0x38	; 56
 44c:	f0 e0       	ldi	r31, 0x00	; 0
 44e:	80 81       	ld	r24, Z
 450:	48 2f       	mov	r20, r24
 452:	89 81       	ldd	r24, Y+1	; 0x01
 454:	28 2f       	mov	r18, r24
 456:	30 e0       	ldi	r19, 0x00	; 0
 458:	81 e0       	ldi	r24, 0x01	; 1
 45a:	90 e0       	ldi	r25, 0x00	; 0
 45c:	02 2e       	mov	r0, r18
 45e:	02 c0       	rjmp	.+4      	; 0x464 <Dio_vidSetPinVal+0xe2>
 460:	88 0f       	add	r24, r24
 462:	99 1f       	adc	r25, r25
 464:	0a 94       	dec	r0
 466:	e2 f7       	brpl	.-8      	; 0x460 <Dio_vidSetPinVal+0xde>
 468:	80 95       	com	r24
 46a:	84 23       	and	r24, r20
 46c:	8c 93       	st	X, r24
 46e:	6b c0       	rjmp	.+214    	; 0x546 <Dio_vidSetPinVal+0x1c4>
			else
				SET_BIT(PORTB,Loc_u8Pin);
 470:	a8 e3       	ldi	r26, 0x38	; 56
 472:	b0 e0       	ldi	r27, 0x00	; 0
 474:	e8 e3       	ldi	r30, 0x38	; 56
 476:	f0 e0       	ldi	r31, 0x00	; 0
 478:	80 81       	ld	r24, Z
 47a:	48 2f       	mov	r20, r24
 47c:	89 81       	ldd	r24, Y+1	; 0x01
 47e:	28 2f       	mov	r18, r24
 480:	30 e0       	ldi	r19, 0x00	; 0
 482:	81 e0       	ldi	r24, 0x01	; 1
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	02 2e       	mov	r0, r18
 488:	02 c0       	rjmp	.+4      	; 0x48e <Dio_vidSetPinVal+0x10c>
 48a:	88 0f       	add	r24, r24
 48c:	99 1f       	adc	r25, r25
 48e:	0a 94       	dec	r0
 490:	e2 f7       	brpl	.-8      	; 0x48a <Dio_vidSetPinVal+0x108>
 492:	84 2b       	or	r24, r20
 494:	8c 93       	st	X, r24
 496:	57 c0       	rjmp	.+174    	; 0x546 <Dio_vidSetPinVal+0x1c4>
			break;
		case 2:
			if(Val==0)
 498:	8c 81       	ldd	r24, Y+4	; 0x04
 49a:	88 23       	and	r24, r24
 49c:	a9 f4       	brne	.+42     	; 0x4c8 <Dio_vidSetPinVal+0x146>
				CLEAR_BIT(PORTC,Loc_u8Pin);
 49e:	a5 e3       	ldi	r26, 0x35	; 53
 4a0:	b0 e0       	ldi	r27, 0x00	; 0
 4a2:	e5 e3       	ldi	r30, 0x35	; 53
 4a4:	f0 e0       	ldi	r31, 0x00	; 0
 4a6:	80 81       	ld	r24, Z
 4a8:	48 2f       	mov	r20, r24
 4aa:	89 81       	ldd	r24, Y+1	; 0x01
 4ac:	28 2f       	mov	r18, r24
 4ae:	30 e0       	ldi	r19, 0x00	; 0
 4b0:	81 e0       	ldi	r24, 0x01	; 1
 4b2:	90 e0       	ldi	r25, 0x00	; 0
 4b4:	02 2e       	mov	r0, r18
 4b6:	02 c0       	rjmp	.+4      	; 0x4bc <Dio_vidSetPinVal+0x13a>
 4b8:	88 0f       	add	r24, r24
 4ba:	99 1f       	adc	r25, r25
 4bc:	0a 94       	dec	r0
 4be:	e2 f7       	brpl	.-8      	; 0x4b8 <Dio_vidSetPinVal+0x136>
 4c0:	80 95       	com	r24
 4c2:	84 23       	and	r24, r20
 4c4:	8c 93       	st	X, r24
 4c6:	3f c0       	rjmp	.+126    	; 0x546 <Dio_vidSetPinVal+0x1c4>
			else
				SET_BIT(PORTC,Loc_u8Pin);
 4c8:	a5 e3       	ldi	r26, 0x35	; 53
 4ca:	b0 e0       	ldi	r27, 0x00	; 0
 4cc:	e5 e3       	ldi	r30, 0x35	; 53
 4ce:	f0 e0       	ldi	r31, 0x00	; 0
 4d0:	80 81       	ld	r24, Z
 4d2:	48 2f       	mov	r20, r24
 4d4:	89 81       	ldd	r24, Y+1	; 0x01
 4d6:	28 2f       	mov	r18, r24
 4d8:	30 e0       	ldi	r19, 0x00	; 0
 4da:	81 e0       	ldi	r24, 0x01	; 1
 4dc:	90 e0       	ldi	r25, 0x00	; 0
 4de:	02 2e       	mov	r0, r18
 4e0:	02 c0       	rjmp	.+4      	; 0x4e6 <Dio_vidSetPinVal+0x164>
 4e2:	88 0f       	add	r24, r24
 4e4:	99 1f       	adc	r25, r25
 4e6:	0a 94       	dec	r0
 4e8:	e2 f7       	brpl	.-8      	; 0x4e2 <Dio_vidSetPinVal+0x160>
 4ea:	84 2b       	or	r24, r20
 4ec:	8c 93       	st	X, r24
 4ee:	2b c0       	rjmp	.+86     	; 0x546 <Dio_vidSetPinVal+0x1c4>
			break;
		case 3:
			if(Val==0)
 4f0:	8c 81       	ldd	r24, Y+4	; 0x04
 4f2:	88 23       	and	r24, r24
 4f4:	a9 f4       	brne	.+42     	; 0x520 <Dio_vidSetPinVal+0x19e>
				CLEAR_BIT(PORTD,Loc_u8Pin);
 4f6:	a2 e3       	ldi	r26, 0x32	; 50
 4f8:	b0 e0       	ldi	r27, 0x00	; 0
 4fa:	e2 e3       	ldi	r30, 0x32	; 50
 4fc:	f0 e0       	ldi	r31, 0x00	; 0
 4fe:	80 81       	ld	r24, Z
 500:	48 2f       	mov	r20, r24
 502:	89 81       	ldd	r24, Y+1	; 0x01
 504:	28 2f       	mov	r18, r24
 506:	30 e0       	ldi	r19, 0x00	; 0
 508:	81 e0       	ldi	r24, 0x01	; 1
 50a:	90 e0       	ldi	r25, 0x00	; 0
 50c:	02 2e       	mov	r0, r18
 50e:	02 c0       	rjmp	.+4      	; 0x514 <Dio_vidSetPinVal+0x192>
 510:	88 0f       	add	r24, r24
 512:	99 1f       	adc	r25, r25
 514:	0a 94       	dec	r0
 516:	e2 f7       	brpl	.-8      	; 0x510 <Dio_vidSetPinVal+0x18e>
 518:	80 95       	com	r24
 51a:	84 23       	and	r24, r20
 51c:	8c 93       	st	X, r24
 51e:	13 c0       	rjmp	.+38     	; 0x546 <Dio_vidSetPinVal+0x1c4>
			else
				SET_BIT(PORTD,Loc_u8Pin);
 520:	a2 e3       	ldi	r26, 0x32	; 50
 522:	b0 e0       	ldi	r27, 0x00	; 0
 524:	e2 e3       	ldi	r30, 0x32	; 50
 526:	f0 e0       	ldi	r31, 0x00	; 0
 528:	80 81       	ld	r24, Z
 52a:	48 2f       	mov	r20, r24
 52c:	89 81       	ldd	r24, Y+1	; 0x01
 52e:	28 2f       	mov	r18, r24
 530:	30 e0       	ldi	r19, 0x00	; 0
 532:	81 e0       	ldi	r24, 0x01	; 1
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	02 2e       	mov	r0, r18
 538:	02 c0       	rjmp	.+4      	; 0x53e <Dio_vidSetPinVal+0x1bc>
 53a:	88 0f       	add	r24, r24
 53c:	99 1f       	adc	r25, r25
 53e:	0a 94       	dec	r0
 540:	e2 f7       	brpl	.-8      	; 0x53a <Dio_vidSetPinVal+0x1b8>
 542:	84 2b       	or	r24, r20
 544:	8c 93       	st	X, r24
			break;
		}
	}
 546:	26 96       	adiw	r28, 0x06	; 6
 548:	0f b6       	in	r0, 0x3f	; 63
 54a:	f8 94       	cli
 54c:	de bf       	out	0x3e, r29	; 62
 54e:	0f be       	out	0x3f, r0	; 63
 550:	cd bf       	out	0x3d, r28	; 61
 552:	cf 91       	pop	r28
 554:	df 91       	pop	r29
 556:	08 95       	ret

00000558 <Dio_u8GetPinVal>:
u8 Dio_u8GetPinVal(u8 Pin)
{
 558:	df 93       	push	r29
 55a:	cf 93       	push	r28
 55c:	cd b7       	in	r28, 0x3d	; 61
 55e:	de b7       	in	r29, 0x3e	; 62
 560:	27 97       	sbiw	r28, 0x07	; 7
 562:	0f b6       	in	r0, 0x3f	; 63
 564:	f8 94       	cli
 566:	de bf       	out	0x3e, r29	; 62
 568:	0f be       	out	0x3f, r0	; 63
 56a:	cd bf       	out	0x3d, r28	; 61
 56c:	8b 83       	std	Y+3, r24	; 0x03
	u8 Loc_u8Port;
	u8 Loc_u8Pin;

	Loc_u8Port=Pin/8;
 56e:	8b 81       	ldd	r24, Y+3	; 0x03
 570:	86 95       	lsr	r24
 572:	86 95       	lsr	r24
 574:	86 95       	lsr	r24
 576:	8a 83       	std	Y+2, r24	; 0x02
	Loc_u8Pin=Pin%8;
 578:	8b 81       	ldd	r24, Y+3	; 0x03
 57a:	87 70       	andi	r24, 0x07	; 7
 57c:	89 83       	std	Y+1, r24	; 0x01

	switch(Loc_u8Port)
 57e:	8a 81       	ldd	r24, Y+2	; 0x02
 580:	28 2f       	mov	r18, r24
 582:	30 e0       	ldi	r19, 0x00	; 0
 584:	3e 83       	std	Y+6, r19	; 0x06
 586:	2d 83       	std	Y+5, r18	; 0x05
 588:	4d 81       	ldd	r20, Y+5	; 0x05
 58a:	5e 81       	ldd	r21, Y+6	; 0x06
 58c:	41 30       	cpi	r20, 0x01	; 1
 58e:	51 05       	cpc	r21, r1
 590:	49 f1       	breq	.+82     	; 0x5e4 <Dio_u8GetPinVal+0x8c>
 592:	8d 81       	ldd	r24, Y+5	; 0x05
 594:	9e 81       	ldd	r25, Y+6	; 0x06
 596:	82 30       	cpi	r24, 0x02	; 2
 598:	91 05       	cpc	r25, r1
 59a:	34 f4       	brge	.+12     	; 0x5a8 <Dio_u8GetPinVal+0x50>
 59c:	2d 81       	ldd	r18, Y+5	; 0x05
 59e:	3e 81       	ldd	r19, Y+6	; 0x06
 5a0:	21 15       	cp	r18, r1
 5a2:	31 05       	cpc	r19, r1
 5a4:	61 f0       	breq	.+24     	; 0x5be <Dio_u8GetPinVal+0x66>
 5a6:	57 c0       	rjmp	.+174    	; 0x656 <Dio_u8GetPinVal+0xfe>
 5a8:	4d 81       	ldd	r20, Y+5	; 0x05
 5aa:	5e 81       	ldd	r21, Y+6	; 0x06
 5ac:	42 30       	cpi	r20, 0x02	; 2
 5ae:	51 05       	cpc	r21, r1
 5b0:	61 f1       	breq	.+88     	; 0x60a <Dio_u8GetPinVal+0xb2>
 5b2:	8d 81       	ldd	r24, Y+5	; 0x05
 5b4:	9e 81       	ldd	r25, Y+6	; 0x06
 5b6:	83 30       	cpi	r24, 0x03	; 3
 5b8:	91 05       	cpc	r25, r1
 5ba:	d1 f1       	breq	.+116    	; 0x630 <Dio_u8GetPinVal+0xd8>
 5bc:	4c c0       	rjmp	.+152    	; 0x656 <Dio_u8GetPinVal+0xfe>
	{

	case 0:
		return GET_BIT(PINA,Loc_u8Pin);
 5be:	e9 e3       	ldi	r30, 0x39	; 57
 5c0:	f0 e0       	ldi	r31, 0x00	; 0
 5c2:	80 81       	ld	r24, Z
 5c4:	28 2f       	mov	r18, r24
 5c6:	30 e0       	ldi	r19, 0x00	; 0
 5c8:	89 81       	ldd	r24, Y+1	; 0x01
 5ca:	88 2f       	mov	r24, r24
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	a9 01       	movw	r20, r18
 5d0:	02 c0       	rjmp	.+4      	; 0x5d6 <Dio_u8GetPinVal+0x7e>
 5d2:	55 95       	asr	r21
 5d4:	47 95       	ror	r20
 5d6:	8a 95       	dec	r24
 5d8:	e2 f7       	brpl	.-8      	; 0x5d2 <Dio_u8GetPinVal+0x7a>
 5da:	ca 01       	movw	r24, r20
 5dc:	58 2f       	mov	r21, r24
 5de:	51 70       	andi	r21, 0x01	; 1
 5e0:	5c 83       	std	Y+4, r21	; 0x04
 5e2:	3a c0       	rjmp	.+116    	; 0x658 <Dio_u8GetPinVal+0x100>
		break;
	case 1:
		return GET_BIT(PINB,Loc_u8Pin);
 5e4:	e6 e3       	ldi	r30, 0x36	; 54
 5e6:	f0 e0       	ldi	r31, 0x00	; 0
 5e8:	80 81       	ld	r24, Z
 5ea:	28 2f       	mov	r18, r24
 5ec:	30 e0       	ldi	r19, 0x00	; 0
 5ee:	89 81       	ldd	r24, Y+1	; 0x01
 5f0:	88 2f       	mov	r24, r24
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	a9 01       	movw	r20, r18
 5f6:	02 c0       	rjmp	.+4      	; 0x5fc <Dio_u8GetPinVal+0xa4>
 5f8:	55 95       	asr	r21
 5fa:	47 95       	ror	r20
 5fc:	8a 95       	dec	r24
 5fe:	e2 f7       	brpl	.-8      	; 0x5f8 <Dio_u8GetPinVal+0xa0>
 600:	ca 01       	movw	r24, r20
 602:	58 2f       	mov	r21, r24
 604:	51 70       	andi	r21, 0x01	; 1
 606:	5c 83       	std	Y+4, r21	; 0x04
 608:	27 c0       	rjmp	.+78     	; 0x658 <Dio_u8GetPinVal+0x100>
		break;
	case 2:
		return GET_BIT(PINC,Loc_u8Pin);
 60a:	e3 e3       	ldi	r30, 0x33	; 51
 60c:	f0 e0       	ldi	r31, 0x00	; 0
 60e:	80 81       	ld	r24, Z
 610:	28 2f       	mov	r18, r24
 612:	30 e0       	ldi	r19, 0x00	; 0
 614:	89 81       	ldd	r24, Y+1	; 0x01
 616:	88 2f       	mov	r24, r24
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	a9 01       	movw	r20, r18
 61c:	02 c0       	rjmp	.+4      	; 0x622 <Dio_u8GetPinVal+0xca>
 61e:	55 95       	asr	r21
 620:	47 95       	ror	r20
 622:	8a 95       	dec	r24
 624:	e2 f7       	brpl	.-8      	; 0x61e <Dio_u8GetPinVal+0xc6>
 626:	ca 01       	movw	r24, r20
 628:	58 2f       	mov	r21, r24
 62a:	51 70       	andi	r21, 0x01	; 1
 62c:	5c 83       	std	Y+4, r21	; 0x04
 62e:	14 c0       	rjmp	.+40     	; 0x658 <Dio_u8GetPinVal+0x100>
		break;
	case 3:
		return GET_BIT(PIND,Loc_u8Pin);
 630:	e0 e3       	ldi	r30, 0x30	; 48
 632:	f0 e0       	ldi	r31, 0x00	; 0
 634:	80 81       	ld	r24, Z
 636:	28 2f       	mov	r18, r24
 638:	30 e0       	ldi	r19, 0x00	; 0
 63a:	89 81       	ldd	r24, Y+1	; 0x01
 63c:	88 2f       	mov	r24, r24
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	a9 01       	movw	r20, r18
 642:	02 c0       	rjmp	.+4      	; 0x648 <Dio_u8GetPinVal+0xf0>
 644:	55 95       	asr	r21
 646:	47 95       	ror	r20
 648:	8a 95       	dec	r24
 64a:	e2 f7       	brpl	.-8      	; 0x644 <Dio_u8GetPinVal+0xec>
 64c:	ca 01       	movw	r24, r20
 64e:	58 2f       	mov	r21, r24
 650:	51 70       	andi	r21, 0x01	; 1
 652:	5c 83       	std	Y+4, r21	; 0x04
 654:	01 c0       	rjmp	.+2      	; 0x658 <Dio_u8GetPinVal+0x100>
 656:	02 c0       	rjmp	.+4      	; 0x65c <Dio_u8GetPinVal+0x104>
	}




}
 658:	8c 81       	ldd	r24, Y+4	; 0x04
 65a:	8f 83       	std	Y+7, r24	; 0x07
 65c:	8f 81       	ldd	r24, Y+7	; 0x07
 65e:	27 96       	adiw	r28, 0x07	; 7
 660:	0f b6       	in	r0, 0x3f	; 63
 662:	f8 94       	cli
 664:	de bf       	out	0x3e, r29	; 62
 666:	0f be       	out	0x3f, r0	; 63
 668:	cd bf       	out	0x3d, r28	; 61
 66a:	cf 91       	pop	r28
 66c:	df 91       	pop	r29
 66e:	08 95       	ret

00000670 <Interrupt_vidINT0_Init>:
#include<avr/interrupt.h>
#define F_CPU 8000000
#include<util/delay.h>

void Interrupt_vidINT0_Init(void)
{
 670:	df 93       	push	r29
 672:	cf 93       	push	r28
 674:	cd b7       	in	r28, 0x3d	; 61
 676:	de b7       	in	r29, 0x3e	; 62

SET_BIT(SREG,7);/*global interrupt */
 678:	af e5       	ldi	r26, 0x5F	; 95
 67a:	b0 e0       	ldi	r27, 0x00	; 0
 67c:	ef e5       	ldi	r30, 0x5F	; 95
 67e:	f0 e0       	ldi	r31, 0x00	; 0
 680:	80 81       	ld	r24, Z
 682:	80 68       	ori	r24, 0x80	; 128
 684:	8c 93       	st	X, r24

	SET_BIT(GICR,6);/*peripheral interrupt 0*/
 686:	ab e5       	ldi	r26, 0x5B	; 91
 688:	b0 e0       	ldi	r27, 0x00	; 0
 68a:	eb e5       	ldi	r30, 0x5B	; 91
 68c:	f0 e0       	ldi	r31, 0x00	; 0
 68e:	80 81       	ld	r24, Z
 690:	80 64       	ori	r24, 0x40	; 64
 692:	8c 93       	st	X, r24
	SET_BIT(MCUCR,0);//generate interrupt at rising edge
 694:	a5 e5       	ldi	r26, 0x55	; 85
 696:	b0 e0       	ldi	r27, 0x00	; 0
 698:	e5 e5       	ldi	r30, 0x55	; 85
 69a:	f0 e0       	ldi	r31, 0x00	; 0
 69c:	80 81       	ld	r24, Z
 69e:	81 60       	ori	r24, 0x01	; 1
 6a0:	8c 93       	st	X, r24
	SET_BIT(MCUCR,1);
 6a2:	a5 e5       	ldi	r26, 0x55	; 85
 6a4:	b0 e0       	ldi	r27, 0x00	; 0
 6a6:	e5 e5       	ldi	r30, 0x55	; 85
 6a8:	f0 e0       	ldi	r31, 0x00	; 0
 6aa:	80 81       	ld	r24, Z
 6ac:	82 60       	ori	r24, 0x02	; 2
 6ae:	8c 93       	st	X, r24

	Dio_vidSetPinDir(Dio_u8Pin_26,DIO_u8INPUT);
 6b0:	8a e1       	ldi	r24, 0x1A	; 26
 6b2:	60 e0       	ldi	r22, 0x00	; 0
 6b4:	0e 94 d6 00 	call	0x1ac	; 0x1ac <Dio_vidSetPinDir>
	Dio_vidSetPinVal(Dio_u8Pin_26,DIO_u8HIGH);
 6b8:	8a e1       	ldi	r24, 0x1A	; 26
 6ba:	61 e0       	ldi	r22, 0x01	; 1
 6bc:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
}
 6c0:	cf 91       	pop	r28
 6c2:	df 91       	pop	r29
 6c4:	08 95       	ret

000006c6 <Interrupt_vidINT1_Init>:
void Interrupt_vidINT1_Init(void)
{
 6c6:	df 93       	push	r29
 6c8:	cf 93       	push	r28
 6ca:	cd b7       	in	r28, 0x3d	; 61
 6cc:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SREG,7);/*global interrupt */
 6ce:	af e5       	ldi	r26, 0x5F	; 95
 6d0:	b0 e0       	ldi	r27, 0x00	; 0
 6d2:	ef e5       	ldi	r30, 0x5F	; 95
 6d4:	f0 e0       	ldi	r31, 0x00	; 0
 6d6:	80 81       	ld	r24, Z
 6d8:	80 68       	ori	r24, 0x80	; 128
 6da:	8c 93       	st	X, r24

		SET_BIT(GICR,7);/*peripheral interrupt 1*/
 6dc:	ab e5       	ldi	r26, 0x5B	; 91
 6de:	b0 e0       	ldi	r27, 0x00	; 0
 6e0:	eb e5       	ldi	r30, 0x5B	; 91
 6e2:	f0 e0       	ldi	r31, 0x00	; 0
 6e4:	80 81       	ld	r24, Z
 6e6:	80 68       	ori	r24, 0x80	; 128
 6e8:	8c 93       	st	X, r24
		CLEAR_BIT(MCUCR,2);
 6ea:	a5 e5       	ldi	r26, 0x55	; 85
 6ec:	b0 e0       	ldi	r27, 0x00	; 0
 6ee:	e5 e5       	ldi	r30, 0x55	; 85
 6f0:	f0 e0       	ldi	r31, 0x00	; 0
 6f2:	80 81       	ld	r24, Z
 6f4:	8b 7f       	andi	r24, 0xFB	; 251
 6f6:	8c 93       	st	X, r24
		CLEAR_BIT(MCUCR,3);
 6f8:	a5 e5       	ldi	r26, 0x55	; 85
 6fa:	b0 e0       	ldi	r27, 0x00	; 0
 6fc:	e5 e5       	ldi	r30, 0x55	; 85
 6fe:	f0 e0       	ldi	r31, 0x00	; 0
 700:	80 81       	ld	r24, Z
 702:	87 7f       	andi	r24, 0xF7	; 247
 704:	8c 93       	st	X, r24
		Dio_vidSetPinDir(Dio_u8Pin_27,DIO_u8INPUT);
 706:	8b e1       	ldi	r24, 0x1B	; 27
 708:	60 e0       	ldi	r22, 0x00	; 0
 70a:	0e 94 d6 00 	call	0x1ac	; 0x1ac <Dio_vidSetPinDir>
		Dio_vidSetPinVal(Dio_u8Pin_27,DIO_u8HIGH);
 70e:	8b e1       	ldi	r24, 0x1B	; 27
 710:	61 e0       	ldi	r22, 0x01	; 1
 712:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>


}
 716:	cf 91       	pop	r28
 718:	df 91       	pop	r29
 71a:	08 95       	ret

0000071c <SevenSegment_vidInit>:
#include<util/delay.h>
#include"Seg_cfg.h"
#include"Seg_int.h"

void SevenSegment_vidInit(void)
{
 71c:	df 93       	push	r29
 71e:	cf 93       	push	r28
 720:	cd b7       	in	r28, 0x3d	; 61
 722:	de b7       	in	r29, 0x3e	; 62
	    Dio_vidSetPinDir(Seg1_u8a,DIO_u8OUTPUT);
 724:	80 e1       	ldi	r24, 0x10	; 16
 726:	61 e0       	ldi	r22, 0x01	; 1
 728:	0e 94 d6 00 	call	0x1ac	; 0x1ac <Dio_vidSetPinDir>
		Dio_vidSetPinDir(Seg1_u8b,DIO_u8OUTPUT);
 72c:	81 e1       	ldi	r24, 0x11	; 17
 72e:	61 e0       	ldi	r22, 0x01	; 1
 730:	0e 94 d6 00 	call	0x1ac	; 0x1ac <Dio_vidSetPinDir>
		Dio_vidSetPinDir(Seg1_u8c,DIO_u8OUTPUT);
 734:	82 e1       	ldi	r24, 0x12	; 18
 736:	61 e0       	ldi	r22, 0x01	; 1
 738:	0e 94 d6 00 	call	0x1ac	; 0x1ac <Dio_vidSetPinDir>
		Dio_vidSetPinDir(Seg1_u8d,DIO_u8OUTPUT);
 73c:	83 e1       	ldi	r24, 0x13	; 19
 73e:	61 e0       	ldi	r22, 0x01	; 1
 740:	0e 94 d6 00 	call	0x1ac	; 0x1ac <Dio_vidSetPinDir>
		Dio_vidSetPinDir(Seg1_u8e,DIO_u8OUTPUT);
 744:	84 e1       	ldi	r24, 0x14	; 20
 746:	61 e0       	ldi	r22, 0x01	; 1
 748:	0e 94 d6 00 	call	0x1ac	; 0x1ac <Dio_vidSetPinDir>
		Dio_vidSetPinDir(Seg1_u8f,DIO_u8OUTPUT);
 74c:	85 e1       	ldi	r24, 0x15	; 21
 74e:	61 e0       	ldi	r22, 0x01	; 1
 750:	0e 94 d6 00 	call	0x1ac	; 0x1ac <Dio_vidSetPinDir>
        Dio_vidSetPinDir(Seg1_u8g,DIO_u8OUTPUT);
 754:	86 e1       	ldi	r24, 0x16	; 22
 756:	61 e0       	ldi	r22, 0x01	; 1
 758:	0e 94 d6 00 	call	0x1ac	; 0x1ac <Dio_vidSetPinDir>
	    Dio_vidSetPinDir(Seg1_u8h,DIO_u8OUTPUT);
 75c:	87 e1       	ldi	r24, 0x17	; 23
 75e:	61 e0       	ldi	r22, 0x01	; 1
 760:	0e 94 d6 00 	call	0x1ac	; 0x1ac <Dio_vidSetPinDir>

	    Dio_vidSetPinDir(Seg2_u8a,DIO_u8OUTPUT);
 764:	88 e0       	ldi	r24, 0x08	; 8
 766:	61 e0       	ldi	r22, 0x01	; 1
 768:	0e 94 d6 00 	call	0x1ac	; 0x1ac <Dio_vidSetPinDir>
		Dio_vidSetPinDir(Seg2_u8b,DIO_u8OUTPUT);
 76c:	89 e0       	ldi	r24, 0x09	; 9
 76e:	61 e0       	ldi	r22, 0x01	; 1
 770:	0e 94 d6 00 	call	0x1ac	; 0x1ac <Dio_vidSetPinDir>
		Dio_vidSetPinDir(Seg2_u8c,DIO_u8OUTPUT);
 774:	8a e0       	ldi	r24, 0x0A	; 10
 776:	61 e0       	ldi	r22, 0x01	; 1
 778:	0e 94 d6 00 	call	0x1ac	; 0x1ac <Dio_vidSetPinDir>
		Dio_vidSetPinDir(Seg2_u8d,DIO_u8OUTPUT);
 77c:	8b e0       	ldi	r24, 0x0B	; 11
 77e:	61 e0       	ldi	r22, 0x01	; 1
 780:	0e 94 d6 00 	call	0x1ac	; 0x1ac <Dio_vidSetPinDir>
		Dio_vidSetPinDir(Seg2_u8e,DIO_u8OUTPUT);
 784:	8c e0       	ldi	r24, 0x0C	; 12
 786:	61 e0       	ldi	r22, 0x01	; 1
 788:	0e 94 d6 00 	call	0x1ac	; 0x1ac <Dio_vidSetPinDir>
		Dio_vidSetPinDir(Seg2_u8f,DIO_u8OUTPUT);
 78c:	8d e0       	ldi	r24, 0x0D	; 13
 78e:	61 e0       	ldi	r22, 0x01	; 1
 790:	0e 94 d6 00 	call	0x1ac	; 0x1ac <Dio_vidSetPinDir>
		Dio_vidSetPinDir(Seg2_u8g,DIO_u8OUTPUT);
 794:	8e e0       	ldi	r24, 0x0E	; 14
 796:	61 e0       	ldi	r22, 0x01	; 1
 798:	0e 94 d6 00 	call	0x1ac	; 0x1ac <Dio_vidSetPinDir>
	    Dio_vidSetPinDir(Seg2_u8h,DIO_u8OUTPUT);
 79c:	8f e0       	ldi	r24, 0x0F	; 15
 79e:	61 e0       	ldi	r22, 0x01	; 1
 7a0:	0e 94 d6 00 	call	0x1ac	; 0x1ac <Dio_vidSetPinDir>

}
 7a4:	cf 91       	pop	r28
 7a6:	df 91       	pop	r29
 7a8:	08 95       	ret

000007aa <SevenSegment_vidDisplay>:




void SevenSegment_vidDisplay(u8 ID,u8 Num)
{
 7aa:	df 93       	push	r29
 7ac:	cf 93       	push	r28
 7ae:	cd b7       	in	r28, 0x3d	; 61
 7b0:	de b7       	in	r29, 0x3e	; 62
 7b2:	28 97       	sbiw	r28, 0x08	; 8
 7b4:	0f b6       	in	r0, 0x3f	; 63
 7b6:	f8 94       	cli
 7b8:	de bf       	out	0x3e, r29	; 62
 7ba:	0f be       	out	0x3f, r0	; 63
 7bc:	cd bf       	out	0x3d, r28	; 61
 7be:	89 83       	std	Y+1, r24	; 0x01
 7c0:	6a 83       	std	Y+2, r22	; 0x02
	switch (ID)
 7c2:	89 81       	ldd	r24, Y+1	; 0x01
 7c4:	28 2f       	mov	r18, r24
 7c6:	30 e0       	ldi	r19, 0x00	; 0
 7c8:	38 87       	std	Y+8, r19	; 0x08
 7ca:	2f 83       	std	Y+7, r18	; 0x07
 7cc:	8f 81       	ldd	r24, Y+7	; 0x07
 7ce:	98 85       	ldd	r25, Y+8	; 0x08
 7d0:	81 30       	cpi	r24, 0x01	; 1
 7d2:	91 05       	cpc	r25, r1
 7d4:	39 f0       	breq	.+14     	; 0x7e4 <SevenSegment_vidDisplay+0x3a>
 7d6:	2f 81       	ldd	r18, Y+7	; 0x07
 7d8:	38 85       	ldd	r19, Y+8	; 0x08
 7da:	22 30       	cpi	r18, 0x02	; 2
 7dc:	31 05       	cpc	r19, r1
 7de:	09 f4       	brne	.+2      	; 0x7e2 <SevenSegment_vidDisplay+0x38>
 7e0:	9d c1       	rjmp	.+826    	; 0xb1c <__stack+0x2bd>
 7e2:	37 c3       	rjmp	.+1646   	; 0xe52 <__stack+0x5f3>
	{
	      case(1):
	        {
	    	  switch (Num)
 7e4:	8a 81       	ldd	r24, Y+2	; 0x02
 7e6:	28 2f       	mov	r18, r24
 7e8:	30 e0       	ldi	r19, 0x00	; 0
 7ea:	3e 83       	std	Y+6, r19	; 0x06
 7ec:	2d 83       	std	Y+5, r18	; 0x05
 7ee:	8d 81       	ldd	r24, Y+5	; 0x05
 7f0:	9e 81       	ldd	r25, Y+6	; 0x06
 7f2:	84 30       	cpi	r24, 0x04	; 4
 7f4:	91 05       	cpc	r25, r1
 7f6:	09 f4       	brne	.+2      	; 0x7fa <SevenSegment_vidDisplay+0x50>
 7f8:	cb c0       	rjmp	.+406    	; 0x990 <__stack+0x131>
 7fa:	2d 81       	ldd	r18, Y+5	; 0x05
 7fc:	3e 81       	ldd	r19, Y+6	; 0x06
 7fe:	25 30       	cpi	r18, 0x05	; 5
 800:	31 05       	cpc	r19, r1
 802:	ec f4       	brge	.+58     	; 0x83e <SevenSegment_vidDisplay+0x94>
 804:	8d 81       	ldd	r24, Y+5	; 0x05
 806:	9e 81       	ldd	r25, Y+6	; 0x06
 808:	81 30       	cpi	r24, 0x01	; 1
 80a:	91 05       	cpc	r25, r1
 80c:	09 f4       	brne	.+2      	; 0x810 <SevenSegment_vidDisplay+0x66>
 80e:	5d c0       	rjmp	.+186    	; 0x8ca <__stack+0x6b>
 810:	2d 81       	ldd	r18, Y+5	; 0x05
 812:	3e 81       	ldd	r19, Y+6	; 0x06
 814:	22 30       	cpi	r18, 0x02	; 2
 816:	31 05       	cpc	r19, r1
 818:	2c f4       	brge	.+10     	; 0x824 <SevenSegment_vidDisplay+0x7a>
 81a:	8d 81       	ldd	r24, Y+5	; 0x05
 81c:	9e 81       	ldd	r25, Y+6	; 0x06
 81e:	00 97       	sbiw	r24, 0x00	; 0
 820:	99 f1       	breq	.+102    	; 0x888 <__stack+0x29>
 822:	17 c3       	rjmp	.+1582   	; 0xe52 <__stack+0x5f3>
 824:	2d 81       	ldd	r18, Y+5	; 0x05
 826:	3e 81       	ldd	r19, Y+6	; 0x06
 828:	22 30       	cpi	r18, 0x02	; 2
 82a:	31 05       	cpc	r19, r1
 82c:	09 f4       	brne	.+2      	; 0x830 <SevenSegment_vidDisplay+0x86>
 82e:	6e c0       	rjmp	.+220    	; 0x90c <__stack+0xad>
 830:	8d 81       	ldd	r24, Y+5	; 0x05
 832:	9e 81       	ldd	r25, Y+6	; 0x06
 834:	83 30       	cpi	r24, 0x03	; 3
 836:	91 05       	cpc	r25, r1
 838:	09 f4       	brne	.+2      	; 0x83c <SevenSegment_vidDisplay+0x92>
 83a:	89 c0       	rjmp	.+274    	; 0x94e <__stack+0xef>
 83c:	0a c3       	rjmp	.+1556   	; 0xe52 <__stack+0x5f3>
 83e:	2d 81       	ldd	r18, Y+5	; 0x05
 840:	3e 81       	ldd	r19, Y+6	; 0x06
 842:	27 30       	cpi	r18, 0x07	; 7
 844:	31 05       	cpc	r19, r1
 846:	09 f4       	brne	.+2      	; 0x84a <SevenSegment_vidDisplay+0xa0>
 848:	06 c1       	rjmp	.+524    	; 0xa56 <__stack+0x1f7>
 84a:	8d 81       	ldd	r24, Y+5	; 0x05
 84c:	9e 81       	ldd	r25, Y+6	; 0x06
 84e:	88 30       	cpi	r24, 0x08	; 8
 850:	91 05       	cpc	r25, r1
 852:	6c f4       	brge	.+26     	; 0x86e <__stack+0xf>
 854:	2d 81       	ldd	r18, Y+5	; 0x05
 856:	3e 81       	ldd	r19, Y+6	; 0x06
 858:	25 30       	cpi	r18, 0x05	; 5
 85a:	31 05       	cpc	r19, r1
 85c:	09 f4       	brne	.+2      	; 0x860 <__stack+0x1>
 85e:	b9 c0       	rjmp	.+370    	; 0x9d2 <__stack+0x173>
 860:	8d 81       	ldd	r24, Y+5	; 0x05
 862:	9e 81       	ldd	r25, Y+6	; 0x06
 864:	86 30       	cpi	r24, 0x06	; 6
 866:	91 05       	cpc	r25, r1
 868:	09 f4       	brne	.+2      	; 0x86c <__stack+0xd>
 86a:	d4 c0       	rjmp	.+424    	; 0xa14 <__stack+0x1b5>
 86c:	f2 c2       	rjmp	.+1508   	; 0xe52 <__stack+0x5f3>
 86e:	2d 81       	ldd	r18, Y+5	; 0x05
 870:	3e 81       	ldd	r19, Y+6	; 0x06
 872:	28 30       	cpi	r18, 0x08	; 8
 874:	31 05       	cpc	r19, r1
 876:	09 f4       	brne	.+2      	; 0x87a <__stack+0x1b>
 878:	0f c1       	rjmp	.+542    	; 0xa98 <__stack+0x239>
 87a:	8d 81       	ldd	r24, Y+5	; 0x05
 87c:	9e 81       	ldd	r25, Y+6	; 0x06
 87e:	89 30       	cpi	r24, 0x09	; 9
 880:	91 05       	cpc	r25, r1
 882:	09 f4       	brne	.+2      	; 0x886 <__stack+0x27>
 884:	2a c1       	rjmp	.+596    	; 0xada <__stack+0x27b>
 886:	e5 c2       	rjmp	.+1482   	; 0xe52 <__stack+0x5f3>
	    	  {
	              	case(0):
	    	         {
	       		    Dio_vidSetPinVal(Seg1_u8a,DIO_u8HIGH);
 888:	80 e1       	ldi	r24, 0x10	; 16
 88a:	61 e0       	ldi	r22, 0x01	; 1
 88c:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       			Dio_vidSetPinVal(Seg1_u8b,DIO_u8HIGH);
 890:	81 e1       	ldi	r24, 0x11	; 17
 892:	61 e0       	ldi	r22, 0x01	; 1
 894:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       			Dio_vidSetPinVal(Seg1_u8c,DIO_u8HIGH);
 898:	82 e1       	ldi	r24, 0x12	; 18
 89a:	61 e0       	ldi	r22, 0x01	; 1
 89c:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       			Dio_vidSetPinVal(Seg1_u8d,DIO_u8HIGH);
 8a0:	83 e1       	ldi	r24, 0x13	; 19
 8a2:	61 e0       	ldi	r22, 0x01	; 1
 8a4:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       			Dio_vidSetPinVal(Seg1_u8e,DIO_u8HIGH);
 8a8:	84 e1       	ldi	r24, 0x14	; 20
 8aa:	61 e0       	ldi	r22, 0x01	; 1
 8ac:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       			Dio_vidSetPinVal(Seg1_u8f,DIO_u8HIGH);
 8b0:	85 e1       	ldi	r24, 0x15	; 21
 8b2:	61 e0       	ldi	r22, 0x01	; 1
 8b4:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       			Dio_vidSetPinVal(Seg1_u8g,DIO_u8LOW);
 8b8:	86 e1       	ldi	r24, 0x16	; 22
 8ba:	60 e0       	ldi	r22, 0x00	; 0
 8bc:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		    Dio_vidSetPinVal(Seg1_u8h,DIO_u8HIGH);
 8c0:	87 e1       	ldi	r24, 0x17	; 23
 8c2:	61 e0       	ldi	r22, 0x01	; 1
 8c4:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
 8c8:	c4 c2       	rjmp	.+1416   	; 0xe52 <__stack+0x5f3>

	                 break;
	    	         }
	             	case(1):
	    	         {
	       	     Dio_vidSetPinVal(Seg1_u8a,DIO_u8LOW);
 8ca:	80 e1       	ldi	r24, 0x10	; 16
 8cc:	60 e0       	ldi	r22, 0x00	; 0
 8ce:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8b,DIO_u8HIGH);
 8d2:	81 e1       	ldi	r24, 0x11	; 17
 8d4:	61 e0       	ldi	r22, 0x01	; 1
 8d6:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8c,DIO_u8HIGH);
 8da:	82 e1       	ldi	r24, 0x12	; 18
 8dc:	61 e0       	ldi	r22, 0x01	; 1
 8de:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8d,DIO_u8LOW);
 8e2:	83 e1       	ldi	r24, 0x13	; 19
 8e4:	60 e0       	ldi	r22, 0x00	; 0
 8e6:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8e,DIO_u8LOW);
 8ea:	84 e1       	ldi	r24, 0x14	; 20
 8ec:	60 e0       	ldi	r22, 0x00	; 0
 8ee:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8f,DIO_u8LOW);
 8f2:	85 e1       	ldi	r24, 0x15	; 21
 8f4:	60 e0       	ldi	r22, 0x00	; 0
 8f6:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8g,DIO_u8LOW);
 8fa:	86 e1       	ldi	r24, 0x16	; 22
 8fc:	60 e0       	ldi	r22, 0x00	; 0
 8fe:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8h,DIO_u8HIGH);
 902:	87 e1       	ldi	r24, 0x17	; 23
 904:	61 e0       	ldi	r22, 0x01	; 1
 906:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
 90a:	a3 c2       	rjmp	.+1350   	; 0xe52 <__stack+0x5f3>

	       		break;
	    	      }
	              	case(2):
	    	        {
	       		Dio_vidSetPinVal(Seg1_u8a,DIO_u8HIGH);
 90c:	80 e1       	ldi	r24, 0x10	; 16
 90e:	61 e0       	ldi	r22, 0x01	; 1
 910:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8b,DIO_u8HIGH);
 914:	81 e1       	ldi	r24, 0x11	; 17
 916:	61 e0       	ldi	r22, 0x01	; 1
 918:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8c,DIO_u8LOW);
 91c:	82 e1       	ldi	r24, 0x12	; 18
 91e:	60 e0       	ldi	r22, 0x00	; 0
 920:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8d,DIO_u8HIGH);
 924:	83 e1       	ldi	r24, 0x13	; 19
 926:	61 e0       	ldi	r22, 0x01	; 1
 928:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8e,DIO_u8HIGH);
 92c:	84 e1       	ldi	r24, 0x14	; 20
 92e:	61 e0       	ldi	r22, 0x01	; 1
 930:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8f,DIO_u8LOW);
 934:	85 e1       	ldi	r24, 0x15	; 21
 936:	60 e0       	ldi	r22, 0x00	; 0
 938:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8g,DIO_u8HIGH);
 93c:	86 e1       	ldi	r24, 0x16	; 22
 93e:	61 e0       	ldi	r22, 0x01	; 1
 940:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8h,DIO_u8HIGH);
 944:	87 e1       	ldi	r24, 0x17	; 23
 946:	61 e0       	ldi	r22, 0x01	; 1
 948:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
 94c:	82 c2       	rjmp	.+1284   	; 0xe52 <__stack+0x5f3>

	       		break;
	    	     }
	       	case(3):
	    	     {
	       		Dio_vidSetPinVal(Seg1_u8a,DIO_u8HIGH);
 94e:	80 e1       	ldi	r24, 0x10	; 16
 950:	61 e0       	ldi	r22, 0x01	; 1
 952:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8b,DIO_u8HIGH);
 956:	81 e1       	ldi	r24, 0x11	; 17
 958:	61 e0       	ldi	r22, 0x01	; 1
 95a:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8c,DIO_u8HIGH);
 95e:	82 e1       	ldi	r24, 0x12	; 18
 960:	61 e0       	ldi	r22, 0x01	; 1
 962:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8d,DIO_u8HIGH);
 966:	83 e1       	ldi	r24, 0x13	; 19
 968:	61 e0       	ldi	r22, 0x01	; 1
 96a:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8e,DIO_u8LOW);
 96e:	84 e1       	ldi	r24, 0x14	; 20
 970:	60 e0       	ldi	r22, 0x00	; 0
 972:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8f,DIO_u8LOW);
 976:	85 e1       	ldi	r24, 0x15	; 21
 978:	60 e0       	ldi	r22, 0x00	; 0
 97a:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8g,DIO_u8HIGH);
 97e:	86 e1       	ldi	r24, 0x16	; 22
 980:	61 e0       	ldi	r22, 0x01	; 1
 982:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8h,DIO_u8HIGH);
 986:	87 e1       	ldi	r24, 0x17	; 23
 988:	61 e0       	ldi	r22, 0x01	; 1
 98a:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
 98e:	61 c2       	rjmp	.+1218   	; 0xe52 <__stack+0x5f3>

	       		break;
	    	     }
	       	case(4):
	    	     {
	       		Dio_vidSetPinVal(Seg1_u8a,DIO_u8LOW);
 990:	80 e1       	ldi	r24, 0x10	; 16
 992:	60 e0       	ldi	r22, 0x00	; 0
 994:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8b,DIO_u8HIGH);
 998:	81 e1       	ldi	r24, 0x11	; 17
 99a:	61 e0       	ldi	r22, 0x01	; 1
 99c:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8c,DIO_u8HIGH);
 9a0:	82 e1       	ldi	r24, 0x12	; 18
 9a2:	61 e0       	ldi	r22, 0x01	; 1
 9a4:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8d,DIO_u8LOW);
 9a8:	83 e1       	ldi	r24, 0x13	; 19
 9aa:	60 e0       	ldi	r22, 0x00	; 0
 9ac:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8e,DIO_u8LOW);
 9b0:	84 e1       	ldi	r24, 0x14	; 20
 9b2:	60 e0       	ldi	r22, 0x00	; 0
 9b4:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8f,DIO_u8HIGH);
 9b8:	85 e1       	ldi	r24, 0x15	; 21
 9ba:	61 e0       	ldi	r22, 0x01	; 1
 9bc:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8g,DIO_u8HIGH);
 9c0:	86 e1       	ldi	r24, 0x16	; 22
 9c2:	61 e0       	ldi	r22, 0x01	; 1
 9c4:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8h,DIO_u8HIGH);
 9c8:	87 e1       	ldi	r24, 0x17	; 23
 9ca:	61 e0       	ldi	r22, 0x01	; 1
 9cc:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
 9d0:	40 c2       	rjmp	.+1152   	; 0xe52 <__stack+0x5f3>

	       		break;
	    	     }
	       	case(5):
	    	     {
	       		Dio_vidSetPinVal(Seg1_u8a,DIO_u8HIGH);
 9d2:	80 e1       	ldi	r24, 0x10	; 16
 9d4:	61 e0       	ldi	r22, 0x01	; 1
 9d6:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8b,DIO_u8LOW);
 9da:	81 e1       	ldi	r24, 0x11	; 17
 9dc:	60 e0       	ldi	r22, 0x00	; 0
 9de:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8c,DIO_u8HIGH);
 9e2:	82 e1       	ldi	r24, 0x12	; 18
 9e4:	61 e0       	ldi	r22, 0x01	; 1
 9e6:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8d,DIO_u8HIGH);
 9ea:	83 e1       	ldi	r24, 0x13	; 19
 9ec:	61 e0       	ldi	r22, 0x01	; 1
 9ee:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8e,DIO_u8LOW);
 9f2:	84 e1       	ldi	r24, 0x14	; 20
 9f4:	60 e0       	ldi	r22, 0x00	; 0
 9f6:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8f,DIO_u8HIGH);
 9fa:	85 e1       	ldi	r24, 0x15	; 21
 9fc:	61 e0       	ldi	r22, 0x01	; 1
 9fe:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8g,DIO_u8HIGH);
 a02:	86 e1       	ldi	r24, 0x16	; 22
 a04:	61 e0       	ldi	r22, 0x01	; 1
 a06:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8h,DIO_u8HIGH);
 a0a:	87 e1       	ldi	r24, 0x17	; 23
 a0c:	61 e0       	ldi	r22, 0x01	; 1
 a0e:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
 a12:	1f c2       	rjmp	.+1086   	; 0xe52 <__stack+0x5f3>

	       		break;
	    	     }
	       	case(6):
	    	     {
	       		Dio_vidSetPinVal(Seg1_u8a,DIO_u8HIGH);
 a14:	80 e1       	ldi	r24, 0x10	; 16
 a16:	61 e0       	ldi	r22, 0x01	; 1
 a18:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8b,DIO_u8LOW);
 a1c:	81 e1       	ldi	r24, 0x11	; 17
 a1e:	60 e0       	ldi	r22, 0x00	; 0
 a20:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8c,DIO_u8HIGH);
 a24:	82 e1       	ldi	r24, 0x12	; 18
 a26:	61 e0       	ldi	r22, 0x01	; 1
 a28:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8d,DIO_u8HIGH);
 a2c:	83 e1       	ldi	r24, 0x13	; 19
 a2e:	61 e0       	ldi	r22, 0x01	; 1
 a30:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8e,DIO_u8HIGH);
 a34:	84 e1       	ldi	r24, 0x14	; 20
 a36:	61 e0       	ldi	r22, 0x01	; 1
 a38:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8f,DIO_u8HIGH);
 a3c:	85 e1       	ldi	r24, 0x15	; 21
 a3e:	61 e0       	ldi	r22, 0x01	; 1
 a40:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8g,DIO_u8HIGH);
 a44:	86 e1       	ldi	r24, 0x16	; 22
 a46:	61 e0       	ldi	r22, 0x01	; 1
 a48:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8h,DIO_u8HIGH);
 a4c:	87 e1       	ldi	r24, 0x17	; 23
 a4e:	61 e0       	ldi	r22, 0x01	; 1
 a50:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
 a54:	fe c1       	rjmp	.+1020   	; 0xe52 <__stack+0x5f3>

	       		break;
	    	     }
	       	case(7):
	    	     {
	       		Dio_vidSetPinVal(Seg1_u8a,DIO_u8HIGH);
 a56:	80 e1       	ldi	r24, 0x10	; 16
 a58:	61 e0       	ldi	r22, 0x01	; 1
 a5a:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8b,DIO_u8HIGH);
 a5e:	81 e1       	ldi	r24, 0x11	; 17
 a60:	61 e0       	ldi	r22, 0x01	; 1
 a62:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8c,DIO_u8HIGH);
 a66:	82 e1       	ldi	r24, 0x12	; 18
 a68:	61 e0       	ldi	r22, 0x01	; 1
 a6a:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8d,DIO_u8LOW);
 a6e:	83 e1       	ldi	r24, 0x13	; 19
 a70:	60 e0       	ldi	r22, 0x00	; 0
 a72:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8e,DIO_u8LOW);
 a76:	84 e1       	ldi	r24, 0x14	; 20
 a78:	60 e0       	ldi	r22, 0x00	; 0
 a7a:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8f,DIO_u8LOW);
 a7e:	85 e1       	ldi	r24, 0x15	; 21
 a80:	60 e0       	ldi	r22, 0x00	; 0
 a82:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8g,DIO_u8LOW);
 a86:	86 e1       	ldi	r24, 0x16	; 22
 a88:	60 e0       	ldi	r22, 0x00	; 0
 a8a:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8h,DIO_u8HIGH);
 a8e:	87 e1       	ldi	r24, 0x17	; 23
 a90:	61 e0       	ldi	r22, 0x01	; 1
 a92:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
 a96:	dd c1       	rjmp	.+954    	; 0xe52 <__stack+0x5f3>

	       		break;
	    	     }
	       	case(8):
	    	     {
	       		Dio_vidSetPinVal(Seg1_u8a,DIO_u8HIGH);
 a98:	80 e1       	ldi	r24, 0x10	; 16
 a9a:	61 e0       	ldi	r22, 0x01	; 1
 a9c:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8b,DIO_u8HIGH);
 aa0:	81 e1       	ldi	r24, 0x11	; 17
 aa2:	61 e0       	ldi	r22, 0x01	; 1
 aa4:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8c,DIO_u8HIGH);
 aa8:	82 e1       	ldi	r24, 0x12	; 18
 aaa:	61 e0       	ldi	r22, 0x01	; 1
 aac:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8d,DIO_u8HIGH);
 ab0:	83 e1       	ldi	r24, 0x13	; 19
 ab2:	61 e0       	ldi	r22, 0x01	; 1
 ab4:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8e,DIO_u8HIGH);
 ab8:	84 e1       	ldi	r24, 0x14	; 20
 aba:	61 e0       	ldi	r22, 0x01	; 1
 abc:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8f,DIO_u8HIGH);
 ac0:	85 e1       	ldi	r24, 0x15	; 21
 ac2:	61 e0       	ldi	r22, 0x01	; 1
 ac4:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8g,DIO_u8HIGH);
 ac8:	86 e1       	ldi	r24, 0x16	; 22
 aca:	61 e0       	ldi	r22, 0x01	; 1
 acc:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       	    Dio_vidSetPinVal(Seg1_u8h,DIO_u8HIGH);
 ad0:	87 e1       	ldi	r24, 0x17	; 23
 ad2:	61 e0       	ldi	r22, 0x01	; 1
 ad4:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
 ad8:	bc c1       	rjmp	.+888    	; 0xe52 <__stack+0x5f3>
	       		break;
	    	     }
	       	case(9):
	    	     {

	       		Dio_vidSetPinVal(Seg1_u8a,DIO_u8HIGH);
 ada:	80 e1       	ldi	r24, 0x10	; 16
 adc:	61 e0       	ldi	r22, 0x01	; 1
 ade:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8b,DIO_u8HIGH);
 ae2:	81 e1       	ldi	r24, 0x11	; 17
 ae4:	61 e0       	ldi	r22, 0x01	; 1
 ae6:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8c,DIO_u8HIGH);
 aea:	82 e1       	ldi	r24, 0x12	; 18
 aec:	61 e0       	ldi	r22, 0x01	; 1
 aee:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8d,DIO_u8HIGH);
 af2:	83 e1       	ldi	r24, 0x13	; 19
 af4:	61 e0       	ldi	r22, 0x01	; 1
 af6:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8e,DIO_u8LOW);
 afa:	84 e1       	ldi	r24, 0x14	; 20
 afc:	60 e0       	ldi	r22, 0x00	; 0
 afe:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8f,DIO_u8HIGH);
 b02:	85 e1       	ldi	r24, 0x15	; 21
 b04:	61 e0       	ldi	r22, 0x01	; 1
 b06:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8g,DIO_u8HIGH);
 b0a:	86 e1       	ldi	r24, 0x16	; 22
 b0c:	61 e0       	ldi	r22, 0x01	; 1
 b0e:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	       		Dio_vidSetPinVal(Seg1_u8h,DIO_u8HIGH);
 b12:	87 e1       	ldi	r24, 0x17	; 23
 b14:	61 e0       	ldi	r22, 0x01	; 1
 b16:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
 b1a:	9b c1       	rjmp	.+822    	; 0xe52 <__stack+0x5f3>
	    	  break;
	        }

	     case(2):
	       {
	    	 switch (Num)
 b1c:	8a 81       	ldd	r24, Y+2	; 0x02
 b1e:	28 2f       	mov	r18, r24
 b20:	30 e0       	ldi	r19, 0x00	; 0
 b22:	3c 83       	std	Y+4, r19	; 0x04
 b24:	2b 83       	std	Y+3, r18	; 0x03
 b26:	8b 81       	ldd	r24, Y+3	; 0x03
 b28:	9c 81       	ldd	r25, Y+4	; 0x04
 b2a:	84 30       	cpi	r24, 0x04	; 4
 b2c:	91 05       	cpc	r25, r1
 b2e:	09 f4       	brne	.+2      	; 0xb32 <__stack+0x2d3>
 b30:	cb c0       	rjmp	.+406    	; 0xcc8 <__stack+0x469>
 b32:	2b 81       	ldd	r18, Y+3	; 0x03
 b34:	3c 81       	ldd	r19, Y+4	; 0x04
 b36:	25 30       	cpi	r18, 0x05	; 5
 b38:	31 05       	cpc	r19, r1
 b3a:	ec f4       	brge	.+58     	; 0xb76 <__stack+0x317>
 b3c:	8b 81       	ldd	r24, Y+3	; 0x03
 b3e:	9c 81       	ldd	r25, Y+4	; 0x04
 b40:	81 30       	cpi	r24, 0x01	; 1
 b42:	91 05       	cpc	r25, r1
 b44:	09 f4       	brne	.+2      	; 0xb48 <__stack+0x2e9>
 b46:	5d c0       	rjmp	.+186    	; 0xc02 <__stack+0x3a3>
 b48:	2b 81       	ldd	r18, Y+3	; 0x03
 b4a:	3c 81       	ldd	r19, Y+4	; 0x04
 b4c:	22 30       	cpi	r18, 0x02	; 2
 b4e:	31 05       	cpc	r19, r1
 b50:	2c f4       	brge	.+10     	; 0xb5c <__stack+0x2fd>
 b52:	8b 81       	ldd	r24, Y+3	; 0x03
 b54:	9c 81       	ldd	r25, Y+4	; 0x04
 b56:	00 97       	sbiw	r24, 0x00	; 0
 b58:	99 f1       	breq	.+102    	; 0xbc0 <__stack+0x361>
 b5a:	7b c1       	rjmp	.+758    	; 0xe52 <__stack+0x5f3>
 b5c:	2b 81       	ldd	r18, Y+3	; 0x03
 b5e:	3c 81       	ldd	r19, Y+4	; 0x04
 b60:	22 30       	cpi	r18, 0x02	; 2
 b62:	31 05       	cpc	r19, r1
 b64:	09 f4       	brne	.+2      	; 0xb68 <__stack+0x309>
 b66:	6e c0       	rjmp	.+220    	; 0xc44 <__stack+0x3e5>
 b68:	8b 81       	ldd	r24, Y+3	; 0x03
 b6a:	9c 81       	ldd	r25, Y+4	; 0x04
 b6c:	83 30       	cpi	r24, 0x03	; 3
 b6e:	91 05       	cpc	r25, r1
 b70:	09 f4       	brne	.+2      	; 0xb74 <__stack+0x315>
 b72:	89 c0       	rjmp	.+274    	; 0xc86 <__stack+0x427>
 b74:	6e c1       	rjmp	.+732    	; 0xe52 <__stack+0x5f3>
 b76:	2b 81       	ldd	r18, Y+3	; 0x03
 b78:	3c 81       	ldd	r19, Y+4	; 0x04
 b7a:	27 30       	cpi	r18, 0x07	; 7
 b7c:	31 05       	cpc	r19, r1
 b7e:	09 f4       	brne	.+2      	; 0xb82 <__stack+0x323>
 b80:	06 c1       	rjmp	.+524    	; 0xd8e <__stack+0x52f>
 b82:	8b 81       	ldd	r24, Y+3	; 0x03
 b84:	9c 81       	ldd	r25, Y+4	; 0x04
 b86:	88 30       	cpi	r24, 0x08	; 8
 b88:	91 05       	cpc	r25, r1
 b8a:	6c f4       	brge	.+26     	; 0xba6 <__stack+0x347>
 b8c:	2b 81       	ldd	r18, Y+3	; 0x03
 b8e:	3c 81       	ldd	r19, Y+4	; 0x04
 b90:	25 30       	cpi	r18, 0x05	; 5
 b92:	31 05       	cpc	r19, r1
 b94:	09 f4       	brne	.+2      	; 0xb98 <__stack+0x339>
 b96:	b9 c0       	rjmp	.+370    	; 0xd0a <__stack+0x4ab>
 b98:	8b 81       	ldd	r24, Y+3	; 0x03
 b9a:	9c 81       	ldd	r25, Y+4	; 0x04
 b9c:	86 30       	cpi	r24, 0x06	; 6
 b9e:	91 05       	cpc	r25, r1
 ba0:	09 f4       	brne	.+2      	; 0xba4 <__stack+0x345>
 ba2:	d4 c0       	rjmp	.+424    	; 0xd4c <__stack+0x4ed>
 ba4:	56 c1       	rjmp	.+684    	; 0xe52 <__stack+0x5f3>
 ba6:	2b 81       	ldd	r18, Y+3	; 0x03
 ba8:	3c 81       	ldd	r19, Y+4	; 0x04
 baa:	28 30       	cpi	r18, 0x08	; 8
 bac:	31 05       	cpc	r19, r1
 bae:	09 f4       	brne	.+2      	; 0xbb2 <__stack+0x353>
 bb0:	0f c1       	rjmp	.+542    	; 0xdd0 <__stack+0x571>
 bb2:	8b 81       	ldd	r24, Y+3	; 0x03
 bb4:	9c 81       	ldd	r25, Y+4	; 0x04
 bb6:	89 30       	cpi	r24, 0x09	; 9
 bb8:	91 05       	cpc	r25, r1
 bba:	09 f4       	brne	.+2      	; 0xbbe <__stack+0x35f>
 bbc:	2a c1       	rjmp	.+596    	; 0xe12 <__stack+0x5b3>
 bbe:	49 c1       	rjmp	.+658    	; 0xe52 <__stack+0x5f3>
	    	        {
	    	      	case(0):
	    	          {
	    	    		    Dio_vidSetPinVal(Seg2_u8a,DIO_u8HIGH);
 bc0:	88 e0       	ldi	r24, 0x08	; 8
 bc2:	61 e0       	ldi	r22, 0x01	; 1
 bc4:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      			Dio_vidSetPinVal(Seg2_u8b,DIO_u8HIGH);
 bc8:	89 e0       	ldi	r24, 0x09	; 9
 bca:	61 e0       	ldi	r22, 0x01	; 1
 bcc:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	     		    Dio_vidSetPinVal(Seg2_u8c,DIO_u8HIGH);
 bd0:	8a e0       	ldi	r24, 0x0A	; 10
 bd2:	61 e0       	ldi	r22, 0x01	; 1
 bd4:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      			Dio_vidSetPinVal(Seg2_u8d,DIO_u8HIGH);
 bd8:	8b e0       	ldi	r24, 0x0B	; 11
 bda:	61 e0       	ldi	r22, 0x01	; 1
 bdc:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      			Dio_vidSetPinVal(Seg2_u8e,DIO_u8HIGH);
 be0:	8c e0       	ldi	r24, 0x0C	; 12
 be2:	61 e0       	ldi	r22, 0x01	; 1
 be4:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      			Dio_vidSetPinVal(Seg2_u8f,DIO_u8HIGH);
 be8:	8d e0       	ldi	r24, 0x0D	; 13
 bea:	61 e0       	ldi	r22, 0x01	; 1
 bec:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      			Dio_vidSetPinVal(Seg2_u8g,DIO_u8LOW);
 bf0:	8e e0       	ldi	r24, 0x0E	; 14
 bf2:	60 e0       	ldi	r22, 0x00	; 0
 bf4:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		    Dio_vidSetPinVal(Seg2_u8h,DIO_u8HIGH);
 bf8:	8f e0       	ldi	r24, 0x0F	; 15
 bfa:	61 e0       	ldi	r22, 0x01	; 1
 bfc:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
 c00:	28 c1       	rjmp	.+592    	; 0xe52 <__stack+0x5f3>
	    	          }
	    	      	case(1):
	    	          {


	    	      	    Dio_vidSetPinVal(Seg2_u8a,DIO_u8LOW);
 c02:	88 e0       	ldi	r24, 0x08	; 8
 c04:	60 e0       	ldi	r22, 0x00	; 0
 c06:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8b,DIO_u8HIGH);
 c0a:	89 e0       	ldi	r24, 0x09	; 9
 c0c:	61 e0       	ldi	r22, 0x01	; 1
 c0e:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8c,DIO_u8HIGH);
 c12:	8a e0       	ldi	r24, 0x0A	; 10
 c14:	61 e0       	ldi	r22, 0x01	; 1
 c16:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8d,DIO_u8LOW);
 c1a:	8b e0       	ldi	r24, 0x0B	; 11
 c1c:	60 e0       	ldi	r22, 0x00	; 0
 c1e:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8e,DIO_u8LOW);
 c22:	8c e0       	ldi	r24, 0x0C	; 12
 c24:	60 e0       	ldi	r22, 0x00	; 0
 c26:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8f,DIO_u8LOW);
 c2a:	8d e0       	ldi	r24, 0x0D	; 13
 c2c:	60 e0       	ldi	r22, 0x00	; 0
 c2e:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8g,DIO_u8LOW);
 c32:	8e e0       	ldi	r24, 0x0E	; 14
 c34:	60 e0       	ldi	r22, 0x00	; 0
 c36:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8h,DIO_u8HIGH);
 c3a:	8f e0       	ldi	r24, 0x0F	; 15
 c3c:	61 e0       	ldi	r22, 0x01	; 1
 c3e:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
 c42:	07 c1       	rjmp	.+526    	; 0xe52 <__stack+0x5f3>

	    	      		break;
	    	          }
	    	      	case(2):
	    	         {
	    	      		Dio_vidSetPinVal(Seg2_u8a,DIO_u8HIGH);
 c44:	88 e0       	ldi	r24, 0x08	; 8
 c46:	61 e0       	ldi	r22, 0x01	; 1
 c48:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8b,DIO_u8HIGH);
 c4c:	89 e0       	ldi	r24, 0x09	; 9
 c4e:	61 e0       	ldi	r22, 0x01	; 1
 c50:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8c,DIO_u8LOW);
 c54:	8a e0       	ldi	r24, 0x0A	; 10
 c56:	60 e0       	ldi	r22, 0x00	; 0
 c58:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8d,DIO_u8HIGH);
 c5c:	8b e0       	ldi	r24, 0x0B	; 11
 c5e:	61 e0       	ldi	r22, 0x01	; 1
 c60:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8e,DIO_u8HIGH);
 c64:	8c e0       	ldi	r24, 0x0C	; 12
 c66:	61 e0       	ldi	r22, 0x01	; 1
 c68:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8f,DIO_u8LOW);
 c6c:	8d e0       	ldi	r24, 0x0D	; 13
 c6e:	60 e0       	ldi	r22, 0x00	; 0
 c70:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8g,DIO_u8HIGH);
 c74:	8e e0       	ldi	r24, 0x0E	; 14
 c76:	61 e0       	ldi	r22, 0x01	; 1
 c78:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8h,DIO_u8HIGH);
 c7c:	8f e0       	ldi	r24, 0x0F	; 15
 c7e:	61 e0       	ldi	r22, 0x01	; 1
 c80:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
 c84:	e6 c0       	rjmp	.+460    	; 0xe52 <__stack+0x5f3>

	    	      		break;
	    	         }
	    	      	case(3):
	    	         {
	    	      		Dio_vidSetPinVal(Seg2_u8a,DIO_u8HIGH);
 c86:	88 e0       	ldi	r24, 0x08	; 8
 c88:	61 e0       	ldi	r22, 0x01	; 1
 c8a:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8b,DIO_u8HIGH);
 c8e:	89 e0       	ldi	r24, 0x09	; 9
 c90:	61 e0       	ldi	r22, 0x01	; 1
 c92:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8c,DIO_u8HIGH);
 c96:	8a e0       	ldi	r24, 0x0A	; 10
 c98:	61 e0       	ldi	r22, 0x01	; 1
 c9a:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8d,DIO_u8HIGH);
 c9e:	8b e0       	ldi	r24, 0x0B	; 11
 ca0:	61 e0       	ldi	r22, 0x01	; 1
 ca2:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8e,DIO_u8LOW);
 ca6:	8c e0       	ldi	r24, 0x0C	; 12
 ca8:	60 e0       	ldi	r22, 0x00	; 0
 caa:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8f,DIO_u8LOW);
 cae:	8d e0       	ldi	r24, 0x0D	; 13
 cb0:	60 e0       	ldi	r22, 0x00	; 0
 cb2:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8g,DIO_u8HIGH);
 cb6:	8e e0       	ldi	r24, 0x0E	; 14
 cb8:	61 e0       	ldi	r22, 0x01	; 1
 cba:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8h,DIO_u8HIGH);
 cbe:	8f e0       	ldi	r24, 0x0F	; 15
 cc0:	61 e0       	ldi	r22, 0x01	; 1
 cc2:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
 cc6:	c5 c0       	rjmp	.+394    	; 0xe52 <__stack+0x5f3>

	    	      		break;
	    	         }
	    	      	case(4):
	    	         {
	    	      		Dio_vidSetPinVal(Seg2_u8a,DIO_u8LOW);
 cc8:	88 e0       	ldi	r24, 0x08	; 8
 cca:	60 e0       	ldi	r22, 0x00	; 0
 ccc:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8b,DIO_u8HIGH);
 cd0:	89 e0       	ldi	r24, 0x09	; 9
 cd2:	61 e0       	ldi	r22, 0x01	; 1
 cd4:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8c,DIO_u8HIGH);
 cd8:	8a e0       	ldi	r24, 0x0A	; 10
 cda:	61 e0       	ldi	r22, 0x01	; 1
 cdc:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8d,DIO_u8LOW);
 ce0:	8b e0       	ldi	r24, 0x0B	; 11
 ce2:	60 e0       	ldi	r22, 0x00	; 0
 ce4:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8e,DIO_u8LOW);
 ce8:	8c e0       	ldi	r24, 0x0C	; 12
 cea:	60 e0       	ldi	r22, 0x00	; 0
 cec:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8f,DIO_u8HIGH);
 cf0:	8d e0       	ldi	r24, 0x0D	; 13
 cf2:	61 e0       	ldi	r22, 0x01	; 1
 cf4:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8g,DIO_u8HIGH);
 cf8:	8e e0       	ldi	r24, 0x0E	; 14
 cfa:	61 e0       	ldi	r22, 0x01	; 1
 cfc:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8h,DIO_u8HIGH);
 d00:	8f e0       	ldi	r24, 0x0F	; 15
 d02:	61 e0       	ldi	r22, 0x01	; 1
 d04:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
 d08:	a4 c0       	rjmp	.+328    	; 0xe52 <__stack+0x5f3>

	    	      		break;
	    	         }
	    	      	case(5):
	    	         {
	    	      		Dio_vidSetPinVal(Seg2_u8a,DIO_u8HIGH);
 d0a:	88 e0       	ldi	r24, 0x08	; 8
 d0c:	61 e0       	ldi	r22, 0x01	; 1
 d0e:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8b,DIO_u8LOW);
 d12:	89 e0       	ldi	r24, 0x09	; 9
 d14:	60 e0       	ldi	r22, 0x00	; 0
 d16:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8c,DIO_u8HIGH);
 d1a:	8a e0       	ldi	r24, 0x0A	; 10
 d1c:	61 e0       	ldi	r22, 0x01	; 1
 d1e:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8d,DIO_u8HIGH);
 d22:	8b e0       	ldi	r24, 0x0B	; 11
 d24:	61 e0       	ldi	r22, 0x01	; 1
 d26:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8e,DIO_u8LOW);
 d2a:	8c e0       	ldi	r24, 0x0C	; 12
 d2c:	60 e0       	ldi	r22, 0x00	; 0
 d2e:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8f,DIO_u8HIGH);
 d32:	8d e0       	ldi	r24, 0x0D	; 13
 d34:	61 e0       	ldi	r22, 0x01	; 1
 d36:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8g,DIO_u8HIGH);
 d3a:	8e e0       	ldi	r24, 0x0E	; 14
 d3c:	61 e0       	ldi	r22, 0x01	; 1
 d3e:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8h,DIO_u8HIGH);
 d42:	8f e0       	ldi	r24, 0x0F	; 15
 d44:	61 e0       	ldi	r22, 0x01	; 1
 d46:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
 d4a:	83 c0       	rjmp	.+262    	; 0xe52 <__stack+0x5f3>

	    	      		break;
	    	         }
	    	      	case(6):
	    	         {
	    	      		Dio_vidSetPinVal(Seg2_u8a,DIO_u8HIGH);
 d4c:	88 e0       	ldi	r24, 0x08	; 8
 d4e:	61 e0       	ldi	r22, 0x01	; 1
 d50:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8b,DIO_u8LOW);
 d54:	89 e0       	ldi	r24, 0x09	; 9
 d56:	60 e0       	ldi	r22, 0x00	; 0
 d58:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8c,DIO_u8HIGH);
 d5c:	8a e0       	ldi	r24, 0x0A	; 10
 d5e:	61 e0       	ldi	r22, 0x01	; 1
 d60:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8d,DIO_u8HIGH);
 d64:	8b e0       	ldi	r24, 0x0B	; 11
 d66:	61 e0       	ldi	r22, 0x01	; 1
 d68:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8e,DIO_u8HIGH);
 d6c:	8c e0       	ldi	r24, 0x0C	; 12
 d6e:	61 e0       	ldi	r22, 0x01	; 1
 d70:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8f,DIO_u8HIGH);
 d74:	8d e0       	ldi	r24, 0x0D	; 13
 d76:	61 e0       	ldi	r22, 0x01	; 1
 d78:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8g,DIO_u8HIGH);
 d7c:	8e e0       	ldi	r24, 0x0E	; 14
 d7e:	61 e0       	ldi	r22, 0x01	; 1
 d80:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8h,DIO_u8HIGH);
 d84:	8f e0       	ldi	r24, 0x0F	; 15
 d86:	61 e0       	ldi	r22, 0x01	; 1
 d88:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
 d8c:	62 c0       	rjmp	.+196    	; 0xe52 <__stack+0x5f3>

	    	      		break;
	    	         }
	    	      	case(7):
	    	         {
	    	      		Dio_vidSetPinVal(Seg2_u8a,DIO_u8HIGH);
 d8e:	88 e0       	ldi	r24, 0x08	; 8
 d90:	61 e0       	ldi	r22, 0x01	; 1
 d92:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8b,DIO_u8HIGH);
 d96:	89 e0       	ldi	r24, 0x09	; 9
 d98:	61 e0       	ldi	r22, 0x01	; 1
 d9a:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8c,DIO_u8HIGH);
 d9e:	8a e0       	ldi	r24, 0x0A	; 10
 da0:	61 e0       	ldi	r22, 0x01	; 1
 da2:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8d,DIO_u8LOW);
 da6:	8b e0       	ldi	r24, 0x0B	; 11
 da8:	60 e0       	ldi	r22, 0x00	; 0
 daa:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8e,DIO_u8LOW);
 dae:	8c e0       	ldi	r24, 0x0C	; 12
 db0:	60 e0       	ldi	r22, 0x00	; 0
 db2:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8f,DIO_u8LOW);
 db6:	8d e0       	ldi	r24, 0x0D	; 13
 db8:	60 e0       	ldi	r22, 0x00	; 0
 dba:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8g,DIO_u8LOW);
 dbe:	8e e0       	ldi	r24, 0x0E	; 14
 dc0:	60 e0       	ldi	r22, 0x00	; 0
 dc2:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8h,DIO_u8HIGH);
 dc6:	8f e0       	ldi	r24, 0x0F	; 15
 dc8:	61 e0       	ldi	r22, 0x01	; 1
 dca:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
 dce:	41 c0       	rjmp	.+130    	; 0xe52 <__stack+0x5f3>

	    	      		break;
	    	         }
	    	      	case(8):
	    	         {
	    	      		Dio_vidSetPinVal(Seg2_u8a,DIO_u8HIGH);
 dd0:	88 e0       	ldi	r24, 0x08	; 8
 dd2:	61 e0       	ldi	r22, 0x01	; 1
 dd4:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8b,DIO_u8HIGH);
 dd8:	89 e0       	ldi	r24, 0x09	; 9
 dda:	61 e0       	ldi	r22, 0x01	; 1
 ddc:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8c,DIO_u8HIGH);
 de0:	8a e0       	ldi	r24, 0x0A	; 10
 de2:	61 e0       	ldi	r22, 0x01	; 1
 de4:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8d,DIO_u8HIGH);
 de8:	8b e0       	ldi	r24, 0x0B	; 11
 dea:	61 e0       	ldi	r22, 0x01	; 1
 dec:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8e,DIO_u8HIGH);
 df0:	8c e0       	ldi	r24, 0x0C	; 12
 df2:	61 e0       	ldi	r22, 0x01	; 1
 df4:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8f,DIO_u8HIGH);
 df8:	8d e0       	ldi	r24, 0x0D	; 13
 dfa:	61 e0       	ldi	r22, 0x01	; 1
 dfc:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8g,DIO_u8HIGH);
 e00:	8e e0       	ldi	r24, 0x0E	; 14
 e02:	61 e0       	ldi	r22, 0x01	; 1
 e04:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      	    Dio_vidSetPinVal(Seg2_u8h,DIO_u8HIGH);
 e08:	8f e0       	ldi	r24, 0x0F	; 15
 e0a:	61 e0       	ldi	r22, 0x01	; 1
 e0c:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
 e10:	20 c0       	rjmp	.+64     	; 0xe52 <__stack+0x5f3>
	    	      		break;
	    	         }
	    	      	case(9):
	    	         {

	    	      		Dio_vidSetPinVal(Seg2_u8a,DIO_u8HIGH);
 e12:	88 e0       	ldi	r24, 0x08	; 8
 e14:	61 e0       	ldi	r22, 0x01	; 1
 e16:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8b,DIO_u8HIGH);
 e1a:	89 e0       	ldi	r24, 0x09	; 9
 e1c:	61 e0       	ldi	r22, 0x01	; 1
 e1e:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8c,DIO_u8HIGH);
 e22:	8a e0       	ldi	r24, 0x0A	; 10
 e24:	61 e0       	ldi	r22, 0x01	; 1
 e26:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8d,DIO_u8HIGH);
 e2a:	8b e0       	ldi	r24, 0x0B	; 11
 e2c:	61 e0       	ldi	r22, 0x01	; 1
 e2e:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8e,DIO_u8LOW);
 e32:	8c e0       	ldi	r24, 0x0C	; 12
 e34:	60 e0       	ldi	r22, 0x00	; 0
 e36:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8f,DIO_u8HIGH);
 e3a:	8d e0       	ldi	r24, 0x0D	; 13
 e3c:	61 e0       	ldi	r22, 0x01	; 1
 e3e:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8g,DIO_u8HIGH);
 e42:	8e e0       	ldi	r24, 0x0E	; 14
 e44:	61 e0       	ldi	r22, 0x01	; 1
 e46:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>
	    	      		Dio_vidSetPinVal(Seg2_u8h,DIO_u8HIGH);
 e4a:	8f e0       	ldi	r24, 0x0F	; 15
 e4c:	61 e0       	ldi	r22, 0x01	; 1
 e4e:	0e 94 c1 01 	call	0x382	; 0x382 <Dio_vidSetPinVal>





}
 e52:	28 96       	adiw	r28, 0x08	; 8
 e54:	0f b6       	in	r0, 0x3f	; 63
 e56:	f8 94       	cli
 e58:	de bf       	out	0x3e, r29	; 62
 e5a:	0f be       	out	0x3f, r0	; 63
 e5c:	cd bf       	out	0x3d, r28	; 61
 e5e:	cf 91       	pop	r28
 e60:	df 91       	pop	r29
 e62:	08 95       	ret

00000e64 <main>:
#include"Adc_int.h"

#include<avr/interrupt.h>

int main(void)
{u16 Digital;
 e64:	df 93       	push	r29
 e66:	cf 93       	push	r28
 e68:	00 d0       	rcall	.+0      	; 0xe6a <main+0x6>
 e6a:	0f 92       	push	r0
 e6c:	cd b7       	in	r28, 0x3d	; 61
 e6e:	de b7       	in	r29, 0x3e	; 62
  u8 temp;

  SevenSegment_vidInit();
 e70:	0e 94 8e 03 	call	0x71c	; 0x71c <SevenSegment_vidInit>
  Adc_vidInit();
 e74:	0e 94 36 00 	call	0x6c	; 0x6c <Adc_vidInit>
  Interrupt_vidINT0_Init();
 e78:	0e 94 38 03 	call	0x670	; 0x670 <Interrupt_vidINT0_Init>

	 while(1)
	 {
		Digital=Adc_u16ConvertChannel(Channel0);
 e7c:	80 e0       	ldi	r24, 0x00	; 0
 e7e:	0e 94 91 00 	call	0x122	; 0x122 <Adc_u16ConvertChannel>
 e82:	9b 83       	std	Y+3, r25	; 0x03
 e84:	8a 83       	std	Y+2, r24	; 0x02
		temp=(Digital*50)/1024;
 e86:	2a 81       	ldd	r18, Y+2	; 0x02
 e88:	3b 81       	ldd	r19, Y+3	; 0x03
 e8a:	82 e3       	ldi	r24, 0x32	; 50
 e8c:	90 e0       	ldi	r25, 0x00	; 0
 e8e:	ac 01       	movw	r20, r24
 e90:	24 9f       	mul	r18, r20
 e92:	c0 01       	movw	r24, r0
 e94:	25 9f       	mul	r18, r21
 e96:	90 0d       	add	r25, r0
 e98:	34 9f       	mul	r19, r20
 e9a:	90 0d       	add	r25, r0
 e9c:	11 24       	eor	r1, r1
 e9e:	89 2f       	mov	r24, r25
 ea0:	99 27       	eor	r25, r25
 ea2:	86 95       	lsr	r24
 ea4:	86 95       	lsr	r24
 ea6:	89 83       	std	Y+1, r24	; 0x01
		SevenSegment_vidDisplay(Right_Seg,temp/10);
 ea8:	89 81       	ldd	r24, Y+1	; 0x01
 eaa:	9a e0       	ldi	r25, 0x0A	; 10
 eac:	69 2f       	mov	r22, r25
 eae:	0e 94 6f 07 	call	0xede	; 0xede <__udivmodqi4>
 eb2:	98 2f       	mov	r25, r24
 eb4:	82 e0       	ldi	r24, 0x02	; 2
 eb6:	69 2f       	mov	r22, r25
 eb8:	0e 94 d5 03 	call	0x7aa	; 0x7aa <SevenSegment_vidDisplay>
 ebc:	df cf       	rjmp	.-66     	; 0xe7c <main+0x18>

00000ebe <__vector_1>:
	 }

	return 0;
}
ISR(INT0_vect)
{
 ebe:	1f 92       	push	r1
 ec0:	0f 92       	push	r0
 ec2:	0f b6       	in	r0, 0x3f	; 63
 ec4:	0f 92       	push	r0
 ec6:	11 24       	eor	r1, r1
 ec8:	df 93       	push	r29
 eca:	cf 93       	push	r28
 ecc:	cd b7       	in	r28, 0x3d	; 61
 ece:	de b7       	in	r29, 0x3e	; 62

}
 ed0:	cf 91       	pop	r28
 ed2:	df 91       	pop	r29
 ed4:	0f 90       	pop	r0
 ed6:	0f be       	out	0x3f, r0	; 63
 ed8:	0f 90       	pop	r0
 eda:	1f 90       	pop	r1
 edc:	18 95       	reti

00000ede <__udivmodqi4>:
 ede:	99 1b       	sub	r25, r25
 ee0:	79 e0       	ldi	r23, 0x09	; 9
 ee2:	04 c0       	rjmp	.+8      	; 0xeec <__udivmodqi4_ep>

00000ee4 <__udivmodqi4_loop>:
 ee4:	99 1f       	adc	r25, r25
 ee6:	96 17       	cp	r25, r22
 ee8:	08 f0       	brcs	.+2      	; 0xeec <__udivmodqi4_ep>
 eea:	96 1b       	sub	r25, r22

00000eec <__udivmodqi4_ep>:
 eec:	88 1f       	adc	r24, r24
 eee:	7a 95       	dec	r23
 ef0:	c9 f7       	brne	.-14     	; 0xee4 <__udivmodqi4_loop>
 ef2:	80 95       	com	r24
 ef4:	08 95       	ret

00000ef6 <_exit>:
 ef6:	f8 94       	cli

00000ef8 <__stop_program>:
 ef8:	ff cf       	rjmp	.-2      	; 0xef8 <__stop_program>
